<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DevExpress.CodeRush.StructuralParser</name>
    </assembly>
    <members>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.Duplication.CodeDifferences.#ctor(DevExpress.CodeRush.StructuralParser.CodeAnalysis.Duplication.ConsolidationResult,DevExpress.CodeRush.StructuralParser.CodeAnalysis.Duplication.DuplicateCodeBlock,DevExpress.CodeRush.StructuralParser.CodeAnalysis.Duplication.ConsolidationOptions)">
            <summary>
            Initializes a new instance of the CodeDifferences class.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.Duplication.ConsolidationCallingSide.#ctor(DevExpress.CodeRush.StructuralParser.SourceRange,System.String,DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Initializes a new instance of the CallingSide class.
            </summary>
            <param name="replaceRange"></param>
            <param name="fileName"></param>
            <param name="callingSide"></param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.Duplication.ConsolidationDeclaration.#ctor">
            <summary>
            Initializes a new instance of the ConsolidationDeclaration class.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.Duplication.ConsolidationDeclaration.#ctor(DevExpress.CodeRush.StructuralParser.SourcePoint,System.String,DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Initializes a new instance of the ConsolidationDeclaration class.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.CodeAnalysis.Duplication.ConsolidationEngine.StorageFullName">
            <summary>
            Returns the full name of a decoupled storage.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.Duplication.ConsolidationOptions.#ctor">
            <summary>
            Initializes a new instance of the CodeConsolidationOptions class.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.CodeAnalysis.Duplication.ConsolidationResult.AvailablePositions">
            <summary>
            Gets the list of available target positions.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.CodeAnalysis.Duplication.ConsolidationResult.SourceProjects">
            <summary>
            Gets the list of project names where duplicated code blocks reside.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.Duplication.Normalization.INormalizationRule.Supports(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Checks the given language element and returns true if this rule can be applied.
            </summary>
            <param name="element">The element to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.Duplication.Normalization.INormalizationRule.Execute(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Applies rule for specified element. 
            </summary>
            <param name="element">The element to process.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.CodeAnalysis.Duplication.Normalization.INormalizationRule.EnumerationMode">
            <summary>
            Defines SourceTree enumeration mode.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.Duplication.Normalization.SourceTreeNormalizer.Translate(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Translates the specified element into another by applying specified rules.
            </summary>
            <param name="element">The element to translate</param>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.CodeAnalysis.RedundantParensCheck">
            <summary>
            Checks for redundant parens for given expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.RedundantParensCheck.CheckSubAddOperations(DevExpress.CodeRush.StructuralParser.BinaryOperatorType,DevExpress.CodeRush.StructuralParser.BinaryOperatorType)">
            <summary>
            Checks operator before parens and in parens
            </summary>
            <param name="op">Operator before parens</param>
            <param name="parensOp">Operator in parens</param>
            <returns>Returns true if parens may be opened</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.RedundantParensCheck.IsAvailable(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Returns true if redundant parens are detected on the given element.
            </summary>
            <param name="element">The element to check.</param>
            <returns>Returns true if redundant parens are detected on the given element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Helpers.MemberImplementationHelper.AddThrowStatementNode(DevExpress.CodeRush.StructuralParser.LanguageElement,DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Add the specified throw statement into a member implemenetation.
            </summary>
            <param name="member"></param>
            <param name="throwStatement"></param>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.Helpers.MissingConstructorsHelper">
            <summary>
            Provides methods for generating missing constructors.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0001">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0002">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0003">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0004">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0005">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0006">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0007">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0008">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0009">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0010">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0011">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0012">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0013">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0014">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0015">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0016">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0017">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0018">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0019">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0020">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0021">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0022">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0023">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0024">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0025">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0026">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0027">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0028">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0029">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0030">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0031">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0032">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0033">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0034">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0035">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0036">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0037">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0038">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0039">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0040">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0041">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0042">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0043">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0044">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0045">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0046">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0047">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0048">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0049">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0050">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0051">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0052">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0053">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0054">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0055">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0056">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0057">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0058">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0059">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0060">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0061">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0062">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0063">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0064">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0065">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0066">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0067">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0068">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0069">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0070">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0071">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0072">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0073">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0074">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0075">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0076">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0077">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0078">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0079">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0080">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0081">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0082">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0083">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0084">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0085">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0086">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0087">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0088">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0089">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0090">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0091">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0092">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0093">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0094">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0095">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0096">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0097">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0098">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0099">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0100">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0101">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0102">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0103">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0104">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0105">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0106">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0107">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0108">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0109">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0110">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0111">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0112">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0113">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0114">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0115">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0116">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0117">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0118">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0119">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0120">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0121">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0122">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0123">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0124">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0125">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0126">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0127">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0128">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0129">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0130">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0131">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0132">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0133">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0134">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0135">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0136">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0137">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0138">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0139">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0140">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0141">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0142">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0143">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0144">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0145">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0146">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0147">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0148">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0149">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0150">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0151">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0152">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0153">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0154">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0155">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0156">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0157">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0158">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0159">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0160">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0161">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0162">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0163">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0164">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0165">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0166">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0167">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0168">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0169">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0170">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0171">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0172">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0173">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0174">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0175">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0176">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0177">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0178">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0179">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0180">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0181">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0182">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0183">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0184">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0185">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0186">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0187">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0188">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0189">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0190">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0191">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0192">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0193">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0194">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0195">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0196">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0197">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0198">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0199">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0200">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0201">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0202">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0203">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0204">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0205">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0206">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0207">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0208">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0209">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0210">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0211">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0212">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0213">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0214">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0215">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0216">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0217">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0218">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0219">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0220">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0221">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0222">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0223">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0224">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0225">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0226">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0227">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0228">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0229">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0230">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0231">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0232">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0233">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0234">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0235">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0236">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0237">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0238">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0239">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0240">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0241">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0242">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0243">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0244">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0245">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0246">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0247">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0248">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0249">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0250">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0251">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0252">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0253">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0254">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0255">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0256">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0257">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0258">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0259">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0260">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0261">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0262">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0263">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0264">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0265">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0266">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0267">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0268">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0269">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0270">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0271">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0272">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0273">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0274">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0275">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0276">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0277">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0278">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0279">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0280">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0281">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0282">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0283">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0284">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0285">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0286">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0287">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0288">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0289">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0290">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0291">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0292">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0293">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0294">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0295">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0296">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0297">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0298">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0299">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0300">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0301">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0302">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0303">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0304">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0305">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0306">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0307">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0308">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0309">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0310">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0311">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0312">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0313">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0314">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0315">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0316">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0317">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0318">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0319">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0320">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0321">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0322">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0323">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0324">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0325">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0326">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0327">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0328">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0329">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0330">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0331">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0332">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0333">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0334">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0335">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0336">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0337">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0338">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0339">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0340">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0341">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0342">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0343">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0344">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0345">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0346">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0347">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0348">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0349">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0350">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0351">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0352">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0353">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0354">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0355">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0356">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0357">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0358">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0359">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0360">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0361">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0362">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0363">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0364">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0365">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0366">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0367">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0368">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0369">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0370">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0371">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0372">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0373">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0374">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0375">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0376">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0377">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0378">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0379">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0380">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0381">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0382">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0383">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0384">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0385">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0386">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0387">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0388">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0389">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0390">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0391">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0392">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0393">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0394">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0395">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0396">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0397">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0398">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0399">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0400">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0401">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0402">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0403">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0404">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0405">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0406">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0407">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0408">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0409">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0410">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0411">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0412">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0413">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0414">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0415">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0416">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0417">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0418">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0419">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0420">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0421">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0422">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0423">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0424">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0425">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0426">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0427">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0428">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0429">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0430">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0431">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0432">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0433">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0434">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0435">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0436">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0437">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0438">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0439">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0440">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0441">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0442">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0443">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0444">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0445">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0446">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0447">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0448">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0449">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0450">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0451">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0452">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0453">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0454">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0455">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0456">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0457">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0458">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0459">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0460">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0461">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0462">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0463">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0464">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0465">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0466">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0467">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0468">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0469">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0470">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0471">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0472">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0473">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0474">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0475">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0476">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0477">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0478">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0479">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0480">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0481">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0482">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0483">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0484">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0485">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0486">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0487">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0488">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0489">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0490">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0491">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0492">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0493">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0494">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0495">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0496">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0497">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0498">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0499">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0500">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0501">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0502">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0503">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0504">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0505">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0506">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0507">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0508">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0509">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0510">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0511">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0512">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0513">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16_Metro.img16x16_0514">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.Images.Images16x16">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0001">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0002">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0003">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0004">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0005">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0006">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0007">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0008">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0009">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0010">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0011">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0012">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0013">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0014">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0015">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0016">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0017">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0018">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0019">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0020">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0021">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0022">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0023">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0024">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0025">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0026">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0027">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0028">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0029">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0030">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0031">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0032">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0033">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0034">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0035">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0036">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0037">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0038">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0039">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0040">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0041">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0042">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0043">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0044">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0045">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0046">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0047">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0048">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0049">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0050">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0051">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0052">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0053">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0054">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0055">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0056">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0057">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0058">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0059">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0060">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0061">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0062">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0063">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0064">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0065">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0066">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0067">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0068">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0069">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0070">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0071">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0072">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0073">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0074">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0075">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0076">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0077">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0078">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0079">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0080">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0081">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0082">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0083">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0084">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0085">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0086">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0087">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0088">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0089">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0090">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0091">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0092">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0093">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0094">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0095">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0096">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0097">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0098">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0099">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0100">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0101">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0102">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0103">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0104">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0105">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0106">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0107">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0108">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0109">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0110">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0111">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0112">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0113">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0114">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0115">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0116">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0117">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0118">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0119">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0120">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0121">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0122">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0123">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0124">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0125">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0126">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0127">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0128">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0129">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0130">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0131">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0132">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0133">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0134">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0135">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0136">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0137">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0138">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0139">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0140">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0141">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0142">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0143">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0144">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0145">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0146">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0147">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0148">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0149">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0150">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0151">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0152">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0153">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0154">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0155">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0156">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0157">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0158">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0159">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0160">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0161">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0162">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0163">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0164">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0165">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0166">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0167">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0168">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0169">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0170">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0171">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0172">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0173">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0174">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0175">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0176">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0177">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0178">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0179">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0180">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0181">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0182">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0183">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0184">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0185">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0186">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0187">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0188">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0189">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0190">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0191">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0192">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0193">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0194">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0195">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0196">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0197">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0198">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0199">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0200">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0201">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0202">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0203">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0204">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0205">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0206">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0207">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0208">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0209">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0210">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0211">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0212">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0213">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0214">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0215">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0216">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0217">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0218">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0219">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0220">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0221">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0222">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0223">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0224">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0225">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0226">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0227">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0228">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0229">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0230">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0231">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0232">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0233">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0234">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0235">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0236">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0237">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0238">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0239">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0240">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0241">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0242">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0243">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0244">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0245">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0246">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0247">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0248">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0249">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0250">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0251">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0252">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0253">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0254">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0255">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0256">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0257">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0258">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0259">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0260">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0261">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0262">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0263">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0264">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0265">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0266">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0267">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0268">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0269">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0270">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0271">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0272">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0273">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0274">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0275">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0276">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0277">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0278">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0279">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0280">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0281">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0282">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0283">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0284">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0285">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0286">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0287">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0288">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0289">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0290">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0291">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0292">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0293">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0294">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0295">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0296">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0297">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0298">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0299">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0300">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0301">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0302">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0303">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0304">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0305">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0306">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0307">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0308">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0309">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0310">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0311">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0312">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0313">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0314">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0315">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0316">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0317">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0318">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0319">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0320">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0321">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0322">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0323">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0324">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0325">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0326">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0327">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0328">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0329">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0330">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0331">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0332">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0333">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0334">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0335">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0336">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0337">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0338">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0339">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0340">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0341">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0342">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0343">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0344">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0345">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0346">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0347">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0348">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0349">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0350">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0351">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0352">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0353">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0354">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0355">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0356">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0357">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0358">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0359">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0360">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0361">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0362">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0363">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0364">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0365">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0366">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0367">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0368">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0369">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0370">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0371">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0372">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0373">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0374">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0375">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0376">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0377">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0378">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0379">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0380">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0381">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0382">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0383">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0384">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0385">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0386">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0387">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0388">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0389">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0390">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0391">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0392">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0393">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0394">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0395">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0396">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0397">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0398">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0399">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0400">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0401">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0402">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0403">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0404">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0405">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0406">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0407">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0408">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0409">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0410">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0411">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0412">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0413">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0414">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0415">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0416">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0417">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0418">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0419">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0420">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0421">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0422">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0423">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0424">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0425">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0426">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0427">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0428">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0429">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0430">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0431">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0432">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0433">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0434">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0435">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0436">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0437">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0438">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0439">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0440">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0441">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0442">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0443">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0444">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0445">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0446">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0447">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0448">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0449">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0450">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0451">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0452">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0453">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0454">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0455">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0456">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0457">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0458">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0459">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0460">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0461">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0462">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0463">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0464">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0465">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0466">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0467">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0468">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0469">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0470">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0471">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0472">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0473">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0474">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0475">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0476">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0477">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0478">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0479">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0480">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0481">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0482">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0483">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0484">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0485">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0486">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0487">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0488">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0489">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0490">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0491">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0492">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0493">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0494">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0495">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0496">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0497">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0498">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0499">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0500">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0501">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0502">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0503">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0504">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0505">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0506">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0507">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0508">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0509">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0510">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0511">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0512">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0513">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Images.Images16x16.img16x16_0514">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="M:DevExpress.DXCore.CodeStyle.ICodeStyleServices.HasLocalStyle(System.String)">
            <summary>
            Return true if the passed name has local variable style based on customer settings for the active language (on the Editor\Code Style\Identifiers options page).
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:DevExpress.DXCore.CodeStyle.ICodeStyleServices.HasFieldStyle(System.String)">
            <summary>
            Return true if the passed name has field variable style based on customer settings for the active language (on the Editor\Code Style\Identifiers options page).
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:DevExpress.DXCore.CodeStyle.ICodeStyleServices.HasParamStyle(System.String)">
            <summary>
            Return true if the passed name has parameter style based on customer settings for the active language (on the Editor\Code Style\Identifiers options page).
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:DevExpress.DXCore.CodeStyle.ICodeStyleServices.SuppressDefaultAccessModifiers">
            <summary>
            Determines whether access modifiers for default visibilities are omitted from the code.
            </summary>
        </member>
        <member name="P:DevExpress.DXCore.CodeStyle.ICodeStyleServices.FormatTemplate">
            <summary>
            Determines whether code template text should be reformatted according to the current IDE formatting style options.
            </summary>
        </member>
        <member name="P:DevExpress.DXCore.CodeStyle.ICodeStyleServices.FormatSmartPaste">
            <summary>
            Determines whether smart pastes should be reformatted according to the current IDE formatting style options.
            </summary>
        </member>
        <member name="P:DevExpress.DXCore.CodeStyle.ICodeStyleServices.FormatDuplicateLine">
            <summary>
            Determines whether duplicate line actions should be reformatted according to the current IDE formatting style options.
            </summary>
        </member>
        <member name="P:DevExpress.DXCore.CodeStyle.ICodeStyleServices.FormatMultiLineEmbedding">
            <summary>
            Determines whether multi-line embeddings should be reformatted according to the current IDE formatting style options.
            </summary>
        </member>
        <member name="P:DevExpress.DXCore.CodeStyle.ICodeStyleServices.FormatSingleLineEmbedding">
            <summary>
            Determines whether single-line embeddings should be reformatted according to the current IDE formatting style options.
            </summary>
        </member>
        <member name="P:DevExpress.DXCore.CodeStyle.ICodeStyleServices.FormatAutoDeclaration">
            <summary>
            Determines whether Auto Declare code should be reformatted according to the current IDE formatting style options.
            </summary>
        </member>
        <member name="P:DevExpress.DXCore.CodeStyle.ICodeStyleServices.FormatCodeLibraryClip">
            <summary>
            Determines whether inserted code library clips should be reformatted according to the current IDE formatting style options.
            </summary>
        </member>
        <member name="P:DevExpress.DXCore.CodeStyle.ICodeStyleServices.FormatRefactoring">
            <summary>
            Determines whether code refactorings should be reformatted according to the current IDE formatting style options.
            </summary>
        </member>
        <member name="P:DevExpress.DXCore.CodeStyle.ICodeStyleServices.FormatSelectionInversion">
            <summary>
            Determines whether selection inversions should be reformatted according to the current IDE formatting style options.
            </summary>
        </member>
        <member name="P:DevExpress.DXCore.CodeStyle.ICodeStyleServices.ScopeField">
            <summary>
            Returns MemberVisibility for fields.
            </summary>
        </member>
        <member name="P:DevExpress.DXCore.CodeStyle.ICodeStyleServices.ScopeConstant">
            <summary>
            Returns MemberVisibility for constants.
            </summary>
        </member>
        <member name="P:DevExpress.DXCore.CodeStyle.ICodeStyleServices.ScopeMethod">
            <summary>
            Returns MemberVisibility for methods.
            </summary>
        </member>
        <member name="P:DevExpress.DXCore.CodeStyle.ICodeStyleServices.ScopeProperty">
            <summary>
            Returns MemberVisibility for properties.
            </summary>
        </member>
        <member name="P:DevExpress.DXCore.CodeStyle.ICodeStyleServices.ScopeEvent">
            <summary>
            Returns MemberVisibility for events.
            </summary>
        </member>
        <member name="P:DevExpress.DXCore.CodeStyle.ICodeStyleServices.ScopeType">
            <summary>
            Returns MemberVisibility for types.
            </summary>
        </member>
        <member name="P:DevExpress.DXCore.CodeStyle.ICodeStyleServices.ScopeNestedType">
            <summary>
            Returns MemberVisibility for nested types.
            </summary>
        </member>
        <member name="P:DevExpress.DXCore.CodeStyle.ICodeStyleServices.PrefixLocal">
            <summary>
            Returns the prefix associated with local variables for the active language based on customer settings (on the Editor\Code Style\Identifiers options page).
            </summary>
        </member>
        <member name="P:DevExpress.DXCore.CodeStyle.ICodeStyleServices.SuffixLocal">
            <summary>
            Returns the suffix associated with local variables for the active language based on customer settings (on the Editor\Code Style\Identifiers options page).
            </summary>
        </member>
        <member name="P:DevExpress.DXCore.CodeStyle.ICodeStyleServices.PrefixParam">
            <summary>
            Returns the prefix associated with parameters for the active language based on customer settings (on the Editor\Code Style\Identifiers options page).
            </summary>
        </member>
        <member name="P:DevExpress.DXCore.CodeStyle.ICodeStyleServices.SuffixParam">
            <summary>
            Returns the suffix associated with parameters for the active language based on customer settings (on the Editor\Code Style\Identifiers options page).
            </summary>
        </member>
        <member name="P:DevExpress.DXCore.CodeStyle.ICodeStyleServices.PrefixField">
            <summary>
            Returns the prefix associated with field variables for the active language based on customer settings (on the Editor\Code Style\Identifiers options page).
            </summary>
        </member>
        <member name="P:DevExpress.DXCore.CodeStyle.ICodeStyleServices.SuffixField">
            <summary>
            Returns the suffix associated with field variables for the active language based on customer settings (on the Editor\Code Style\Identifiers options page).
            </summary>
        </member>
        <member name="P:DevExpress.DXCore.CodeStyle.ICodeStyleServices.Formatting">
            <summary>
            Returns the IFormattingService implementer for access to code formatting rules.
            </summary>
        </member>
        <member name="P:DevExpress.DXCore.CodeStyle.ICodeStyleServices.UseMemberSections">
            <summary>
            Gets or sets the value indicating whether the p?Type? template and other similar features
            will organize created members into their own sections. See the Editor | Code Style | Member
            Sections options page to set the text for the specified sections.
            </summary>
        </member>
        <member name="P:DevExpress.DXCore.CodeStyle.ICodeStyleServices.NamespaceReferencesLocation">
            <summary>
            Gets or sets the namespace reference location value indicating where generated references should be placed to.
            </summary>
        </member>
        <member name="P:DevExpress.DXCore.CodeStyle.ICodeStyleServices.UseImplicitVariable">
            <summary>
            Return true if should use Implicit Variable (based on customer settings on the 'Editor\Code Style\Programming Style' options page).
            </summary>
        </member>
        <member name="P:DevExpress.DXCore.CodeStyle.ICodeStyleServices.UseBuiltInTypes">
            <summary>
            Return true if should use built-in types (based on customer settings on the 'Editor\Code Style\Programming Style' options page).
            </summary>
        </member>
        <member name="P:DevExpress.DXCore.CodeStyle.ICodeStyleServices.FieldScope">
            <summary>
            Returns MemberVisibility for fields.
            </summary>
        </member>
        <member name="P:DevExpress.DXCore.CodeStyle.ICodeStyleServices.ConstantScope">
            <summary>
            Returns MemberVisibility for constants.
            </summary>
        </member>
        <member name="P:DevExpress.DXCore.CodeStyle.ICodeStyleServices.MethodScope">
            <summary>
            Returns MemberVisibility for methods.
            </summary>
        </member>
        <member name="P:DevExpress.DXCore.CodeStyle.ICodeStyleServices.PropertyScope">
            <summary>
            Returns MemberVisibility for properties.
            </summary>
        </member>
        <member name="P:DevExpress.DXCore.CodeStyle.ICodeStyleServices.EventScope">
            <summary>
            Returns MemberVisibility for events.
            </summary>
        </member>
        <member name="P:DevExpress.DXCore.CodeStyle.ICodeStyleServices.TypeScope">
            <summary>
            Returns MemberVisibility for types.
            </summary>
        </member>
        <member name="P:DevExpress.DXCore.CodeStyle.ICodeStyleServices.NestedTypeScope">
            <summary>
            Returns MemberVisibility for nested types.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISolutionService.FindEnvDTEProject(System.String)">
            <summary>
            Locates the EnvDTE.Project with the specified name in the active solution. 
            If not found, null is returned.
            </summary>
            <param name="name">The name to search with.</param>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMarkupExtensionExpression">
            <summary>
            Method call expression.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteExpression">
            <summary>
            Represents lite weight expression.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteSolidElement">
            <summary>
            Represents lite weight solid element.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteElement">
            <summary>
            Represents lite weight base element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElement.#ctor">
            <summary>
            Creates new instance of LiteElement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElement.System#ICloneable#Clone">
            <summary>
            Implements IClonebale to clone this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElement.DevExpress#CodeRush#StructuralParser#IElement#GetDeclaration">
            <summary>
            Gets declaration for this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElement.DevExpress#CodeRush#StructuralParser#IElement#GetDeclaration(System.Boolean)">
            <summary>
            Gets declaration for this element.
            </summary>
            <param name="restore">
            Determines whether a LanguageElement should be restored for the found declaration.
            Pass in false if you only need to test and explore the element’s declaration (you’ll get an IElement implementer back).
            Pass in true if you will need to change the parse tree and generate new code (slower, but you’ll get a heavier LanguageElement descendant back).
            </param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElement.DevExpress#CodeRush#StructuralParser#IElement#ToLanguageElement">
            <summary>
            Gets corresponding LanguageElement for this element.
            This method will return null, if this element doesn't 
            have corresponding LanguageElement available.
            This method will return truncated language element (with no nodes for member internals) with null parent,
            if this element is located inside a referenced assembly.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElement.DevExpress#CodeRush#StructuralParser#IElement#FindAllReferences">
            <summary>
            Searches for references inside active solution.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElement.DevExpress#CodeRush#StructuralParser#IElement#FindAllReferences(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Searches for references inside the given scope.
            </summary>
            <param name="scope">The scope to search in.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The clone options.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElement.GetSignaturePart">
            <summary>
            Returns element signature part.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElement.SetParent(DevExpress.CodeRush.StructuralParser.NodeList)">
            <summary>
            Sets parent for all elements in the list.
            </summary>
            <param name="list">The list of elements.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElement.AddChild(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Adds child element.
            </summary>
            <param name="element">The element to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElement.SetParent(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Sets parent for this element.
            </summary>
            <param name="parent">The new parent to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElement.GetParent(DevExpress.CodeRush.StructuralParser.LanguageElementType,DevExpress.CodeRush.StructuralParser.LanguageElementType[])">
            <summary>
            Gets parent with the given types.
            </summary>
            <param name="type">The first element type to find.</param>
            <param name="types">The remaining element types to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElement.GetParentStatementOrVariable">
            <summary>
            Gets parent statement or variable.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElement.FindChildByName(System.String)">
            <summary>
            Finds child element by it's name.
            </summary>
            <param name="name">The name of the child element to search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElement.IsParentedBy(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns true if this element is parented by the given element.
            </summary>
            <param name="element">The element to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElement.GetAssemblyModel">
            <summary>
            Gets assembly model for the element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElement.Clone">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElement.AddLocation(DevExpress.CodeRush.StructuralParser.SourceFile,DevExpress.CodeRush.StructuralParser.TextRange,DevExpress.CodeRush.StructuralParser.TextRange)">
            <summary>
            Adds specified location to the element.
            </summary>
            <param name="file">The file that contains element.</param>
            <param name="range">The element range.</param>
            <param name="nameRange">The element name range.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElement.RemoveLocation(DevExpress.CodeRush.StructuralParser.SourceFile)">
            <summary>
            Removes specified location from the element.
            </summary>
            <param name="file">The file that contains element.</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElement.RemoveLocationAt(System.Int32)">
            <summary>
            Removes specified location from the element.
            </summary>
            <param name="index">The index of the location to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElement.DevExpress#CodeRush#StructuralParser#IElementModifier#ReplaceChild(DevExpress.CodeRush.StructuralParser.IElement,DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Repplaces old element with new one.
            </summary>
            <param name="oldNode"></param>
            <param name="newNode"></param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElement.DevExpress#CodeRush#StructuralParser#IElementModifier#SetFakeNode(System.Boolean)">
            <summary>
            Sets IsFakeNode property to the given value.
            </summary>
            <param name="isFakeNode">The value to set.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElement.Name">
            <summary>
            Gets element name.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElement.Parent">
            <summary>
            Gets element parent.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElement.ParentType">
            <summary>
            Gets parent type of element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElement.ParentEvent">
            <summary>
            Gets parent event for the element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElement.ParentMember">
            <summary>
            Gets parent member for the element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElement.ParentMethod">
            <summary>
            Gets parent method for the element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElement.ParentProperty">
            <summary>
            Gets parent event for the element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElement.ParentNamespace">
            <summary>
            Gets parent namespace of the element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElement.ParentMethodOrAccessor">
            <summary>
            Gets parent method or accessor.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElement.ParentMethodOrPropertyOrEvent">
            <summary>
            Gets parent method or property or event.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElement.Project">
            <summary>
            Gets project for the element.
            Note that elements that are not
            inside any project will return null.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElement.Solution">
            <summary>
            Gets solution for the element.
            Note that elements that are not
            inside any solution will return null.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElement.AssemblyModel">
            <summary>
            Gets assembly model for the element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElement.Children">
            <summary>
            Gets the element children.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElement.AllChildren">
            <summary>
            Gets all children of this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElement.CodeChildren">
            <summary>
            Gets children elements located in the body of the current element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElement.Files">
            <summary>
            Gets element file. In case of partial 
            elements there are more than one file.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElement.FirstFile">
            <summary>
            Gets first file where the element is declared.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElement.Ranges">
            <summary>
            Gets element range. In case of partial 
            elements there are more than one range.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElement.FirstRange">
            <summary>
            Gets first TextRange that indicate where 
            the element appears in the code.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElement.NameRanges">
            <summary>
            Gets element name range. In case of partial 
            elements there are more than one name range.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElement.FirstNameRange">
            <summary>
            Gets first TextRange that indicate where 
            the element name appears in the code.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElement.FullName">
            <summary>
            Gets full signature name
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElement.RootNamespaceFullName">
            <summary>
            Gets full signature name with added root namespace name
            at the beggining.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElement.NextSibling">
            <summary>
            Gets the next sibling to this element, or null if no siblings follow this element.
            </summary>		
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElement.PreviousSibling">
            <summary>
            Returns the previous sibling to this element, or null if no siblings precede this element.
            </summary>		
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElement.CompletesPrevious">
            <summary>
            True if this language element connects to the previous statement or preprocessor directive 
            (e.g., catch, finally, #if, #elif, #warning, etc.).
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElement.ImageIndex">
            <summary>
            Returns element image index.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElement.InReferencedAssembly">
            <summary>
            Returns true if this element is declared inside a referenced assembly.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElement.IsMember">
            <summary>
            Returns true if this element is a member of a type declaration
            (e.g., method, property, event, or field).
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElement.IsNestedType">
            <summary>
            Returns true if this element is a type declaration nested inside another type declaration.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSolidElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteSolidElement.Files">
            <summary>
            Gets element file. In case of partial 
            elements there are more than one file.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteSolidElement.FirstFile">
            <summary>
            Gets first file where the element is declared.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteSolidElement.NameRanges">
            <summary>
            Gets element name range. In case of partial 
            elements there are more than one name range.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteSolidElement.FirstNameRange">
            <summary>
            Gets first TextRange that indicate where 
            the element name appears in the code.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteSolidElement.Ranges">
            <summary>
            Gets element range. In case of partial 
            elements there are more than one range.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteSolidElement.FirstRange">
            <summary>
            Gets first TextRange that indicate where 
            the element appears in the code.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteExpression.#ctor">
            <summary>
            Creates new instance of LiteExpression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteExpression.Is(System.String)">
            <summary>
            Returns true if Type of this element is the same as, or 
            descends from, the specified type.
            Returns false otherwise.
            </summary>
            <param name="fullTypeName">Full type name of the type to check.</param>
            <returns>
            Returns true if Type of this element is the same as, or 
            descends from, the specified type.
            Returns false otherwise.
            </returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteExpression.Is(DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Returns true if type of this element is the same as, or descends from, 
            the specified ITypeElement.
            Returns false otherwise.
            </summary>
            <param name="type">The ITypeElement to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteExpression.Is(System.Type)">
            <summary>
            Returns true if type of this element is the same as, or descends from, 
            the specified Type.
            Returns false otherwise.
            </summary>
            <param name="type">The Type to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteExpression.Is(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,System.String)">
            <summary>
            Returns true if this type element is the same as, or descends from, 
            the specified type.
            Returns false otherwise.
            </summary>
            <param name="resolver">The source tree resolver instance to use.</param>
            <param name="fullTypeName">The full name (e.g., "System.Drawing.Point") of 
            the type to compare against.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteExpression.IsStatement">
            <summary>
            Returns true if this expression is used as statement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMarkupExtensionExpression.#ctor">
            <summary>
            Creates a new instance of LiteMarkupExtensionExpression
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMarkupExtensionExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteMarkupExtensionExpression
            </summary>
            <param name="qualifier"></param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMarkupExtensionExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMarkupExtensionExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMarkupExtensionExpression.SetQualifier(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets qualifier expression for this element.
            </summary>
            <param name="qualifier">The qualifier expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMarkupExtensionExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMarkupExtensionExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMarkupExtensionExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMarkupExtensionExpression.AddArgument(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Adds argument to this element.
            </summary>
            <param name="argument">The argument to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMarkupExtensionExpression.AddInitializer(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Adds initializer to this element.
            </summary>
            <param name="initializer">The initializer to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMarkupExtensionExpression.RemoveArgument(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Removes argument from this element.
            </summary>
            <param name="argument">The argument to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMarkupExtensionExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMarkupExtensionExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMarkupExtensionExpression.Qualifier">
            <summary>
            The qualifier expression.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMarkupExtensionExpression.Name">
            <summary>
            Gets name of this method call expression.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMarkupExtensionExpression.Arguments">
            <summary>
            Gets arguments passed to markup extension expression.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMarkupExtensionExpression.Initializers">
            <summary>
            Gets initializers passed to markup extension expression.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMarkupExtensionExpression.DevExpress#CodeRush#StructuralParser#IWithArguments#Args">
            <summary>
            Gets arguments passed to markup extension expression.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteAnonymousMethodExpression">
            <summary>
            Represents anonymous method.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAnonymousMethodExpression.#ctor">
            <summary>
            Creates a new instance of LiteAnonymousMethodExpression
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAnonymousMethodExpression.#ctor(System.String)">
            <summary>
            Creates a new instance of LiteAnonymousMethodExpression
            </summary>
            <param name="name">The name of the memeber.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAnonymousMethodExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAnonymousMethodExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAnonymousMethodExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAnonymousMethodExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAnonymousMethodExpression.AddChild(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Adds element to the member.
            </summary>
            <param name="element">The LiteElement to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAnonymousMethodExpression.AddParameter(DevExpress.CodeRush.StructuralParser.LiteParameterElement)">
            <summary>
            Adds parameter to this element.
            </summary>
            <param name="parameter">The parameter to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAnonymousMethodExpression.AddParameters(DevExpress.CodeRush.StructuralParser.LiteParameterElementCollection)">
            <summary>
            Adds parameters to this element.
            </summary>
            <param name="parameters">The parameters to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAnonymousMethodExpression.SetParameters(DevExpress.CodeRush.StructuralParser.LiteParameterElementCollection)">
            <summary>
            Sets parameters to this element.
            </summary>
            <param name="parameters">The parameters to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAnonymousMethodExpression.RemoveParameter(DevExpress.CodeRush.StructuralParser.LiteParameterElement)">
            <summary>
            Removes parameter from this element.
            </summary>
            <param name="parameter">The parameter to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAnonymousMethodExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAnonymousMethodExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAnonymousMethodExpression.Name">
            <summary>
            Gets type name.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAnonymousMethodExpression.CodeChildren">
            <summary>
            Gets children elements located in body of current statement.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAnonymousMethodExpression.Parameters">
            <summary>
            Gets element parameters.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAnonymousMethodExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAnonymousConstructorExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAwaitExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteThisReferenceExpression">
            <summary>
            Represents this reference expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteThisReferenceExpression.#ctor">
            <summary>
            Creates a new instance of LiteThisReferenceExpression
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteThisReferenceExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteThisReferenceExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteThisReferenceExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clone data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The clone options.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteThisReferenceExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteThisReferenceExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteThisReferenceExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteThisReferenceExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression">
            <summary>
            Type reference expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression.#ctor">
            <summary>
            Creates new instance of LiteTypeReferenceExpression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression.SetNameQualifier(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets name qualifier.
            </summary>
            <param name="expression">The expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression.IsIdenticalTo(DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Returns true if this type reference expression resolves to the same type as the specified type reference.
            </summary>
            <param name="typeRef">The type reference to compare.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression.GetElementType">
            <summary>
            Returns type of inner elements for pointers and arrays.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression.UsesTypeParameters(DevExpress.CodeRush.StructuralParser.IGenericElement)">
            <summary>
            Returns true if this TypeReferenceExpression uses type parameters of the specified generic element.
            </summary>
            <param name="generic">The generic to find type parameters</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression.IsTypeParameter(DevExpress.CodeRush.StructuralParser.IGenericElement)">
            <summary>
            Returns true if this TypeReferenceExpression is type parameter of the specified generic element.
            </summary>
            <param name="generic">The generic to find type parameter.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression.CreateArrayReference(System.Int32)">
            <summary>
            Creates array type reference expression from the current type.
            </summary>
            <param name="rank">The rank of array</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression.AddTypeArguments(DevExpress.CodeRush.StructuralParser.ITypeReferenceExpressionCollection)">
            <summary>
            Adds type arguments to this type reference expression.
            </summary>
            <param name="arguments">The arguments to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression.AddTypeArgument(DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Adds type argument to this type reference expression.
            </summary>
            <param name="argument">The argument to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression.Is(System.String)">
            <summary>
            Returns true if Type of this element is the same as, or 
            descends from, the specified type.
            Returns false otherwise.
            </summary>
            <param name="fullTypeName">Full type name of the type to check.</param>
            <returns>
            Returns true if Type of this element is the same as, or 
            descends from, the specified type.
            Returns false otherwise.
            </returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression.Is(DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Returns true if type of this element is the same as, or descends from, 
            the specified ITypeElement.
            Returns false otherwise.
            </summary>
            <param name="type">The ITypeElement to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression.Is(System.Type)">
            <summary>
            Returns true if type of this element is the same as, or descends from, 
            the specified Type.
            Returns false otherwise.
            </summary>
            <param name="type">The Type to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression.Is(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,System.String)">
            <summary>
            Returns true if this type element is the same as, or descends from, 
            the specified type.
            Returns false otherwise.
            </summary>
            <param name="resolver">The source tree resolver instance to use.</param>
            <param name="fullTypeName">The full name (e.g., "System.Drawing.Point") of 
            the type to compare against.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression.IsNullable">
            <summary>
            Returns true if this reference is nullable.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression.IsDynamic">
            <summary>
            Returns true if this reference is dynamic.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression.IsGeneric">
            <summary>
            Returns true if this reference is generic.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression.Source">
            <summary>
            Gets source expression.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression.BaseType">
            <summary>
            Gets base type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression.Rank">
            <summary>
            Gets array rank.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression.ArrayBounds">
            <summary>
            Gets array bound expressions.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression.IsArrayType">
            <summary>
            Returns true if this type reference is array reference.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression.IsPointerType">
            <summary>
            Returns true if this type reference is pointer reference.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression.IsConst">
            <summary>
            Returns true if this type is constant.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression.IsUnbound">
            <summary>
            Gets or sets value determining that this reference is generic unbound type reference.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression.IsReferenceType">
            <summary>
            Returns true if this type is reference type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression.IsManaged">
            <summary>
            Returns true if this type is managed type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression.IsVolatile">
            <summary>
            Returns true if this type is volatile.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression.TypeReferenceType">
            <summary>
            Gets type reference type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression.HasElementType">
            <summary>
            Returns true if this expression is array or pointer reference.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression.TypeArguments">
            <summary>
            Returns type arguments for this reference.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression.TypeArity">
            <summary>
            Gets or sets value determining that this reference is generic unbound type reference.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression.NameQualifier">
            <summary>
            Gets or sets name qualifier for this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression.FullSignature">
            <summary>
            Gets full signature for expression using its sources
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteParenthesizedTypeReferenceExpression.#ctor">
            <summary>
            Creates a new instance of LiteParenthesizedExpression
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteParenthesizedTypeReferenceExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteParenthesizedExpression
            </summary>
            <param name="expression"></param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteParenthesizedTypeReferenceExpression.SetExpression(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets element expression.
            </summary>
            <param name="expression">The expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteParenthesizedTypeReferenceExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteParenthesizedTypeReferenceExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteParenthesizedTypeReferenceExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteParenthesizedTypeReferenceExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteParenthesizedTypeReferenceExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteParenthesizedTypeReferenceExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteParenthesizedTypeReferenceExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteAliasNamespaceElement">
            <summary>
            Represents lite weight namespace.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAliasNamespaceElement.#ctor">
            <summary>
            Creates new instance of LiteAliasNamespaceElement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAliasNamespaceElement.#ctor(System.String)">
            <summary>
            Creates new instance of LiteAliasNamespaceElement with specified name.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAliasNamespaceElement.AddNamespace(DevExpress.CodeRush.StructuralParser.INamespaceElement)">
            <summary>
            Adds namespace element to the namespace.
            </summary>
            <param name="aNamespace">The namespace to add.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAliasNamespaceElement.Name">
            <summary>
            Gets namespace name.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAliasNamespaceElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAliasNamespaceElement.ImageIndex">
            <summary>
            Gets element image index.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAliasNamespaceElement.DevExpress#CodeRush#StructuralParser#INamespaceElement#Namespaces">
            <summary>
            Gets child namespaces.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAliasNamespaceElement.DevExpress#CodeRush#StructuralParser#INamespaceElement#Types">
            <summary>
            Gets namespace types.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteDynamicTypeReferenceExpression">
            <summary>
            Dynamic type reference expression.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteSimpleTypeReferenceExpression">
            <summary>
            Simple type reference expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSimpleTypeReferenceExpression.#ctor">
            <summary>
            Creates new instance of LiteSimpleTypeReferenceExpression.
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSimpleTypeReferenceExpression.#ctor(System.String)">
            <summary>
            Creates new instance of LiteSimpleTypeReferenceExpression.
            </summary>
            <param name="name">The name of the expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSimpleTypeReferenceExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSimpleTypeReferenceExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSimpleTypeReferenceExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSimpleTypeReferenceExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSimpleTypeReferenceExpression.AddTypeArgument(DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Adds type argument to this type reference expression.
            </summary>
            <param name="argument">The argument to add.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteSimpleTypeReferenceExpression.Name">
            <summary>
            Gets name of the simple type reference.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDynamicTypeReferenceExpression.#ctor">
            <summary>
            Creates new instance of LiteDynamicTypeReferenceExpression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDynamicTypeReferenceExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteAggregateElementReferenceExpression">
            <summary>
            Element reference expression.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteElementReferenceExpression">
            <summary>
            Element reference expression.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteReferenceExpression">
            <summary>
            Reference expression.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteGenericExpression">
            <summary>
            Represents generic expression with type arguments.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteGenericExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteGenericExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteGenericExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteGenericExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteGenericExpression.AddTypeArgument(DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Adds argument to this element.
            </summary>
            <param name="argument">The argument to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteGenericExpression.RemoveTypeArgument(DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Removes argument from this element.
            </summary>
            <param name="argument">The argument to remove.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteGenericExpression.IsGeneric">
            <summary>
            Returns true if this expression is generic and has type arguments.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteGenericExpression.TypeArguments">
            <summary>
            Gets type arguments.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteGenericExpression.TypeArity">
            <summary>
            Gets or sets value determining that this reference is generic unbound type reference.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteReferenceExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteReferenceExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteReferenceExpression.SetNameQualifier(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets name qualifier.
            </summary>
            <param name="expression">The expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteReferenceExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteReferenceExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteReferenceExpression.Source">
            <summary>
            The source expression.
            </summary>		
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteReferenceExpression.NameQualifier">
            <summary>
            Gets or sets name qualifier for this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteReferenceExpression.QuaifiedName">
            <summary>
            Gets full name including all sources
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteReferenceExpression.FullSignature">
            <summary>
            Gets full signature for expression using its sources
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElementReferenceExpression.#ctor">
            <summary>
            Creates a new instance of LiteElementReferenceExpression
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElementReferenceExpression.#ctor(System.String)">
            <summary>
            Creates a new instance of LiteElementReferenceExpression
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElementReferenceExpression.#ctor(System.String,System.Boolean)">
            <summary>
            Creates a new instance of LiteElementReferenceExpression
            </summary>
            <param name="name">The name of the element reference.</param>
            <param name="isModified">The value detemining if reference is modified.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElementReferenceExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElementReferenceExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElementReferenceExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElementReferenceExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElementReferenceExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElementReferenceExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElementReferenceExpression.Name">
            <summary>
            Gets element name.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElementReferenceExpression.IsModified">
            <summary>
            Gets or sets value determining if this expression is modified.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAggregateElementReferenceExpression.#ctor">
            <summary>
            Creates a new instance of LiteAggregateElementReferenceExpression
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAggregateElementReferenceExpression.#ctor(System.String)">
            <summary>
            Creates a new instance of LiteAggregateElementReferenceExpression
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAggregateElementReferenceExpression.#ctor(System.String,System.Boolean)">
            <summary>
            Creates a new instance of LiteAggregateElementReferenceExpression
            </summary>
            <param name="name">The name of the element reference.</param>
            <param name="isModified">The value detemining if reference is modified.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAggregateElementReferenceExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAggregateElementReferenceExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMethodCallExpression">
            <summary>
            Method call expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodCallExpression.#ctor">
            <summary>
            Creates a new instance of LiteMethodCallExpression
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodCallExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteMethodCallExpression
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodCallExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodCallExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodCallExpression.SetSource(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets source expression for this element.
            </summary>
            <param name="source">The source expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodCallExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodCallExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodCallExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodCallExpression.AddArgument(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Adds argument to this element.
            </summary>
            <param name="argument">The argument to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodCallExpression.RemoveArgument(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Removes argument from this element.
            </summary>
            <param name="argument">The argument to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodCallExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMethodCallExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMethodCallExpression.Source">
            <summary>
            The source expression.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMethodCallExpression.Name">
            <summary>
            Gets name of this method call expression.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMethodCallExpression.IsGeneric">
            <summary>
            Returns true if this expression is generic and has type arguments.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMethodCallExpression.TypeArguments">
            <summary>
            Gets type arguments.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMethodCallExpression.TypeArity">
            <summary>
            Gets type arity.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMethodCallExpression.Arguments">
            <summary>
            Gets arguments passed to method call expression.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMethodCallExpression.DevExpress#CodeRush#StructuralParser#IWithArguments#Args">
            <summary>
            Gets arguments passed to method call expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAggregateMethodCallExpression.#ctor">
            <summary>
            Creates a new instance of LiteAggregateMethodCallExpression
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAggregateMethodCallExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteAggregateMethodCallExpression
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAggregateMethodCallExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAggregateMethodCallExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteObjectInitializerExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clone data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The element clone options.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteObjectInitializerExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteObjectInitializerExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteObjectInitializerExpression.AddInitializer(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Adds initializer to this element.
            </summary>
            <param name="initializer">The initializer to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCssStyleSheet.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCssStyleSheet.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCssStyleSheet.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCssStyleSheet.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCssStyleSheet.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteCssStyleSheet.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteHtmlStyleDefinition">
            <summary>
            HtmlStyleDefinition.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteHtmlElement">
            <summary>
            Html Element.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteXmlElement">
            <summary>
            XML Element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlNode.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this element.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteXmlNode.ElementType">
            <summary>
            Gets type of this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlElement.#ctor">
            <summary>
            Creates a new instance of LiteXmlElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlElement.#ctor(System.String)">
            <summary>
            Creates a new instance of LiteXmlElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlElement.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlElement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteXmlElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteHtmlElement.#ctor">
            <summary>
            Creates new instance of LiteSimpleGenericTypeReferenceExpression.
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteHtmlElement.#ctor(System.String)">
            <summary>
            Creates new instance of LiteSimpleGenericTypeReferenceExpression.
            <param name="name">ELement name.</param>
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteHtmlElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteHtmlElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteHtmlElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteHtmlElement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteHtmlElement.AddChild(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Adds element to the member.
            </summary>
            <param name="element">The LiteElement to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteHtmlElement.AddAttribute(DevExpress.CodeRush.StructuralParser.IHtmlAttribute)">
            <summary>
            Adds attribute to this HTML element.
            </summary>
            <param name="attribute">The attribute to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteHtmlElement.AddAttribute(DevExpress.CodeRush.StructuralParser.LiteHtmlAttribute)">
            <summary>
            Adds attribute to this HTML element.
            </summary>
            <param name="attribute">The attribute to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteHtmlElement.RemoveAttribute(DevExpress.CodeRush.StructuralParser.LiteHtmlAttribute)">
            <summary>
            Removes type argument from the expression.
            </summary>
            <param name="attribute">The type argument to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteHtmlElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteHtmlElement.CodeChildren">
            <summary>
            Gets children elements located in body of current statement.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteHtmlElement.Attributes">
            <summary>
            Returns attributes.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteHtmlStyleDefinition.#ctor">
            <summary>
            Creates a new instance of LiteHtmlStyleDefinition
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteHtmlStyleDefinition.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteHtmlStyleDefinition.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteHtmlStyleDefinition.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteHtmlScriptDefinition">
            <summary>
            HtmlScriptDefinition.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteHtmlScriptDefinition.#ctor">
            <summary>
            Creates a new instance of LiteHtmlScriptDefinition
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteHtmlScriptDefinition.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteHtmlScriptDefinition.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteHtmlScriptDefinition.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteAspDirective">
            <summary>
            AspDirective.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAspDirective.#ctor">
            <summary>
            Creates a new instance of LiteAspDirective
            </summary>		
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAspDirective.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteExternAlias.#ctor">
            <summary>
            Creates new instance of LiteNamespaceElement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteExternAlias.#ctor(System.String)">
            <summary>
            Creates new instance of LiteNamespaceElement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteExternAlias.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteExternAlias.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteExternAlias.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteExternAlias.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteExternAlias.Name">
            <summary>
            Gets element name.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteExternAlias.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteLambdaExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteLambdaExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteLambdaFunctionExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteLambdaFunctionExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQueryableCollectionReferenceExpression.#ctor">
            <summary>
            Creates a new instance of LiteQueryableCollectionReferenceExpression
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQueryableCollectionReferenceExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteQueryableCollectionReferenceExpression
            </summary>
            <param name="expression">The expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQueryableCollectionReferenceExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQueryableCollectionReferenceExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQueryableCollectionReferenceExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQueryableCollectionReferenceExpression.SetExpression(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets expression.
            </summary>
            <param name="expression">The expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQueryableCollectionReferenceExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQueryableCollectionReferenceExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQueryableCollectionReferenceExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteQueryableCollectionReferenceExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteQueryableCollectionReferenceExpression.ImageIndex">
            <summary>
            Gets element index.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteQueryableCollectionReferenceExpression.Expression">
            <summary>
            Gets query collection of the expression.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteStatement">
            <summary>
            Represents lite weight statement.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteStatement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteStatement.HasDelimitedBlock">
            <summary>
            Returns true if this statement owns a delimited block of code. For example, 
            in C#, a Method body is delimited by "{" and "}" characters. Similarly, 
            if-blocks, while-loops, for-loops and other control flow blocks may own 
            a delimited block of code.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteLabelStatement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteLabelStatement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteLabelStatement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteLabelStatement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteGotoStatement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteGotoStatement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteGotoStatement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteGotoStatement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteExitStatement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteExitStatement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteExitStatement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteExitStatement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteBlockStatement">
            <summary>
            Represents lite "Block" statement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBlockStatement.#ctor">
            <summary>
            Creates new LiteBlockStatement instance.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBlockStatement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBlockStatement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBlockStatement.AddChild(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Adds child element.
            </summary>
            <param name="element">The element to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBlockStatement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBlockStatement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBlockStatement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteBlockStatement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteFakeStatement">
            <summary>
            Represents lite weight statement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFakeStatement.#ctor">
            <summary>
            Creates new instance of the LiteFakeStatement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFakeStatement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFakeStatement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFakeStatement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFakeStatement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFakeStatement.AddChild(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Adds child to this statement.
            </summary>
            <param name="element">The element to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFakeStatement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteFakeStatement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteFakeStatement.ImageIndex">
            <summary>
            Gets element image index.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteFakeStatement.CodeChildren">
            <summary>
            Gets children elements located in body of current statement.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteDynamicTypeElement">
            <summary>
            Represents dynamic type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteTypeElement">
            <summary>
            Represents lite weight type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMemberElement">
            <summary>
            Represents type member.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LitePartialElement">
            <summary>
            Represents lite weight partial element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LitePartialElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LitePartialElement.Files">
            <summary>
            Gets element file. In case of partial 
            elements there are more than one file.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LitePartialElement.FirstFile">
            <summary>
            Gets first file where the element is declared.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LitePartialElement.NameRanges">
            <summary>
            Gets element name range. In case of partial 
            elements there are more than one name range.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LitePartialElement.FirstNameRange">
            <summary>
            Gets first TextRange that indicate where 
            the element name appears in the code.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LitePartialElement.Ranges">
            <summary>
            Gets element range. In case of partial 
            elements there are more than one range.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LitePartialElement.FirstRange">
            <summary>
            Gets first TextRange that indicate where 
            the element appears in the code.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMemberElement.#ctor">
            <summary>
            Creates new instance of LiteMemberElement.
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMemberElement.#ctor(System.String)">
            <summary>
            Creates new instance of LiteMemberElement.
            </summary>
            <param name="name">The name of the memeber.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMemberElement.SpecifierIsSet(DevExpress.CodeRush.StructuralParser.AccessSpecifiersFlags)">
            <summary>
            Checks if specifier is set.
            </summary>
            <param name="flag">The specifier flag to check.</param>
            <returns></returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMemberElement.SetSpecifierValue(DevExpress.CodeRush.StructuralParser.AccessSpecifiersFlags,System.Boolean)">
            <summary>
            Sets specified flag.
            </summary>
            <param name="flag">The specifier flag to set.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMemberElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMemberElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMemberElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMemberElement.GetDescendantChildrenOverride">
            <summary>
            Returns all descendant children of this element.
            This method is called by GetAllChildren method before
            ChildrenList is iterated over.
            </summary>
            <returns>Returns all descendant children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMemberElement.SetNameQualifier(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets name qualifier.
            </summary>
            <param name="expression">The expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMemberElement.AddChild(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Adds element to the member.
            </summary>
            <param name="element">The LiteElement to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMemberElement.AddAttribute(DevExpress.CodeRush.StructuralParser.LiteAttributeElement)">
            <summary>
            Adds attribute to the member.
            </summary>
            <param name="attr">The LiteAttributeElement to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMemberElement.AddAttributes(DevExpress.CodeRush.StructuralParser.LiteAttributeElementCollection)">
            <summary>
            Adds attributes to the member.
            </summary>
            <param name="attributes">The attributes to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMemberElement.SetAttributes(DevExpress.CodeRush.StructuralParser.LiteAttributeElementCollection)">
            <summary>
            Sets attributes to this element.
            </summary>
            <param name="attributes">The attributes to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMemberElement.AddImplements(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Adds implements expression to the member.
            </summary>
            <param name="expression">The LiteExpression to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMemberElement.AddImplements(DevExpress.CodeRush.StructuralParser.LiteExpressionCollection)">
            <summary>
            Adds expressions to the implements list.
            </summary>
            <param name="expressions">The expressions to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMemberElement.SetImplements(DevExpress.CodeRush.StructuralParser.LiteExpressionCollection)">
            <summary>
            Sets implements list.
            </summary>
            <param name="expressions">The expressions to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMemberElement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMemberElement.GetOverrideCode">
            <summary>
            Gets code to override this member.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMemberElement.GetOverrideCode(System.Boolean)">
            <summary>
            Gets code to override this member.
            </summary>
            <param name="callBase">Pass true to add call to base method.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMemberElement.GetOverrideCode(System.Boolean,System.String,System.String)">
            <summary>
            Gets code to override this member.
            </summary>
            <param name="callBase">Pass true to add call to base method.</param>
            <param name="codeBefore">The code to add before method call.</param>
            <param name="codeAfter">The code to add after method call.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMemberElement.Is(System.String)">
            <summary>
            Returns true if Type of this element is the same as, or 
            descends from, the specified type.
            Returns false otherwise.
            </summary>
            <param name="fullTypeName">Full type name of the type to check.</param>
            <returns>
            Returns true if Type of this element is the same as, or 
            descends from, the specified type.
            Returns false otherwise.
            </returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMemberElement.Is(DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Returns true if type of this element is the same as, or descends from, 
            the specified ITypeElement.
            Returns false otherwise.
            </summary>
            <param name="type">The ITypeElement to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMemberElement.Is(System.Type)">
            <summary>
            Returns true if type of this element is the same as, or descends from, 
            the specified Type.
            Returns false otherwise.
            </summary>
            <param name="type">The Type to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMemberElement.Is(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,System.String)">
            <summary>
            Returns true if this type element is the same as, or descends from, 
            the specified type.
            Returns false otherwise.
            </summary>
            <param name="resolver">The source tree resolver instance to use.</param>
            <param name="fullTypeName">The full name (e.g., "System.Drawing.Point") of 
            the type to compare against.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMemberElement.Name">
            <summary>
            Gets type name.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMemberElement.NameQualifier">
            <summary>
            Gets or sets name qualifier for this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMemberElement.Attributes">
            <summary>
            Gets attributes for this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMemberElement.Signature">
            <summary>
            Gets or sets member signature.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMemberElement.Visibility">
            <summary>
            Gets member visibility
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMemberElement.IsAbstract">
            <summary>
            Gets value indicating that this element is abstract.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMemberElement.IsVirtual">
            <summary>
            Gets value indicating that this member is virtual.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMemberElement.IsOverride">
            <summary>
            Gets value indicating that this member override base element.
            </summary>		
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMemberElement.IsNew">
            <summary>
            Gets value indicating that this member override base element.
            </summary>		
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMemberElement.IsVolatile">
            <summary>
            Gets value indicating that this member is volatile.
            </summary>		
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMemberElement.IsWithEvents">
            <summary>
            Gets value indicating that this member is WithEvents (Visual Basic).
            </summary>		
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMemberElement.IsConst">
            <summary>
            Gets value indicating that this member is constant.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMemberElement.IsConstVolatile">
            <summary>
            Gets value indicating that this member is const-volatile.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMemberElement.IsPartial">
            <summary>
            Gets value indicating that this member is partial.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMemberElement.IsReadOnly">
            <summary>
            Gets value indicating that this member is read-only.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMemberElement.IsStatic">
            <summary>
            Gets value indicating that this member is static.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMemberElement.IsSealed">
            <summary>
            Gets value indicating that this member is sealed.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMemberElement.IsExtern">
            <summary>
            Gets value indicating that this member is extern.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMemberElement.IsExplicitInterfaceMember">
            <summary>
            Returns true if this member is explicitly declared interface member.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMemberElement.Implements">
            <summary>
            Returns expression collection for implemented interface members.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMemberElement.CodeChildren">
            <summary>
            Gets children elements located in body of current member.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMemberElement.HasDelimitedBlock">
            <summary>
            Returns true if this member owns a delimited block of code.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.#ctor">
            <summary>
            Creates new instance of LiteTypeElement.
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.#ctor(System.String)">
            <summary>
            Creates new instance of LiteTypeElement.
            </summary>
            <param name="name">The name of the element.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.SetPrimaryAncestor(DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Sets primary ancestor.
            </summary>
            <param name="ancestor">The ancestor to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.AddSecondaryAncestor(DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Adds secondary ancestor to this element.
            </summary>
            <param name="ancestor">The ancestor to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.RemoveSecondaryAncestor(DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Removes secondary ancestor from this element.
            </summary>
            <param name="ancestor">The ancestor to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.AddTypeParameter(DevExpress.CodeRush.StructuralParser.LiteTypeParameterElement)">
            <summary>
            Adds type parameter to this element.
            </summary>
            <param name="typeParameter">The type parameter to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.AddTypeParameters(DevExpress.CodeRush.StructuralParser.LiteTypeParameterCollection)">
            <summary>
            Adds type parameters to this element.
            </summary>
            <param name="typeParameters">The type parameters to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.SetTypeParameters(DevExpress.CodeRush.StructuralParser.LiteTypeParameterCollection)">
            <summary>
            Sets type parameters.
            </summary>
            <param name="typeParameters">Parameters to set</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.RemoveTypeParameter(DevExpress.CodeRush.StructuralParser.LiteTypeParameterElement)">
            <summary>
            Removes type parameter from the element.
            </summary>
            <param name="typeParameter">The element to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.AddMember(DevExpress.CodeRush.StructuralParser.LiteMemberElement)">
            <summary>
            Adds member to this element.
            </summary>
            <param name="member">The member to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.RemoveMember(DevExpress.CodeRush.StructuralParser.LiteMemberElement)">
            <summary>
            Removes member from this element.
            </summary>
            <param name="member">The member to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.AddChild(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Adds child element.
            </summary>
            <param name="element">The element to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.GetAllDescendants">
            <summary>
            Returns all descendants for this type declaration.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.GetAllDescendants(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns all descendants for this type declaration.
            </summary>
            <param name="scope">The scope to search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.GetAllDescendants(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Returns all descendants for this type declaration.
            </summary>
            <param name="resolver">The source tree resolver instance to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.GetAllDescendants(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns all descendants for this type declaration.
            </summary>
            <param name="resolver">The source tree resolver instance to use.</param>
            <param name="scope">The scope to search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.GetBaseType">
            <summary>
            Gets the base/ancestor type that this type descends/inherits from.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.GetBaseType(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Gets the base/ancestor type that this type descends/inherits from.
            </summary>
            <param name="resolver">The ISourceTreeResolver to use to resolve this type.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.GetBaseTypes">
            <summary>
            Gets all base/ancestor types that this type descends/inherits from.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.GetBaseTypes(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Gets all base/ancestor types that this type descends/inherits from.
            </summary>
            <param name="resolver">The ISourceTreeResolver to use to resolve this type.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.GetDescendants">
            <summary>
            Returns all direct descendants for this type declaration.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.GetDescendants(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns all direct descendants for this type declaration.
            </summary>
            <param name="scope">The scope to search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.GetDescendants(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Returns all direct descendants for this type declaration.
            </summary>
            <param name="resolver">The source tree resolver instance to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.GetDescendants(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns all direct descendants for this type declaration.
            </summary>
            <param name="resolver">The source tree resolver instance to use.</param>
            <param name="scope">The scope to search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.Is(System.String)">
            <summary>
            Returns true if this type element is the same as, or descends from, the specified type.
            Returns false otherwise.
            </summary>
            <param name="fullTypeName">The full name (e.g., "System.Drawing.Point") of the type to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.Is(DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Returns true if this type element is the same as, or descends from, the specified ITypeElement.
            Returns false otherwise.
            </summary>
            <param name="type">The ITypeElement to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.Is(System.Type)">
            <summary>
            Returns true if this type element is the same as, or descends from, the specified Type.
            Returns false otherwise.
            </summary>
            <param name="type">The Type to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.Is(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,System.String)">
            <summary>
            Returns true if this type element is the same as, or descends from, the specified type.
            Returns false otherwise.
            </summary>
            <param name="resolver">The source tree resolver instance to use.</param>
            <param name="fullTypeName">The full name (e.g., "System.Drawing.Point") of the type to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.Is(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Returns true if this type element is the same as, or descends from, the specified ITypeElement.
            Returns false otherwise.
            </summary>
            <param name="resolver">The source tree resolver instance to use.</param>
            <param name="type">The ITypeElement to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.Is(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,System.Type)">
            <summary>
            Returns true if this type element is the same as, or descends from, the specified Type.
            Returns false otherwise.
            </summary>
            <param name="resolver">The source tree resolver instance to use.</param>
            <param name="type">The Type to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.DescendsFrom(System.String)">
            <summary>
            Returns true if this type element descends from the specified type.
            Returns false otherwise.
            </summary>
            <param name="fullTypeName">The full name (e.g., "System.Drawing.Point") of the type to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.DescendsFrom(DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Returns true if this type element descends from the specified ITypeElement.
            Returns false otherwise.
            </summary>
            <param name="type">The ITypeElement to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.DescendsFrom(System.Type)">
            <summary>
            Returns true if this type element descends from the specified Type.
            Returns false otherwise.
            </summary>
            <param name="type">The Type to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.DescendsFrom(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,System.String)">
            <summary>
            Returns true if this type element descends from the specified type.
            Returns false otherwise.
            </summary>
            <param name="resolver">The source tree resolver instance to use.</param>
            <param name="fullTypeName">The full name (e.g., "System.Drawing.Point") of the type to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.DescendsFrom(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Returns true if this type element descends from the specified ITypeElement.
            Returns false otherwise.
            </summary>
            <param name="resolver">The source tree resolver instance to use.</param>
            <param name="type">The ITypeElement to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.DescendsFrom(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,System.Type)">
            <summary>
            Returns true if this type element descends from the specified Type.
            Returns false otherwise.
            </summary>
            <param name="resolver">The source tree resolver instance to use.</param>
            <param name="type">The Type to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.FindMember(System.String)">
            <summary>
            Returns member with the given name if it is declared inside this type or inside any
            of it's ancestors.
            </summary>
            <param name="name">The name of member to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.FindMember(System.String,System.Boolean)">
            <summary>
            Returns member with the given name if it is declared inside this type or inside any
            of it's ancestors if needed.
            </summary>
            <param name="name">The name of member to find.</param>
            <param name="searchInAncestors">The value indicating if member should be searched inside base types.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.FindMember(System.String,DevExpress.CodeRush.StructuralParser.IElementFilter,System.Boolean)">
            <summary>
            Returns member with the given name if it is declared inside this type or inside any
            of it's ancestors if needed.
            </summary>
            <param name="name">The name of member to find.</param>
            <param name="filter">The filter to use.</param>
            <param name="searchInAncestors">The value indicating if member should be searched inside base types.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.FindMembers(System.String)">
            <summary>
            Returns all members with the given name inside this type or inside any
            of it's ancestors.
            </summary>
            <param name="name">The name of members to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.FindMembers(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,System.String)">
            <summary>
            Returns members with the given name inside this type or inside any
            of it's ancestors if needed.
            </summary>
            <param name="name">The name of members to find.</param>
            <param name="resolver">The source tree resolver</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.FindMembers(System.String,System.Boolean)">
            <summary>
            Returns members with the given name inside this type or inside any
            of it's ancestors if needed.
            </summary>
            <param name="name">The name of members to find.</param>
            <param name="searchInAncestors">The value indicating if member should be searched inside base types.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.FindMembers(System.String,DevExpress.CodeRush.StructuralParser.IElementFilter,System.Boolean)">
            <summary>
            Returns members with the given name inside this type or inside any
            of it's ancestors if needed.
            </summary>
            <param name="name">The name of members to find.</param>
            <param name="filter">The filter to use.</param>
            <param name="searchInAncestors">The value indicating if member should be searched inside base types.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.FindMembers(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,System.String,DevExpress.CodeRush.StructuralParser.IElementFilter,System.Boolean)">
            <summary>
            Returns members with the given name inside this type or inside any
            of it's ancestors if needed.
            </summary>
            <param name="resolver">The instance of the ISourceTreeResolver implementor.</param>
            <param name="name">The name of members to find.</param>
            <param name="filter">The filter to use.</param>
            <param name="searchInAncestors">The value indicating if member should be searched inside base types.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.DescendsFrom(DevExpress.CodeRush.StructuralParser.ITypeElement,System.String)">
            <summary>
            Returns true if this type element descends from the specified ITypeElement.
            Returns false otherwise.
            </summary>
            <param name="type">The ITypeElement to compare against.</param>
            <param name="fullTypeName">The fullTypeName to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeElement.DescendsFrom(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,DevExpress.CodeRush.StructuralParser.ITypeElement,System.String)">
            <summary>
            Returns true if this type element descends from the specified ITypeElement.
            Returns false otherwise.
            </summary>
            <param name="resolver">The source tree resolver instance to use.</param>
            <param name="type">The ITypeElement to compare against.</param>
            <param name="fullTypeName">The fullTypeName to check.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeElement.PrimaryAncestor">
            <summary>
            Gets type reference to base type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeElement.SecondaryAncestors">
            <summary>
            Gets type references to implemented interfaces.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeElement.Members">
            <summary>
            Gets type members.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeElement.TypeParameters">
            <summary>
            Gets type parameters.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeElement.IsGeneric">
            <summary>
            Returns true if element is generic.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeElement.IsActivatedGeneric">
            <summary>
            Returns true if element is activated.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeElement.IsTypeParameter">
            <summary>
            Returns true if current type element was created for type parameter.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeElement.GenericTemplate">
            <summary>
            Returns template element that was used to activate generic.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDynamicTypeElement.#ctor">
            <summary>
            Creates new instance of LiteDynamicTypeElement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDynamicTypeElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteDynamicTypeElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteDynamicTypeElement.ImageIndex">
            <summary>
            Gets image index of the element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAttributeSectionElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAttributeSectionElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAttributeSectionElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAttributeSectionElement.AddAttribute(DevExpress.CodeRush.StructuralParser.LiteAttributeElement)">
            <summary>
            Adds attribute to the member.
            </summary>
            <param name="attr">The LiteAttributeElement to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAttributeSectionElement.AddAttributes(DevExpress.CodeRush.StructuralParser.LiteAttributeElementCollection)">
            <summary>
            Adds attributes to the member.
            </summary>
            <param name="attributes">The attributes to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAttributeSectionElement.SetAttributes(DevExpress.CodeRush.StructuralParser.LiteAttributeElementCollection)">
            <summary>
            Sets attributes to this element.
            </summary>
            <param name="attributes">The attributes to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAttributeSectionElement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAttributeSectionElement.HasTargetNode">
            <summary>
            Defines if attribute section has target node.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAttributeSectionElement.Attributes">
            <summary>
            Gets attributes for this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAttributeSectionElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteExternDeclaration">
            <summary>
            Summary description for LiteClassElement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteExternDeclaration.#ctor">
            <summary>
            Creates new instance of LiteExternDeclaration.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteExternDeclaration.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteExternDeclaration.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteExternDeclaration.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteExternDeclaration.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteExternDeclaration.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteExternDeclaration.AddChild(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Adds element to the namespace.
            </summary>
            <param name="element">The LiteElement to add.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteExternDeclaration.ChildrenList">
            <summary>
            Gets all namespace children.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteExternDeclaration.CodeChildren">
            <summary>
            Gets children elements located in body of current statement.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteExternDeclaration.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LanguageElementConverter.ConvertElement(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Converts given element object to language element.
            </summary>
            <param name="element">The element to convert.</param>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteConverter">
            <summary>
            Converts LanguageElements to lite structure elements.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.#ctor">
            <summary>
            Creates new instance of LiteConverter.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.Namespace)">
            <summary>
            Converts namespace language element to lite structure element.
            </summary>
            <param name="namespace">The namespace to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.RequestNamespace(DevExpress.CodeRush.StructuralParser.Namespace)">
            <summary>
            Converts namespace language element to lite structure element considering its parent namespaces.
            </summary>
            <param name="namespace">The namespace to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.Class)">
            <summary>
            Converts class language element to lite structure element.
            </summary>
            <param name="class">The class to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.Struct)">
            <summary>
            Converts struct language element to lite structure element.
            </summary>
            <param name="struct">The struct to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.ManagedClass)">
            <summary>
            Converts class language element to lite structure element.
            </summary>
            <param name="class">The class to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.ManagedStruct)">
            <summary>
            Converts struct language element to lite structure element.
            </summary>
            <param name="struct">The struct to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.ValueClass)">
            <summary>
            Converts class language element to lite structure element.
            </summary>
            <param name="class">The class to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.ValueStruct)">
            <summary>
            Converts struct language element to lite structure element.
            </summary>
            <param name="struct">The struct to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.Union)">
            <summary>
            Converts struct language element to lite structure element.
            </summary>
            <param name="union">The struct to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.InterfaceClass)">
            <summary>
            Converts struct language element to lite structure element.
            </summary>
            <param name="class">The struct to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.InterfaceStruct)">
            <summary>
            Converts struct language element to lite structure element.
            </summary>
            <param name="struct">The struct to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.Module)">
            <summary>
            Converts module language element to lite structure element.
            </summary>
            <param name="module">The module to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.Interface)">
            <summary>
            Converts interface language element to lite structure element.
            </summary>
            <param name="interface">The interface to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.Enumeration)">
            <summary>
            Converts enumeration language element to lite structure element.
            </summary>
            <param name="enumeration">The enumeration to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.DelegateDefinition)">
            <summary>
            Converts delegate language element to lite structure element.
            </summary>
            <param name="delegate">The delegate to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.ElaboratedTypeReference)">
            <summary>
            Converts elaborated language element to lite structure element.
            </summary>
            <param name="elaborated">The elaborated to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.TemplateModifier)">
            <summary>
            Converts template modifier language element to lite structure element.
            </summary>
            <param name="modifier">The template modifier to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.Param)">
            <summary>
            Converts param language element to lite structure element.
            </summary>
            <param name="param">The param to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.TypeParameter)">
            <summary>
            Converts type parameter language element to lite structure element.
            </summary>
            <param name="param">The type parameter to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.TemplateParameter)">
            <summary>
            Converts type parameter language element to lite structure element.
            </summary>
            <param name="param">The type parameter to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.TypeParameterConstraint)">
            <summary>
            Converts type parameter constraint language element to lite structure element.
            </summary>
            <param name="constraint">The constraint to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.Method)">
            <summary>
            Converts method language element to lite structure element.
            </summary>
            <param name="method">The method to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.Property)">
            <summary>
            Converts property language element to lite structure element.
            </summary>
            <param name="property">The property to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.Get)">
            <summary>
            Converts property language element to lite structure element.
            </summary>
            <param name="getter">The getter to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.Set)">
            <summary>
            Converts property language element to lite structure element.
            </summary>
            <param name="setter">The setter to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.Event)">
            <summary>
            Converts event language element to lite structure element.
            </summary>
            <param name="event">The event to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.EventAdd)">
            <summary>
            Converts property language element to lite structure element.
            </summary>
            <param name="adder">The adder to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.EventRaise)">
            <summary>
            Converts property language element to lite structure element.
            </summary>
            <param name="raise"></param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.EventRemove)">
            <summary>
            Converts property language element to lite structure element.
            </summary>
            <param name="remover">The remover to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.Variable)">
            <summary>
            Converts variable language element to lite structure element.
            </summary>
            <param name="variable">The variable to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.InitializedVariable)">
            <summary>
            Converts initialized variable language element to lite structure element.
            </summary>
            <param name="variable">The variable to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.EnumElement)">
            <summary>
            Converts enum element to lite structure element.
            </summary>
            <param name="element">The element to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.Const)">
            <summary>
            Converts const language element to lite structure element.
            </summary>
            <param name="const">The const to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.ConvertToStatement(DevExpress.CodeRush.StructuralParser.OptionStatement)">
            <summary>
            Converts variable language element to lite structure element.
            </summary>
            <param name="optionStatement">The variable to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.ConvertToStatement(DevExpress.CodeRush.StructuralParser.ImplicitVariable)">
            <summary>
            Converts variable language element to lite structure element.
            </summary>
            <param name="variable">The variable to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.ConvertToStatement(DevExpress.CodeRush.StructuralParser.Variable)">
            <summary>
            Converts variable language element to lite structure element.
            </summary>
            <param name="variable">The variable to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.ConvertToStatement(DevExpress.CodeRush.StructuralParser.InitializedVariable)">
            <summary>
            Converts initialized variable language element to lite structure element.
            </summary>
            <param name="variable">The variable to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.ConvertToStatement(DevExpress.CodeRush.StructuralParser.MethodCall)">
            <summary>
            Converts method call language element to lite structure element.
            </summary>
            <param name="methodCall">The method call to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.ConvertToStatement(DevExpress.CodeRush.StructuralParser.Const)">
            <summary>
            Converts const language element to lite structure element.
            </summary>
            <param name="const">The const to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.ConvertToStatement(DevExpress.CodeRush.StructuralParser.UsingStatement)">
            <summary>
            Converts using language element to lite structure element.
            </summary>
            <param name="st">The statement to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.ConvertToStatement(DevExpress.CodeRush.StructuralParser.Unchecked)">
            <summary>
            Converts unchecked language element to lite structure element.
            </summary>
            <param name="st">The statement to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.ConvertToStatement(DevExpress.CodeRush.StructuralParser.Checked)">
            <summary>
            Converts unchecked language element to lite structure element.
            </summary>
            <param name="st">The statement to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.ConvertToStatement(DevExpress.CodeRush.StructuralParser.UnsafeStatement)">
            <summary>
            Converts unsafe language element to lite structure element.
            </summary>
            <param name="st">The statement to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.ConvertToStatement(DevExpress.CodeRush.StructuralParser.Block)">
            <summary>
            Converts block language element to lite structure element.
            </summary>
            <param name="st">The statement to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.ConvertToStatement(DevExpress.CodeRush.StructuralParser.Fixed)">
            <summary>
            Converts fixed language element to lite structure element.
            </summary>
            <param name="st">The statement to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.ConvertToStatement(DevExpress.CodeRush.StructuralParser.With)">
            <summary>
            Converts with language element to lite structure element.
            </summary>
            <param name="with">The statement to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.ConvertToStatement(DevExpress.CodeRush.StructuralParser.Lock)">
            <summary>
            Converts lock language element to lite structure element.
            </summary>
            <param name="lockSt">The statement to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.ConvertToStatement(DevExpress.CodeRush.StructuralParser.Do)">
            <summary>
            Converts Do language element to lite structure element.
            </summary>
            <param name="doSt">The statement to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.ConvertToStatement(DevExpress.CodeRush.StructuralParser.While)">
            <summary>
            Converts While language element to lite structure element.
            </summary>
            <param name="whileSt">The statement to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.ConvertToStatement(DevExpress.CodeRush.StructuralParser.Continue)">
            <summary>
            Converts continue language element to lite structure element.
            </summary>
            <param name="st">The statement to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.ConvertToStatement(DevExpress.CodeRush.StructuralParser.Break)">
            <summary>
            Converts break language element to lite structure element.
            </summary>
            <param name="st">The statement to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.ConvertToStatement(DevExpress.CodeRush.StructuralParser.ForEach)">
            <summary>
            Converts foreach language element to lite structure element.
            </summary>
            <param name="foreachSt">The statement to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.ConvertToStatement(DevExpress.CodeRush.StructuralParser.For)">
            <summary>
            Converts for language element to lite structure element.
            </summary>
            <param name="forSt">The statement to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.ConvertToStatement(DevExpress.CodeRush.StructuralParser.If)">
            <summary>
            Converts if language element to lite structure element.
            </summary>
            <param name="ifSt">The statement to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.ConvertToStatement(DevExpress.CodeRush.StructuralParser.ElseIf)">
            <summary>
            Converts ElseIf language element to lite structure element.
            </summary>
            <param name="st">The statement to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.ConvertToStatement(DevExpress.CodeRush.StructuralParser.Else)">
            <summary>
            Converts else language element to lite structure element.
            </summary>
            <param name="st">The statement to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.ConvertToStatement(DevExpress.CodeRush.StructuralParser.Catch)">
            <summary>
            Converts catch language element to lite structure element.
            </summary>
            <param name="catchSt">The statement to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.ConvertToStatement(DevExpress.CodeRush.StructuralParser.Finally)">
            <summary>
            Converts finally language element to lite structure element.
            </summary>
            <param name="finallySt">The statement to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.ConvertToStatement(DevExpress.CodeRush.StructuralParser.Try)">
            <summary>
            Converts try language element to lite structure element.
            </summary>
            <param name="trySt">The statement to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.ConvertToStatement(DevExpress.CodeRush.StructuralParser.CaseClause)">
            <summary>
            Converts case clause language element to lite structure element.
            </summary>
            <param name="caseClause">The statement to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.ConvertToStatement(DevExpress.CodeRush.StructuralParser.CaseClausesList)">
            <summary>
            Converts case clause list language element to lite structure element.
            </summary>
            <param name="clausesList">The statement to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.ConvertToStatement(DevExpress.CodeRush.StructuralParser.Case)">
            <summary>
            Converts case language element to lite structure element.
            </summary>
            <param name="caseSt">The statement to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.ConvertToStatement(DevExpress.CodeRush.StructuralParser.Switch)">
            <summary>
            Converts switch language element to lite structure element.
            </summary>
            <param name="switchSt">The statement to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.ConvertToStatement(DevExpress.CodeRush.StructuralParser.Return)">
            <summary>
            Converts return language element to lite structure element.
            </summary>
            <param name="returnStatement">The statement to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.ConvertToStatement(DevExpress.CodeRush.StructuralParser.Throw)">
            <summary>
            Converts throw language element to lite structure element.
            </summary>
            <param name="throwStatement">The statement to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.ConvertToStatement(DevExpress.CodeRush.StructuralParser.YieldReturn)">
            <summary>
            Converts yield return language element to lite structure element.
            </summary>
            <param name="yieldStatement">The statement to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.ConvertToStatement(DevExpress.CodeRush.StructuralParser.YieldBreak)">
            <summary>
            Converts yield break language element to lite structure element.
            </summary>
            <param name="yieldStatement">The statement to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.ConvertToStatement(DevExpress.CodeRush.StructuralParser.NestedMethod)">
            <summary>
            Converts nested method language element to lite structure element.
            </summary>
            <param name="nested">The statement to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.ConvertToStatement(DevExpress.CodeRush.StructuralParser.AddHandler)">
            <summary>
            Converts add handler language element to lite structure element.
            </summary>
            <param name="addHandler">The statement to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.ConvertToStatement(DevExpress.CodeRush.StructuralParser.RemoveHandler)">
            <summary>
            Converts remove handler language element to lite structure element.
            </summary>
            <param name="removeHandler">The statement to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.ConvertToStatement(DevExpress.CodeRush.StructuralParser.Assignment)">
            <summary>
            Converts assignment statement.
            </summary>
            <param name="assignment">The statement to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.ConvertToStatement(DevExpress.CodeRush.StructuralParser.NamespaceReference)">
            <summary>
            Converts namespace reference.
            </summary>
            <param name="reference">The statement to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.NamespaceReference)">
            <summary>
            Converts namespace reference element to lite structure element.
            </summary>
            <param name="reference">The reference to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.ExternAlias)">
            <summary>
            Converts extern alias element to lite structure element.
            </summary>
            <param name="alias">The alias to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.AddressOfExpression)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.AnonymousMethodExpression)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.LambdaExpression)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.ArgumentDirectionExpression)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.ArrayCreateExpression)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.ArrayInitializerExpression)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.AssignmentExpression)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.AttributeVariableInitializer)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.BaseReferenceExpression)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.ThisReferenceExpression)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.MyClassExpression)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.EqualsExpression)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.BinaryOperatorExpression)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.CheckedExpression)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.UncheckedExpression)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.ConditionalExpression)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.IfOperatorExpression)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.ConditionalTypeCast)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.DefaultValueExpression)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.Is)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.IsNot)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.LogicalInversion)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.LogicalOperation)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.ParenthesizedExpression)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.QueryableCollectionReferenceExpression)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.RelationalOperation)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.SizeOfExpression)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.TypeOfExpression)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.MemberAccessExpression)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.NullCoalescingExpression)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.PrimitiveExpression)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.TypeCastExpression)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.CastTargetExpression)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.CTypeExpression)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.DirectCastExpression)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.TypeCheck)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.TypeOfIsExpression)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.UnaryDecrement)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.UnaryIncrement)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.UnaryOperatorExpression)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.ElementReferenceExpression)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.XmlAttributeReferenceExpression)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.XmlElementReferenceExpression)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.QualifiedElementReference)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.QualifiedAliasExpression)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.ObjectCreationExpression)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.IndexerExpression)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.MethodReferenceExpression)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.TypeReferenceExpression)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.DeleteExpression)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.ComplexExpression)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.XmlExpression)">
            <summary>
            Converts expression language element to lite structure element.
            </summary>
            <param name="expression">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConverter.Convert(DevExpress.CodeRush.StructuralParser.XmlNode)">
            <summary>
            Converts xml language element to lite structure element.
            </summary>
            <param name="xmlNode">The expression to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDataReader.#ctor(System.IO.Stream,System.IO.BinaryReader,DevExpress.CodeRush.StructuralParser.ElementStorageOptions)">
            <summary>
            Initializes a new instance of the LiteDataReader class.
            </summary>
            <param name="input">The input stream</param>
            <param name="table">The reader to read the string table</param>
            <param name="options">The element storage options</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDataReader.#ctor(System.IO.Stream,System.IO.BinaryReader,DevExpress.CodeRush.StructuralParser.ProjectElement,DevExpress.CodeRush.StructuralParser.ElementStorageOptions)">
            <summary>
            Initializes a new instance of the LiteMetaDataReader class.
            </summary>
            <param name="input">The input stream</param>
            <param name="table">The reader to read string table</param>
            <param name="project">The projects where current reader was created</param>
            <param name="options">The element storage options</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteDataReader.Project">
            <summary>
            The project which current reader belongs to.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDataWriter.#ctor(System.IO.Stream,System.IO.BinaryWriter,DevExpress.CodeRush.StructuralParser.ElementStorageOptions)">
            <summary>
            Initializes a new instance of the LiteDataWriter class.
            </summary>
            <param name="output">The output stream</param>
            <param name="table">The writer to write the string table</param>
            <param name="options">The element storage options</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDataWriter.#ctor(System.IO.Stream,System.IO.BinaryWriter,DevExpress.CodeRush.StructuralParser.ProjectElement,DevExpress.CodeRush.StructuralParser.ElementStorageOptions)">
            <summary>
            Initializes a new instance of the LiteDataWriter class.
            </summary>
            <param name="output">The output stream</param>
            <param name="table">The writer to write the string table</param>		
            <param name="project">The projects where current writer was created</param>
            <param name="options">The element storage options</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteDataWriter.Project">
            <summary>
            The project which current writer belongs to.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteStringTable.Count">
            <summary>
            Gets the count of the records in the table.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMetaDataExpression">
            <summary>
            Represents lite weight expression.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMetaDataElement">
            <summary>
            Represents lite weight base element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataElement.#ctor">
            <summary>
            Creates new instance of LiteElement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataExpression.#ctor">
            <summary>
            Creates new instance of LiteMetaDataExpression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataExpression.Is(System.String)">
            <summary>
            Returns true if Type of this element is the same as, or 
            descends from, the specified type.
            Returns false otherwise.
            </summary>
            <param name="fullTypeName">Full type name of the type to check.</param>
            <returns>
            Returns true if Type of this element is the same as, or 
            descends from, the specified type.
            Returns false otherwise.
            </returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataExpression.Is(DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Returns true if type of this element is the same as, or descends from, 
            the specified ITypeElement.
            Returns false otherwise.
            </summary>
            <param name="type">The ITypeElement to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataExpression.Is(System.Type)">
            <summary>
            Returns true if type of this element is the same as, or descends from, 
            the specified Type.
            Returns false otherwise.
            </summary>
            <param name="type">The Type to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataExpression.Is(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,System.String)">
            <summary>
            Returns true if this type element is the same as, or descends from, 
            the specified type.
            Returns false otherwise.
            </summary>
            <param name="resolver">The source tree resolver instance to use.</param>
            <param name="fullTypeName">The full name (e.g., "System.Drawing.Point") of 
            the type to compare against.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataExpression.IsStatement">
            <summary>
            Returns true if this expression is used as statement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataBinaryOperatorExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataBinaryOperatorExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataBinaryOperatorExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataBinaryOperatorExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataBinaryOperatorExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataBinaryOperatorExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataElementReferenceExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataElementReferenceExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataElementReferenceExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataElementReferenceExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataElementReferenceExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataElementReferenceExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataAssignmentExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataAssignmentExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataPrimitiveExpressionBase.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataPrimitiveExpressionBase.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataPrimitiveExpressionBase.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataPrimitiveExpressionBase.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataPrimitiveExpressionBase.Value">
            <summary>
            Gets primitive expression value.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataPrimitiveExpressionBase.PrimitiveType">
            <summary>
            Gets primitive type of this expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTruePrimitiveExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataFalsePrimitiveExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMetaDataPointerTypeReferenceExpression">
            <summary>
            Pointer type reference expression.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression">
            <summary>
            Type reference expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression.#ctor">
            <summary>
            Creates new instance of LiteMetaDataTypeReferenceExpression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression.IsIdenticalTo(DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Returns true if this type reference expression resolves to the same type as the specified type reference.
            </summary>
            <param name="typeRef">The type reference to compare.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression.GetElementType">
            <summary>
            Returns type of inner elements for pointers and arrays.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression.UsesTypeParameters(DevExpress.CodeRush.StructuralParser.IGenericElement)">
            <summary>
            Returns true if this TypeReferenceExpression uses type parameters of the specified generic element.
            </summary>
            <param name="generic">The generic to find type parameters</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression.IsTypeParameter(DevExpress.CodeRush.StructuralParser.IGenericElement)">
            <summary>
            Returns true if this TypeReferenceExpression is type parameter of the specified generic element.
            </summary>
            <param name="generic">The generic to find type parameter.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression.CreateArrayReference(System.Int32)">
            <summary>
            Creates array type reference expression from the current type.
            </summary>
            <param name="rank">The rank of array</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression.AddTypeArguments(DevExpress.CodeRush.StructuralParser.ITypeReferenceExpressionCollection)">
            <summary>
            Adds type arguments to this type reference expression.
            </summary>
            <param name="arguments">The arguments to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression.Is(System.String)">
            <summary>
            Returns true if Type of this element is the same as, or 
            descends from, the specified type.
            Returns false otherwise.
            </summary>
            <param name="fullTypeName">Full type name of the type to check.</param>
            <returns>
            Returns true if Type of this element is the same as, or 
            descends from, the specified type.
            Returns false otherwise.
            </returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression.Is(DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Returns true if type of this element is the same as, or descends from, 
            the specified ITypeElement.
            Returns false otherwise.
            </summary>
            <param name="type">The ITypeElement to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression.Is(System.Type)">
            <summary>
            Returns true if type of this element is the same as, or descends from, 
            the specified Type.
            Returns false otherwise.
            </summary>
            <param name="type">The Type to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression.Is(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,System.String)">
            <summary>
            Returns true if this type element is the same as, or descends from, 
            the specified type.
            Returns false otherwise.
            </summary>
            <param name="resolver">The source tree resolver instance to use.</param>
            <param name="fullTypeName">The full name (e.g., "System.Drawing.Point") of 
            the type to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression.AddTypeArgument(DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Adds type argument to this type reference expression.
            </summary>
            <param name="argument">The argument to add.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression.IsNullable">
            <summary>
            Returns true if this reference is nullable.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression.IsDynamic">
            <summary>
            Returns true if this reference is dynamic.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression.IsGeneric">
            <summary>
            Returns true if this reference is generic.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression.Source">
            <summary>
            Gets source expression.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression.BaseType">
            <summary>
            Gets base type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression.Rank">
            <summary>
            Gets array rank.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression.ArrayBounds">
            <summary>
            Gets array bound expressions.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression.IsArrayType">
            <summary>
            Returns true if this type reference is array reference.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression.IsPointerType">
            <summary>
            Returns true if this type reference is pointer reference.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression.IsConst">
            <summary>
            Returns true if this type is constant.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression.IsUnbound">
            <summary>
            Gets or sets value determining that this reference is generic unbound type reference.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression.IsReferenceType">
            <summary>
            Returns true if this type is reference type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression.IsManaged">
            <summary>
            Returns true if this type is managed type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression.IsVolatile">
            <summary>
            Returns true if this type is volatile.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression.TypeReferenceType">
            <summary>
            Gets type reference type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression.HasElementType">
            <summary>
            Returns true if this expression is array or pointer reference.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression.TypeArguments">
            <summary>
            Returns type arguments for this reference.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression.TypeArity">
            <summary>
            Gets or sets value determining that this reference is generic unbound type reference.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression.FullSignature">
            <summary>
            Gets full signature for expression using its sources
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataPointerTypeReferenceExpression.#ctor">
            <summary>
            Creates new instance of LiteMetaDataPointerTypeReferenceExpression.
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataPointerTypeReferenceExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression)">
            <summary>
            Creates new instance of LiteMetaDataPointerTypeReferenceExpression.
            </summary>
            <param name="baseType">The base type of the expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataPointerTypeReferenceExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataPointerTypeReferenceExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataPointerTypeReferenceExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataPointerTypeReferenceExpression.SetBaseType(DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Sets base type for this type reference expression.
            </summary>
            <param name="baseType">The base type of the expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataPointerTypeReferenceExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataPointerTypeReferenceExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataPointerTypeReferenceExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataPointerTypeReferenceExpression.AddTypeArgument(DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Adds type argument to this type reference expression.
            </summary>
            <param name="argument">The argument to add.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataPointerTypeReferenceExpression.BaseType">
            <summary>
            Gets base type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataPointerTypeReferenceExpression.IsPointerType">
            <summary>
            Returns true if this type reference is pointer reference.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataPointerTypeReferenceExpression.TypeReferenceType">
            <summary>
            Gets type reference type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMetaDataDynamicTypeReferenceExpression">
            <summary>
            Dynamic type reference expression.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMetaDataSimpleTypeReferenceExpression">
            <summary>
            Simple type reference expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataSimpleTypeReferenceExpression.#ctor">
            <summary>
            Creates new instance of LiteMetaDataSimpleTypeReferenceExpression.
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataSimpleTypeReferenceExpression.#ctor(System.String)">
            <summary>
            Creates new instance of LiteMetaDataSimpleTypeReferenceExpression.
            </summary>
            <param name="name">The name of the expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataSimpleTypeReferenceExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataSimpleTypeReferenceExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataSimpleTypeReferenceExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataSimpleTypeReferenceExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataSimpleTypeReferenceExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataSimpleTypeReferenceExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataSimpleTypeReferenceExpression.AddTypeArgument(DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Adds type argument to this type reference expression.
            </summary>
            <param name="argument">The argument to add.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataSimpleTypeReferenceExpression.Name">
            <summary>
            Gets name of the simple type reference.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataDynamicTypeReferenceExpression.#ctor">
            <summary>
            Creates new instance of LiteMetaDataDynamicTypeReferenceExpression.
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataDynamicTypeReferenceExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataDynamicTypeReferenceExpression.IsDynamic">
            <summary>
            Returns true if this reference is dynamic.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataPrimitiveExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataPrimitiveExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMetaDataQualifiedElementReferenceExpression">
            <summary>
            Represents qualified element reference.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataQualifiedElementReferenceExpression.#ctor">
            <summary>
            Creates a new instance of LiteMetaDataQualifiedElementReferenceExpression
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataQualifiedElementReferenceExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteMetaDataExpression,System.String)">
            <summary>
            Creates a new instance of LiteMetaDataQualifiedElementReferenceExpression
            </summary>
            <param name="source">The source expression.</param>
            <param name="name">The name of the element reference.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataQualifiedElementReferenceExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataQualifiedElementReferenceExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataQualifiedElementReferenceExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataQualifiedElementReferenceExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataQualifiedElementReferenceExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMetaDataFieldConstElement">
            <summary>
            Represents a const.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMetaDataFieldElement">
            <summary>
            Represents a field.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement">
            <summary>
            Represents type member.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement.#ctor">
            <summary>
            Creates new instance of LiteMetaDataMemberElement.
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement.#ctor(System.String)">
            <summary>
            Creates new instance of LiteMetaDataMemberElement.
            </summary>
            <param name="name">The name of the member.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement.SpecifierIsSet(DevExpress.CodeRush.StructuralParser.AccessSpecifiersFlags)">
            <summary>
            Checks if specifier is set.
            </summary>
            <param name="flag">The specifier flag to check.</param>
            <returns></returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement.SetSpecifierValue(DevExpress.CodeRush.StructuralParser.AccessSpecifiersFlags,System.Boolean)">
            <summary>
            Sets specified flag.
            </summary>
            <param name="flag">The specifier flag to set.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement.AddChild(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Adds element to the member.
            </summary>
            <param name="element">The LiteElement to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement.AddAttribute(DevExpress.CodeRush.StructuralParser.LiteMetaDataAttributeElement)">
            <summary>
            Adds attribute to the member.
            </summary>
            <param name="attr">The LiteAttributeElement to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement.AddAttributes(DevExpress.CodeRush.StructuralParser.LiteAttributeElementCollection)">
            <summary>
            Adds attributes to the member.
            </summary>
            <param name="attributes">The attributes to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement.SetAttributes(DevExpress.CodeRush.StructuralParser.LiteAttributeElementCollection)">
            <summary>
            Sets attributes to this element.
            </summary>
            <param name="attributes">The attributes to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement.GetOverrideCode">
            <summary>
            Gets code to override this member.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement.GetOverrideCode(System.Boolean)">
            <summary>
            Gets code to override this member.
            </summary>
            <param name="callBase">Pass true to add call to base method.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement.GetOverrideCode(System.Boolean,System.String,System.String)">
            <summary>
            Gets code to override this member.
            </summary>
            <param name="callBase">Pass true to add call to base method.</param>
            <param name="codeBefore">The code to add before method call.</param>
            <param name="codeAfter">The code to add after method call.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement.Is(System.String)">
            <summary>
            Returns true if Type of this element is the same as, or 
            descends from, the specified type.
            Returns false otherwise.
            </summary>
            <param name="fullTypeName">Full type name of the type to check.</param>
            <returns>
            Returns true if Type of this element is the same as, or 
            descends from, the specified type.
            Returns false otherwise.
            </returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement.Is(DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Returns true if type of this element is the same as, or descends from, 
            the specified ITypeElement.
            Returns false otherwise.
            </summary>
            <param name="type">The ITypeElement to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement.Is(System.Type)">
            <summary>
            Returns true if type of this element is the same as, or descends from, 
            the specified Type.
            Returns false otherwise.
            </summary>
            <param name="type">The Type to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement.Is(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,System.String)">
            <summary>
            Returns true if this type element is the same as, or descends from, 
            the specified type.
            Returns false otherwise.
            </summary>
            <param name="resolver">The source tree resolver instance to use.</param>
            <param name="fullTypeName">The full name (e.g., "System.Drawing.Point") of 
            the type to compare against.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement.Name">
            <summary>
            Gets type name.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement.NameQualifier">
            <summary>
            Gets or sets name qualifier for this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement.Attributes">
            <summary>
            Gets attributes for this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement.Signature">
            <summary>
            Gets or sets member signature.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement.Visibility">
            <summary>
            Gets member visibility
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement.IsAbstract">
            <summary>
            Gets value indicating that this element is abstract.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement.IsVirtual">
            <summary>
            Gets value indicating that this member is virtual.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement.IsOverride">
            <summary>
            Gets value indicating that this member override base element.
            </summary>		
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement.IsNew">
            <summary>
            Gets value indicating that this member override base element.
            </summary>		
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement.IsVolatile">
            <summary>
            Gets value indicating that this member is volatile.
            </summary>		
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement.IsConst">
            <summary>
            Gets value indicating that this member is constant.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement.IsConstVolatile">
            <summary>
            Gets value indicating that this member is const-volatile.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement.IsPartial">
            <summary>
            Gets value indicating that this member is partial.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement.IsReadOnly">
            <summary>
            Gets value indicating that this member is read-only.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement.IsStatic">
            <summary>
            Gets value indicating that this member is static.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement.IsSealed">
            <summary>
            Gets value indicating that this member is sealed.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement.IsExtern">
            <summary>
            Gets value indicating that this member is extern.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement.IsExplicitInterfaceMember">
            <summary>
            Returns true if this member is explicitly declared interface member.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement.Implements">
            <summary>
            Returns expression collection for implemented interface members.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement.CodeChildren">
            <summary>
            Gets children elements located in body of current member.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement.HasDelimitedBlock">
            <summary>
            Returns true if this member owns a delimited block of code.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataFieldElement.#ctor">
            <summary>
            Creates a new instance of LiteMetaDataFieldElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataFieldElement.#ctor(System.String,DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Creates a new instance of LiteMetaDataFieldElement
            </summary>
            <param name="name">The name of the event.</param>
            <param name="type">The type of the event.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataFieldElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataFieldElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataFieldElement.SetType(DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Sets type of this element.
            </summary>
            <param name="type">The type to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataFieldElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataFieldElement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataFieldElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataFieldElement.Type">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataFieldElement.Modifiers">
            <summary>
            Gets element array modifiers.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataFieldElement.IsConst">
            <summary>
            Defines if field is constant
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataFieldElement.Expression">
            <summary>
            Get initialization expression
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataFieldElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataFieldElement.IsLocal">
            <summary>
            Returns true if variable is local.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataFieldElement.IsField">
            <summary>
            Returns true if variable is field.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataFieldElement.IsParameter">
            <summary>
            Returns true if variable is parameter.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataFieldElement.IsTypeDef">
            <summary>
            Gets or sets value indicating that this 
            element is a typedef declaration.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataFieldElement.IsAspxTag">
            <summary>
            Returns true if this variable was created from Aspx tag.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataFieldElement.IsRunAtServer">
            <summary>
            Returns true if this variable was created from Aspx tag and has runat=server attribute.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataFieldElement.IsObjectCreationInit">
            <summary>
            Returns true if this field is object creation initialization.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataFieldElement.IsFixedSizeBuffer">
            <summary>
            Returns true if this element is a fixed size buffer declaration.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataFieldElement.IsBitField">
            <summary>
            Returns true if variable is bit field.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataFieldElement.BitFieldSize">
            <summary>
            Gets bit field size.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataFieldElement.IsVolatile">
            <summary>
            Returns true if variable is volatile.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataFieldElement.NodeLink">
            <summary>
            Gets element node link for this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataFieldElement.HasNodeLink">
            <summary>
            Returns true if this element has element node link.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataFieldConstElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataFieldConstElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataFieldConstElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataFieldConstElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataFieldConstElement.Expression">
            <summary>
            Gets or sets value of the constant.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataFieldConstElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMetaDataNamedTypeParameterConstraintElement">
            <summary>
            Represents generic named type parameter constraint.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeParameterConstraintElement">
            <summary>
            Represents generic type parameter constraint.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataNamedTypeParameterConstraintElement.#ctor">
            <summary>
            Creates new LiteNamedTypeParameterConstraintElement instance.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataNamedTypeParameterConstraintElement.#ctor(DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression)">
            <summary>
            Creates new LiteNamedTypeParameterConstraintElement instance.
            </summary>
            <param name="typeReference">The constraint type reference.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataNamedTypeParameterConstraintElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataNamedTypeParameterConstraintElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataNamedTypeParameterConstraintElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataNamedTypeParameterConstraintElement.SetTypeReference(DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression)">
            <summary>
            Sets type reference expression.
            </summary>
            <param name="expression">The expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataNamedTypeParameterConstraintElement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataNamedTypeParameterConstraintElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataNamedTypeParameterConstraintElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataNamedTypeParameterConstraintElement.TypeReference">
            <summary>
            Gets type reference
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LanguageParserBase">
            <summary>
            Abstract class that provides specific parser and language services.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LanguageParserBase.CreateParser">
            <summary>
            Returns specific language parser.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LanguageParserBase.AddComments(DevExpress.CodeRush.StructuralParser.TokenCollection,DevExpress.CodeRush.StructuralParser.CommentCollection)">
            <summary>
            Adds comments to the given token collection.
            </summary>
            <param name="collection">The collection to add comments.</param>
            <param name="comments">The comments to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LanguageParserBase.GetSimpleTypeName(System.String)">
            <summary>
            Returns simple type name from the given full type name.
            </summary>
            <param name="fullName">The full type name.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LanguageParserBase.GetFullTypeName(System.String)">
            <summary>
            Returns full type name from the given simple type name.
            </summary>
            <param name="simpleName">The simple type name.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LanguageParserBase.IsStandardType(System.String)">
            <summary>
            Returns true if the given type is standard type.
            </summary>
            <param name="typeName">The type name to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LanguageParserBase.CheckKeyword(System.String)">
            <summary>
            Returns true if the given string is a keyword.
            </summary>
            <param name="keyword">The string to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LanguageParserBase.CheckNumber(System.String)">
            <summary>
            Returns true if the given string is a number.
            </summary>
            <param name="number">The string to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LanguageParserBase.GetContinueStatement">
            <summary>
            Gets continue statement for the language.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LanguageParserBase.GetTokenCollection(System.String)">
            <summary>
            Gets token collection for the given text.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LanguageParserBase.GetTokenCategory(DevExpress.CodeRush.StructuralParser.Token)">
            <summary>
            Gets token collection for the given text.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LanguageParserBase.IsProjectSupported(EnvDTE.Project)">
            <summary>
            Returns true if the given project is supported by the language.
            </summary>
            <param name="project">The project to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LanguageParserBase.CreateProjectLoader">
            <summary>
            Creates lanaguge specific project loader.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LanguageParserBase.GetElementBuilder">
            <summary>
            Returns appropriate Element builder for language.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LanguageParserBase.GetCodeGenerator">
            <summary>
            Returns appropriate Code Generator for language.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LanguageParserBase.GenerateImplementsCode(DevExpress.CodeRush.StructuralParser.Interface,DevExpress.CodeRush.StructuralParser.Member,System.Boolean)">
            <summary>
            Generates Implements code.
            </summary>
            <param name="element">The interface to generate.</param>
            <param name="member">The member to which sould be pointed explicit implementation.</param>
            <param name="isFirstImplements">Defines is generating ancestor is first in list of ancestors</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LanguageParserBase.ImplementInterfaceForType(DevExpress.CodeRush.StructuralParser.TypeDeclaration,DevExpress.CodeRush.StructuralParser.Interface)">
            <summary>
            Implements specified interface for TypeDeclaration.
            </summary>
            <param name="type">The TypeDeclaration to implement interface</param>
            <param name="newInterface">The interface which sould be implemented</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LanguageParserBase.InheritType(DevExpress.CodeRush.StructuralParser.TypeDeclaration,DevExpress.CodeRush.StructuralParser.TypeDeclaration)">
            <summary>
            Inherits specified type for the given type (makes given type a descendant of the specified type).
            </summary>
            <param name="type">The type to make a descendant.</param>
            <param name="ancestor">The ancestor type to inherit.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LanguageParserBase.GenerateInheritsCode(DevExpress.CodeRush.StructuralParser.TypeDeclaration,DevExpress.CodeRush.StructuralParser.TypeDeclaration)">
            <summary>
            Generates inherits code.
            </summary>
            <param name="type">The type to make a descendant.</param>
            <param name="ancestor">The ancestor type to inherit.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LanguageParserBase.GetNullReferenceExpression">
            <summary>
            Returns expression for null reference.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LanguageParserBase.GetObjectTypeReferenceExpression">
            <summary>
            Returns object type reference expression.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LanguageParserBase.GetQualifiedElementReferernce(System.String,System.String)">
            <summary>
            Creates qualified reference expression.
            </summary>
            <param name="qualifier">The qualifier name.</param>
            <param name="reference">The reference name.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LanguageParserBase.GetDefaultStringValue(DevExpress.CodeRush.StructuralParser.PrimitiveExpression)">
            <summary>
            Returns default value expression for the given string primitive expression.
            </summary>
            <param name="primitive">The primitive expression to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LanguageParserBase.GetDefaultCharValue(DevExpress.CodeRush.StructuralParser.PrimitiveExpression)">
            <summary>
            Returns default value expression for the given char primitive expression.
            </summary>
            <param name="primitive">The primitive expression to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LanguageParserBase.GetDefaultDateTimeValue(DevExpress.CodeRush.StructuralParser.PrimitiveExpression)">
            <summary>
            Returns default value expression for the given char primitive expression.
            </summary>
            <param name="primitive">The primitive expression to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LanguageParserBase.GetDefaultValueExpression(DevExpress.CodeRush.StructuralParser.PrimitiveExpression)">
            <summary>
            Returns default value expression for the given primitive expression.
            </summary>
            <param name="primitive">The primitive expression to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LanguageParserBase.SupportsMacroses">
            <summary>
            Returns true if current language supports macroses.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LanguageParserBase.Parser">
            <summary>
            Gets language specific parser.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LanguageParserBase.Tokens">
            <summary>
            Gets language specific tokens.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LanguageParserBase.MemberAccessOperator">
            <summary>
            Gets language specific access operator.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParseWorkerThread.Cancel">
            <summary>
            Cancels the current parsing job and clears the queue.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParseWorkerThread.Start">
            <summary>
            Called by CodeRush.IDTExtensibility2.OnConnection(). Do not use.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParseWorkerThread.Stop">
            <summary>
            Used by CodeRush.IDTExtensibility2.OnDisconnection(). Do not use.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParseWorkerThread.HasFilesToParse">
            <summary>
            Returns true if the DXCore parser thread has files to parse still in its queue; otherwise, false.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParseWorkerThread.IsParsing">
            <summary>
            Returns true if the DXCore parser thread is currently parsing its queue; otherwise, false.
            </summary>
        </member>
        <member name="E:DevExpress.CodeRush.StructuralParser.ParseWorkerThread.Started">
            <summary>
            Raised when parse worker thread is started.
            </summary>
        </member>
        <member name="E:DevExpress.CodeRush.StructuralParser.ParseWorkerThread.Finished">
            <summary>
            Raised when parse worker thread is stopped.
            </summary>
        </member>
        <member name="E:DevExpress.CodeRush.StructuralParser.ParseWorkerThread.ItemProcessed">
            <summary>
            Raised when source file item is parsed.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParseWorkerThread.Instance">
            <summary>
            Gets parse worker thread instance.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReferenceInfo.IsSystemAssembly">
            <summary>
            Returns true if assembly is system and should be cached to system
            cache assemblies.
            </summary>
            <returns>
            Returns true if assembly is system and should be cached to system
            cache assemblies.
            </returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReferenceInfo.IsSystemAssembly(System.String)">
            <summary>
            Returns true if assembly is system and should be cached to system
            cache assemblies.
            </summary>
            <returns>
            Returns true if assembly is system and should be cached to system
            cache assemblies.
            </returns>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.CodeAnalysis.AssignmentAnalysisRules">
            <summary>
            Summary description for AssignmentAnalysisRules.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.AssignmentAnalysisRules.Sequence(DevExpress.CodeRush.StructuralParser.CodeAnalysis.AssignmentAnalysisResult,DevExpress.CodeRush.StructuralParser.CodeAnalysis.AssignmentAnalysisResult)">
            <summary>
            Makes assignment analysis for the two memners
            </summary>
            <param name="first">AssignmentAnalysisResult for the first member</param>
            <param name="second">AssignmentAnalysisResult for the second member</param>		
            <returns>AssignmentAnalysisResult</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.AssignmentAnalysisRules.Parallel(DevExpress.CodeRush.StructuralParser.CodeAnalysis.AssignmentAnalysisResult,DevExpress.CodeRush.StructuralParser.CodeAnalysis.AssignmentAnalysisResult)">
            <summary>
            Makes assignment analysis for the two memners
            </summary>
            <param name="first">AssignmentAnalysisResult for the first member</param>
            <param name="second">AssignmentAnalysisResult for the second member</param>		
            <returns>AssignmentAnalysisResult</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.AssignmentAnalysisRules.Sequence(DevExpress.CodeRush.StructuralParser.CodeAnalysis.AssignmentAnalysisResult,DevExpress.CodeRush.StructuralParser.CodeAnalysis.AssignmentAnalysisResult,DevExpress.CodeRush.StructuralParser.CodeAnalysis.ReturnState)">
            <summary>
            Makes assignment analysis for the two memners
            </summary>
            <param name="first">AssignmentAnalysisResult for the first member</param>
            <param name="second">AssignmentAnalysisResult for the second member</param>
            <param name="returnAfterFirstMember">return state after processing of the first member</param>
            <returns>AssignmentAnalysisResult</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.DefaultValueGenerator.GetFullTypeName(System.String)">
            <summary>
            Returns full name for primitive types
            </summary>
            <param name="simpleName">Simple name to define. For C#: int, float ...</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.DefaultValueGenerator.GetSimpleTypeName(System.String)">
            <summary>
            Returns simple name for built-in types.
            </summary>
            <param name="fullName">Full name to define. For example: System.Int16, System.UInt32 ...</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.DefaultValueGenerator.IsBuiltInType(System.String)">
            <summary>
            Checks if type with pointed name is built-in.
            </summary>
            <param name="typeName">The type name to check.</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.DefaultValueGenerator.IsReferenceType(System.String)">
            <summary>
            Defines if type with pointed name is reference type.
            </summary>
            <param name="fullName">The full name of type</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.DefaultValueGenerator.IsReferenceType(DevExpress.CodeRush.StructuralParser.LanguageElement,System.String)">
            <summary>
            Defines if type with pointed name is reference type.
            </summary>
            <param name="start">Start element</param>
            <param name="typeName">The name of type</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.DefaultValueGenerator.IsReferenceType(DevExpress.CodeRush.StructuralParser.LanguageElement,System.String,System.Boolean@)">
            <summary>
            Defines if type with pointed name is reference type.
            </summary>
            <param name="start">Start element</param>
            <param name="typeName">The name of type</param>	
            <param name="couldMakeResolving">Returns true if type was resolved</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.DefaultValueGenerator.IsValueType(System.String)">
            <summary>
            Defines if type with pointed name is value type.
            </summary>
            <param name="fullName">The full name of type</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.DefaultValueGenerator.IsValueType(DevExpress.CodeRush.StructuralParser.LanguageElement,System.String)">
            <summary>
            Defines if type with pointed name is value type.
            </summary>
            <param name="typeName">The name of type</param>
            <param name="start">Start element</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.DefaultValueGenerator.IsSealedType(System.String)">
            <summary>
            Defines if type with pointed name is sealed type.
            </summary>
            <param name="fullName">The full name of type</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.DefaultValueGenerator.IsSealedType(DevExpress.CodeRush.StructuralParser.LanguageElement,System.String)">
            <summary>
            Defines if type with pointed name is sealed type.
            </summary>
            <param name="typeName">The name of type</param>
            <param name="start">Start element</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.DefaultValueGenerator.IsEnum(DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Checks if given type element is enumeration.
            </summary>
            <param name="type">The type to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.DefaultValueGenerator.IsStructure(DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Checks if given type element is structure.
            </summary>
            <param name="type">The type to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.DefaultValueGenerator.IsValueType(DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Checks if given type element is value type.
            </summary>
            <param name="type">The type to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.DefaultValueGenerator.IsSealedType(DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Checks if given type element is sealed type.
            </summary>
            <param name="type">The type to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.DefaultValueGenerator.IsReferenceType(DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Checks if given type element is reference type.
            </summary>
            <param name="type">The type to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.DefaultValueGenerator.GetDefaultInitializerForType(System.String)">
            <summary>
            Returns initialize expression for pointed type.
            </summary>
            <param name="fullName">The full name of type</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.DefaultValueGenerator.GetDefaultInitializerForType(System.String,DevExpress.CodeRush.StructuralParser.CodeAnalysis.InitialzeOptions)">
            <summary>
            Returns initialize expression for pointed type.
            </summary>
            <param name="fullName">The full name of type</param>
            <param name="options">The options for initializing</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.DefaultValueGenerator.GetDefaultInitializerForType(System.String,DevExpress.CodeRush.StructuralParser.CodeAnalysis.InitialzeOptions,System.String)">
            <summary>
            Returns initialize expression for pointed type.
            </summary>
            <param name="fullName">The full name of type</param>
            <param name="options">The options for initializing</param>
            <param name="languageID">The language ID</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.DefaultValueGenerator.GetDefaultInitializerForType(DevExpress.CodeRush.StructuralParser.IElement,System.String)">
            <summary>
            Returns initialize expression for pointed type.
            </summary>
            <param name="start">Start element</param>
            <param name="typeName">The name of type</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.DefaultValueGenerator.GetDefaultInitializerForType(DevExpress.CodeRush.StructuralParser.IElement,System.String,DevExpress.CodeRush.StructuralParser.CodeAnalysis.InitialzeOptions)">
            <summary>
            Returns initialize expression for pointed type.
            </summary>
            <param name="start">Start element</param>
            <param name="typeName">The name of type</param>
            <param name="options">The options for initializing</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.DefaultValueGenerator.GetDefaultInitializerForType(DevExpress.CodeRush.StructuralParser.IElement,System.String,DevExpress.CodeRush.StructuralParser.CodeAnalysis.InitialzeOptions,System.String)">
            <summary>
            Returns initialize expression for pointed type.
            </summary>
            <param name="start">Start element</param>
            <param name="typeName">The name of type</param>
            <param name="options">The options for initializing</param>
            <param name="languageID">The language ID</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.DefaultValueGenerator.GetDefaultInitializerForType(DevExpress.CodeRush.StructuralParser.TypeReferenceExpression)">
            <summary>
            Returns initialize expression for type reference.
            </summary>
            <param name="type">The type reference to define default initializer</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.DefaultValueGenerator.GetDefaultInitializerForType(DevExpress.CodeRush.StructuralParser.TypeReferenceExpression,DevExpress.CodeRush.StructuralParser.CodeAnalysis.InitialzeOptions)">
            <summary>
            Returns initialize expression for type reference.
            </summary>
            <param name="type">The type reference to define default initializer</param>
            <param name="options">The options for initializing</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.DefaultValueGenerator.GetDefaultInitializerForType(DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Returns initialize expression for pointed type element.
            </summary>
            <param name="type">The type element to define default initializer</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.DefaultValueGenerator.GetDefaultInitializerForType(DevExpress.CodeRush.StructuralParser.ITypeElement,DevExpress.CodeRush.StructuralParser.CodeAnalysis.InitialzeOptions)">
            <summary>
            Returns initialize expression for pointed type element.
            </summary>
            <param name="type">The type element to define default initializer</param>
            <param name="options">The options for initializing</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.DefaultValueGenerator.GenerateDefaultValueForType(System.String)">
            <summary>
            Generates default value for pointed type.
            </summary>
            <param name="fullName">The full name of type</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.DefaultValueGenerator.GenerateDefaultValueForType(System.String,DevExpress.CodeRush.StructuralParser.CodeAnalysis.InitialzeOptions)">
            <summary>
            Generates default value for pointed type.
            </summary>
            <param name="fullName">The full name of type</param>
            <param name="options">The options for initializing</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.DefaultValueGenerator.GenerateDefaultValueForType(DevExpress.CodeRush.StructuralParser.IElement,System.String)">
            <summary>
            Generates default value for pointed type.
            </summary>
            <param name="start">Start element</param>
            <param name="typeName">The name of type</param>	
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.DefaultValueGenerator.GenerateDefaultValueForType(DevExpress.CodeRush.StructuralParser.IElement,System.String,DevExpress.CodeRush.StructuralParser.CodeAnalysis.InitialzeOptions)">
            <summary>
            Generates default value for pointed type.
            </summary>
            <param name="start">Start element</param>
            <param name="typeName">The name of type</param>	
            <param name="options">The options for initializing</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.DefaultValueGenerator.GenerateDefaultValueForType(DevExpress.CodeRush.StructuralParser.TypeReferenceExpression)">
            <summary>
            Generates default value for type reference.
            </summary>
            <param name="type">The type reference to generate default value</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.DefaultValueGenerator.GenerateDefaultValueForType(DevExpress.CodeRush.StructuralParser.TypeReferenceExpression,DevExpress.CodeRush.StructuralParser.CodeAnalysis.InitialzeOptions)">
            <summary>
            Generates default value for type reference.
            </summary>
            <param name="type">The type reference to generate default value</param>
            <param name="options">The options for initializing</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.DefaultValueGenerator.GenerateDefaultValueForType(DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Generates default value for type declaration.
            </summary>
            <param name="type">The type element to generate default value</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.DefaultValueGenerator.GenerateDefaultValueForType(DevExpress.CodeRush.StructuralParser.ITypeElement,DevExpress.CodeRush.StructuralParser.CodeAnalysis.InitialzeOptions)">
            <summary>
            Generates default value for type declaration.
            </summary>
            <param name="type">The type element to generate default value</param>
            <param name="options">The options for initializing</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.DefaultValueGenerator.GetEmptyExpressionCheck(System.String,DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Returns check expression for custom type.
            </summary>
            <param name="valueName">The name of value which should be checked</param>
            <param name="type">The type of value which should be checked</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.DefaultValueGenerator.GetEmptyExpressionCheck(System.String,DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression,System.Boolean@)">
            <summary>
            Returns check expression for custom type.
            </summary>
            <param name="valueName">The name of value which should be checked</param>
            <param name="type">The type of value which should be checked</param>				
            <param name="hasEmptyCheck">Returns true if value has check for empty value</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.FlowBreakAnalysisRules.Sequence(DevExpress.CodeRush.StructuralParser.CodeAnalysis.FlowBreakAnalysisResult,DevExpress.CodeRush.StructuralParser.CodeAnalysis.FlowBreakAnalysisResult)">
            <summary>
            Makes flow break analysis for the two members
            </summary>
            <param name="first">FlowBreakAnalysisResult for the first member</param>
            <param name="second">FlowBreakAnalysisResult for the second member</param>		
            <returns>FlowBreakAnalysisResult</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.FlowBreakAnalysisRules.Parallel(DevExpress.CodeRush.StructuralParser.CodeAnalysis.FlowBreakAnalysisResult,DevExpress.CodeRush.StructuralParser.CodeAnalysis.FlowBreakAnalysisResult)">
            <summary>
            Makes flow break analysis for the two memners
            </summary>
            <param name="first">FlowBreakAnalysisResult for the first member</param>
            <param name="second">FlowBreakAnalysisResult for the second member</param>		
            <returns>FlowBreakAnalysisResult</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.PGNodeCollection.GetAnalysisNode">
            <summary>
            Returns root analysis node for the node collection.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.PGNodeCollection.Detect(System.String)">
            <summary>
            Performs assignment analysis for the given reference name.
            </summary>
            <param name="refName">The name of the element to analyse.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CodeAnalysis.PGNodeCollection.Detect(System.String,System.Boolean,DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Performs assignment analysis for the given reference name.
            </summary>
            <param name="resolver"></param>
            <param name="refName">The name of the element to analyse.</param>
            <param name="considerFlowBreaks"></param>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.CodeAnalysis.TypeComparer">
            <summary>
            Class for the type comparing.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.VariableUsageInfo">
            <summary>
            Summary description for VariableUsageInfo.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.VariableUsageInfo.HasReturnFlowBreaks">
            <summary>
            Returns true if analyzed range has return flow breaks.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.VariableUsageInfo.ResolvedType">
            <summary>
             Gets or sets resolved type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.IVSSettingsService.VersionAtLeast(DevExpress.DXCore.Common.VisualStudioVersion)">
            <summary>
            Determines whether the currently running version of Visual Studio is the same or greater
            than the specified version.
            </summary>
            <param name="version">The version to check against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.IVSSettingsService.VersionAtMost(DevExpress.DXCore.Common.VisualStudioVersion)">
            <summary>
            Determines whether the currently running version of Visual Studio is the same or less
            than the specified version.
            </summary>
            <param name="version">The version to check against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.IVSSettingsService.VersionLessThan(DevExpress.DXCore.Common.VisualStudioVersion)">
            <summary>
            Determines whether the currently running version of Visual Studio is less than the specified
            version.
            </summary>
            <param name="version">The version to check against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.IVSSettingsService.VersionGreaterThan(DevExpress.DXCore.Common.VisualStudioVersion)">
            <summary>
            Determines whether the currently running version of Visual Studio is greater than the
            specified version.
            </summary>
            <param name="version">The version to check against.</param>
            <returns></returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.IProfilingService.StartTask(System.String)">
            <summary>
            Starts the profiling task.
            </summary>
            <param name="name">The name of the profiling task</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.IProfilingService.EndTask(DevExpress.CodeRush.Common.IProfilingTask)">
            <summary>
            Ends the profiling task.
            </summary>
            <param name="task">The task to end</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.IProfilingService.NeedProfileParsing">
            <summary>
            Returns true if parsing should be profiled.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.IProfilingService.NeedProfileResolving">
            <summary>
            Returns true if resolving should be profiled.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.IProfilingService.LogToDisk">
            <summary>
            Returns true if disk logging is enabled.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LitePrimitiveExpressionBase.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LitePrimitiveExpressionBase.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LitePrimitiveExpressionBase.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LitePrimitiveExpressionBase.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LitePrimitiveExpressionBase.IsBooleanLiteral">
            <summary>
            Returns true if this primitive expression is boolean literal.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LitePrimitiveExpressionBase.IsStringLiteral">
            <summary>
            Returns true if this primitive expression is string literal.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LitePrimitiveExpressionBase.IsCharLiteral">
            <summary>
            Returns true if this primitive expression is char literal.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LitePrimitiveExpressionBase.IsNullLiteral">
            <summary>
            Returns true if this primitive expression is null literal.
            </summary>				
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LitePrimitiveExpressionBase.Value">
            <summary>
            Gets primitive expression value.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LitePrimitiveExpressionBase.PrimitiveType">
            <summary>
            Gets primitive type of this expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFalsePrimitiveExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteIfOperatorExpression">
            <summary>
            If - operator expression.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteConditionalExpression">
            <summary>
            Conditional expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConditionalExpression.#ctor">
            <summary>
            Creates a new instance of LiteConditionalExpression
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConditionalExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression,DevExpress.CodeRush.StructuralParser.LiteExpression,DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteConditionalExpression
            </summary>
            <param name="condition">The condition expression</param>
            <param name="trueExpression">The true expression</param>
            <param name="falseExpression">The false expression</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConditionalExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConditionalExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConditionalExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConditionalExpression.SetCondition(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets condition expression.
            </summary>
            <param name="condition">The condition to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConditionalExpression.SetTrueExpression(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets true expression.
            </summary>
            <param name="trueExpression">The expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConditionalExpression.SetFalseExpression(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets false expression.
            </summary>
            <param name="falseExpression">The expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConditionalExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConditionalExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConditionalExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteConditionalExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteConditionalExpression.Condition">
            <summary>
            Gets condition expression.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteConditionalExpression.TrueExpression">
            <summary>
            Gets true part expression.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteConditionalExpression.FalseExpression">
            <summary>
            Gets false part expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIfOperatorExpression.#ctor">
            <summary>
            Creates a new instance of LiteConditionalExpression
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIfOperatorExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression,DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteConditionalExpression
            </summary>
            <param name="condition">The condition expression</param>
            <param name="falseExpression">The false expression</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIfOperatorExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteIfOperatorExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteGetXmlNamespaceOperator.#ctor">
            <summary>
            Creates a new instance of LiteGetXmlNamespaceOperator
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteGetXmlNamespaceOperator.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteGetXmlNamespaceOperator.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteGetXmlNamespaceOperator.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNullPrimitiveExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteShortInitializeExpression">
            <summary>
            Method call expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteShortInitializeExpression.#ctor">
            <summary>
            Creates a new instance of LiteShortInitializeExpression
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteShortInitializeExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteShortInitializeExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteShortInitializeExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteShortInitializeExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteShortInitializeExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteShortInitializeExpression.AddArgument(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Adds argument to this element.
            </summary>
            <param name="argument">The argument to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteShortInitializeExpression.RemoveArgument(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Removes argument from this element.
            </summary>
            <param name="argument">The argument to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteShortInitializeExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteShortInitializeExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteShortInitializeExpression.IsGeneric">
            <summary>
            Returns true if this expression is generic and has type arguments.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteShortInitializeExpression.Arguments">
            <summary>
            Gets arguments passed to short initialize expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTruePrimitiveExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteLockStatement">
            <summary>
            Represents lite with statement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteLockStatement.#ctor">
            <summary>
            Creates new LiteLockStatement instance.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteLockStatement.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates new LiteLockStatement instance.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteLockStatement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteLockStatement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteLockStatement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteLockStatement.AddChild(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Adds child element.
            </summary>
            <param name="element">The element to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteLockStatement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteLockStatement.SetExpression(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets with statement expression.
            </summary>
            <param name="expression">The expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteLockStatement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteLockStatement.CodeChildren">
            <summary>
            Gets children elements located in body of current statement.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteLockStatement.Expression">
            <summary>
            Gets with statement expression.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteLockStatement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteFixedStatement">
            <summary>
            Represents lite using statement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFixedStatement.#ctor">
            <summary>
            Creates new LiteFixedStatement instance.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFixedStatement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFixedStatement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFixedStatement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFixedStatement.AddChild(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Adds child element.
            </summary>
            <param name="element">The element to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFixedStatement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFixedStatement.AddInitializer(DevExpress.CodeRush.StructuralParser.LiteVariableDeclarationStatement)">
            <summary>
            Adds initializer element.
            </summary>
            <param name="initializer">The element to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFixedStatement.RemoveInitializer(DevExpress.CodeRush.StructuralParser.LiteVariableDeclarationStatement)">
            <summary>
            Removes initializer from this element.
            </summary>
            <param name="initializer">The initializer to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFixedStatement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteFixedStatement.CodeChildren">
            <summary>
            Gets children elements located in body of current statement.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteFixedStatement.Initializers">
            <summary>
            Gets initializers of current using statement.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteFixedStatement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteYieldStatement">
            <summary>
            Represents lite "yield" statement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteYieldBreakStatement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteYieldBreakStatement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteYieldBreakStatement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteYieldBreakStatement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteYieldBreakStatement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteYieldBreakStatement.ImageIndex">
            <summary>
            Gets element image index.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteYieldReturnStatement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteYieldReturnStatement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteYieldReturnStatement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteYieldReturnStatement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteYieldReturnStatement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteYieldReturnStatement.Expression">
            <summary>
            Gets where clause for current expression.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteYieldReturnStatement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteYieldReturnStatement.ImageIndex">
            <summary>
            Gets element image index.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteDoStatement">
            <summary>
            Represents lite do statement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDoStatement.#ctor">
            <summary>
            Creates new LiteDoStatement instance.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDoStatement.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates new LiteDoStatement instance.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDoStatement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDoStatement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDoStatement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDoStatement.AddChild(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Adds child element.
            </summary>
            <param name="element">The element to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDoStatement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDoStatement.SetCondition(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets do statement expression.
            </summary>
            <param name="expression">The expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDoStatement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteDoStatement.CodeChildren">
            <summary>
            Gets children elements located in body of current statement.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteDoStatement.Condition">
            <summary>
            Gets while statement condition.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteDoStatement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteWhileStatement">
            <summary>
            Represents lite while statement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteWhileStatement.#ctor">
            <summary>
            Creates new LiteWhileStatement instance.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteWhileStatement.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates new LiteWhileStatement instance.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteWhileStatement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteWhileStatement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteWhileStatement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteWhileStatement.AddChild(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Adds child element.
            </summary>
            <param name="element">The element to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteWhileStatement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteWhileStatement.SetCondition(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets while statement expression.
            </summary>
            <param name="expression">The expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteWhileStatement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteWhileStatement.CodeChildren">
            <summary>
            Gets children elements located in body of current statement.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteWhileStatement.Condition">
            <summary>
            Gets while statement condition.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteWhileStatement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteForStatement">
            <summary>
            Represents lite with statement.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteConditionalStatement">
            <summary>
            Represents lite weight statement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteForStatement.#ctor">
            <summary>
            Creates new LiteForStatement instance.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteForStatement.#ctor(DevExpress.CodeRush.StructuralParser.IElementCollection,DevExpress.CodeRush.StructuralParser.LiteExpression,DevExpress.CodeRush.StructuralParser.LiteExpressionCollection)">
            <summary>
            Creates new LiteForStatement instance.
            </summary>
            <param name="initializers">The initializers of the for statement</param>
            <param name="condition">The condition of the for statement</param>
            <param name="incrementors">The incrementors of the for statement</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteForStatement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteForStatement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteForStatement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteForStatement.AddChild(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Adds child element.
            </summary>
            <param name="element">The element to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteForStatement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteForStatement.SetCondition(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets conditions.
            </summary>
            <param name="condition">The condition to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteForStatement.SetToExpression(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets to expression for this statement.
            </summary>
            <param name="to">The to expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteForStatement.SetStepExpression(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets step expression for this statement.
            </summary>
            <param name="step">The step expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteForStatement.AddInitializer(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Adds initializer element.
            </summary>
            <param name="initializer">The initializer to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteForStatement.AddInitializers(DevExpress.CodeRush.StructuralParser.IElementCollection)">
            <summary>
            Adds initializers to element.
            </summary>
            <param name="initializers">The initializers to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteForStatement.SetInitializers(DevExpress.CodeRush.StructuralParser.IElementCollection)">
            <summary>
            Sets initializers to element.
            </summary>
            <param name="initializers">The initializers to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteForStatement.RemoveInitializer(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Removes initializer from this element.
            </summary>
            <param name="initializer">The initializer to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteForStatement.AddIncrementor(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Adds incrementor element.
            </summary>
            <param name="incrementor">The incrementor to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteForStatement.AddIncrementors(DevExpress.CodeRush.StructuralParser.LiteExpressionCollection)">
            <summary>
            Adds incrementors to element.
            </summary>
            <param name="incrementors">The incrementors to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteForStatement.SetIncrementors(DevExpress.CodeRush.StructuralParser.LiteExpressionCollection)">
            <summary>
            Sets incrementors to element.
            </summary>
            <param name="incrementors">The incrementors to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteForStatement.RemoveIncrementor(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Removes incrementor from this element.
            </summary>
            <param name="incrementor">The incrementor to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteForStatement.AddNextExpression(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Adds next expression.
            </summary>
            <param name="next">The next expression to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteForStatement.AddNextExpressions(DevExpress.CodeRush.StructuralParser.LiteExpressionCollection)">
            <summary>
            Adds next expressions to element.
            </summary>
            <param name="expressions">The next expressions to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteForStatement.SetNextExpressions(DevExpress.CodeRush.StructuralParser.LiteExpressionCollection)">
            <summary>
            Sets next expressions to element.
            </summary>
            <param name="expressions">The next expressions to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteForStatement.RemoveNextExpression(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Removes next expression from this element.
            </summary>
            <param name="expression">The expression to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteForStatement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteForStatement.Condition">
            <summary>
            Gets condition for statement.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteForStatement.Initializers">
            <summary>
            Gets or sets initializers for current statement.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteForStatement.Incrementors">
            <summary>
            Gets incrementors for current statement.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteForStatement.ToExpression">
            <summary>
            Gets to expression for statement.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteForStatement.StepExpression">
            <summary>
            Gets step expression for statement.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteForStatement.NextExpressions">
            <summary>
            Gets next expression for statement.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteForStatement.CodeChildren">
            <summary>
            Gets children elements located in body of current statement.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteForStatement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteForStatement.ImageIndex">
            <summary>
            Gets element image index.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteUsingStatement">
            <summary>
            Represents lite using statement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteUsingStatement.#ctor">
            <summary>
            Creates new LiteUsingStatement instance.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteUsingStatement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteUsingStatement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteUsingStatement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteUsingStatement.AddChild(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Adds child element.
            </summary>
            <param name="element">The element to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteUsingStatement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteUsingStatement.AddInitializer(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Adds initializer element.
            </summary>
            <param name="initializer">The element to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteUsingStatement.RemoveInitializer(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Removes initializer from this element.
            </summary>
            <param name="initializer">The initializer to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteUsingStatement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteUsingStatement.CodeChildren">
            <summary>
            Gets children elements located in body of current statement.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteUsingStatement.Initializers">
            <summary>
            Gets initializers of current using statement.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteUsingStatement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteContinueStatement">
            <summary>
            Represents lite "continue" statement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteContinueStatement.#ctor">
            <summary>
            Creates new instance of LiteBreakStatement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteContinueStatement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteContinueStatement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteContinueStatement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteContinueStatement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteBreakStatement">
            <summary>
            Represents lite "break" statement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBreakStatement.#ctor">
            <summary>
            Creates new instance of LiteBreakStatement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBreakStatement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBreakStatement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBreakStatement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBreakStatement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteElseStatement">
            <summary>
            Represents lite if statement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElseStatement.#ctor">
            <summary>
            Creates new LiteElseStatement instance.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElseStatement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElseStatement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElseStatement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElseStatement.AddChild(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Adds child element.
            </summary>
            <param name="element">The element to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElseStatement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElseStatement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElseStatement.CodeChildren">
            <summary>
            Gets children elements located in body of current statement.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElseStatement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElseStatement.ImageIndex">
            <summary>
            Gets element image index.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteElseIfStatement">
            <summary>
            Represents lite if statement.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteIfStatement">
            <summary>
            Represents lite if statement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIfStatement.#ctor">
            <summary>
            Creates new LiteCatchStatement instance.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIfStatement.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates new LiteCatchStatement instance.
            </summary>
            <param name="condition">The condition of the statement</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIfStatement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIfStatement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIfStatement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIfStatement.AddChild(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Adds child element.
            </summary>
            <param name="element">The element to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIfStatement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIfStatement.SetCondition(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets condition for if statement expression.
            </summary>
            <param name="condition">The condition to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIfStatement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteIfStatement.Condition">
            <summary>
            Gets condition for if statement.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteIfStatement.ElseStatement">
            <summary>
            Gets matching else statment for this if-block.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteIfStatement.HasElseStatement">
            <summary>
            True if this if-block has a matching else statement.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteIfStatement.CodeChildren">
            <summary>
            Gets children elements located in body of current statement.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteIfStatement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteIfStatement.ImageIndex">
            <summary>
            Gets element image index.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElseIfStatement.#ctor">
            <summary>
            Creates new LiteElseIfStatement instance.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElseIfStatement.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates new LiteElseIfStatement instance.
            </summary>
            <param name="condition">The condition of the statement</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElseIfStatement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElseIfStatement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElseIfStatement.ImageIndex">
            <summary>
            Gets element image index.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteCaseClausesList">
            <summary>
            Represents lite with statement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCaseClausesList.#ctor">
            <summary>
            Creates new LiteWithStatement instance.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCaseClausesList.#ctor(DevExpress.CodeRush.StructuralParser.LiteCaseClauseCollection)">
            <summary>
            Creates new LiteCaseClasusesList instance.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCaseClausesList.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCaseClausesList.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCaseClausesList.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCaseClausesList.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCaseClausesList.AddCaseClause(DevExpress.CodeRush.StructuralParser.LiteCaseClauseStatement)">
            <summary>
            Adds case clause to this element.
            </summary>
            <param name="clause">The case clause to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCaseClausesList.AddCaseClauses(DevExpress.CodeRush.StructuralParser.LiteCaseClauseCollection)">
            <summary>
            Adds case clauses to this element.
            </summary>
            <param name="clauses">The case clauses to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCaseClausesList.SetCaseClauses(DevExpress.CodeRush.StructuralParser.LiteCaseClauseCollection)">
            <summary>
            Sets case clauses to this element.
            </summary>
            <param name="clauses">The case clauses to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCaseClausesList.RemoveCaseClause(DevExpress.CodeRush.StructuralParser.LiteCaseClauseStatement)">
            <summary>
            Removes case clause from this element.
            </summary>
            <param name="clause">The case clause to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCaseClausesList.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteCaseClausesList.Clauses">
            <summary>
            Gets case clauses.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteCaseClausesList.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteCaseClauseStatement">
            <summary>
            Represents lite with statement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCaseClauseStatement.#ctor">
            <summary>
            Creates new LiteCaseClauseStatement instance.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCaseClauseStatement.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression,DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates new LiteCaseClauseStatement instance.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCaseClauseStatement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCaseClauseStatement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCaseClauseStatement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCaseClauseStatement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCaseClauseStatement.SetStartExpression(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets start expression.
            </summary>
            <param name="expression">The expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCaseClauseStatement.SetEndExpression(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets end expression.
            </summary>
            <param name="expression">The expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCaseClauseStatement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteCaseClauseStatement.StartExpression">
            <summary>
            Gets start expression for case clause.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteCaseClauseStatement.EndExpression">
            <summary>
            Gets end expression for case clause.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteCaseClauseStatement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteCaseStatement">
            <summary>
            Represents lite with statement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCaseStatement.#ctor">
            <summary>
            Creates new LiteWithStatement instance.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCaseStatement.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates new LiteCaseStatement instance.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCaseStatement.#ctor(DevExpress.CodeRush.StructuralParser.LiteCaseClausesList)">
            <summary>
            Creates new LiteCaseStatement instance.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCaseStatement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCaseStatement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCaseStatement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCaseStatement.AddChild(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Adds child element.
            </summary>
            <param name="element">The element to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCaseStatement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCaseStatement.SetExpression(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets case statement expression.
            </summary>
            <param name="expression">The expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCaseStatement.SetCaseClauses(DevExpress.CodeRush.StructuralParser.LiteCaseClausesList)">
            <summary>
            Sets case clauses to this element.
            </summary>
            <param name="clausesList">The case clauses to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCaseStatement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteCaseStatement.Expression">
            <summary>
            Gets with statement expression.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteCaseStatement.CaseClauses">
            <summary>
            Gets case clauses.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteCaseStatement.CodeChildren">
            <summary>
            Gets children elements located in body of current statement.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteCaseStatement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteCaseStatement.IsDefault">
            <summary>
            Returns true if this case block is the default one.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteCatchStatement">
            <summary>
            Represents lite catch statement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCatchStatement.#ctor">
            <summary>
            Creates new LiteCatchStatement instance.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCatchStatement.#ctor(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Creates new LiteCatchStatement instance.
            </summary>
            <param name="exceptionVariable">The exception variable of the statement</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCatchStatement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCatchStatement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCatchStatement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCatchStatement.AddChild(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Adds child element.
            </summary>
            <param name="element">The element to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCatchStatement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCatchStatement.SetExceptionVariable(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Sets exception variable for catch statement expression.
            </summary>
            <param name="variable">The exception variable to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCatchStatement.SetCondition(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Sets a condition for catch statement expression.
            </summary>
            <param name="condition">The condition to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCatchStatement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteCatchStatement.ExceptionVariable">
            <summary>
            Gets exception variable for the catch statement.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteCatchStatement.Condition">
            <summary>
            Gets condition for the catch statement.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteCatchStatement.CodeChildren">
            <summary>
            Gets children elements located in body of current statement.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteCatchStatement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteCatchStatement.ImageIndex">
            <summary>
            Gets element image index.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteFinallyStatement">
            <summary>
            Represents lite finally statement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFinallyStatement.#ctor">
            <summary>
            Creates new LiteFinallyStatement instance.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFinallyStatement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFinallyStatement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFinallyStatement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFinallyStatement.AddChild(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Adds child element.
            </summary>
            <param name="element">The element to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFinallyStatement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFinallyStatement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteFinallyStatement.CodeChildren">
            <summary>
            Gets children elements located in body of current statement.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteFinallyStatement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteForEachStatement">
            <summary>
            Represents lite with statement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteForEachStatement.#ctor">
            <summary>
            Creates new LiteWithStatement instance.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteForEachStatement.#ctor(DevExpress.CodeRush.StructuralParser.LiteVariableDeclarationStatement,DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates new LiteForEachStatement instance.
            </summary>
            <param name="loop">The iteration variable of the statement</param>
            <param name="expression">The expression of the statement</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteForEachStatement.#ctor(DevExpress.CodeRush.StructuralParser.LiteVariableDeclarationStatement,DevExpress.CodeRush.StructuralParser.LiteExpression,DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates new LiteForEachStatement instance.
            </summary>
            <param name="loop">The iteration variable of the statement</param>
            <param name="expression">The expression of the statement</param>
            <param name="nextExpression">The next expression of the statement</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteForEachStatement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteForEachStatement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteForEachStatement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteForEachStatement.AddChild(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Adds child element.
            </summary>
            <param name="element">The element to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteForEachStatement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteForEachStatement.SetExpression(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets foreach statement expression.
            </summary>
            <param name="expression">The expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteForEachStatement.SetNextExpression(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets next expression for this statement.
            </summary>
            <param name="expression">The next expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteForEachStatement.SetLoopVariable(DevExpress.CodeRush.StructuralParser.LiteVariableDeclarationStatement)">
            <summary>
            Sets foreach statement interation variable.
            </summary>
            <param name="loop">The iteration variable to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteForEachStatement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteForEachStatement.LoopVariable">
            <summary>
            Gets loop variable for statement.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteForEachStatement.Expression">
            <summary>
            Gets expression variable for statement.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteForEachStatement.NextExpression">
            <summary>
            Gets next expression for statement.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteForEachStatement.CodeChildren">
            <summary>
            Gets children elements located in body of current statement.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteForEachStatement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteForEachStatement.ImageIndex">
            <summary>
            Gets element image index.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteSwitchStatement">
            <summary>
            Represents lite with statement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSwitchStatement.#ctor">
            <summary>
            Creates new LiteWithStatement instance.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSwitchStatement.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates new LiteWithStatement instance.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSwitchStatement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSwitchStatement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSwitchStatement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSwitchStatement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSwitchStatement.SetExpression(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets with statement expression.
            </summary>
            <param name="expression">The expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSwitchStatement.AddCaseStatement(DevExpress.CodeRush.StructuralParser.LiteCaseStatement)">
            <summary>
            Adds case statement to this element.
            </summary>
            <param name="st">The case statement to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSwitchStatement.AddCaseStatements(DevExpress.CodeRush.StructuralParser.LiteCaseStatementCollection)">
            <summary>
            Adds parameters to this element.
            </summary>
            <param name="cases">The case statements to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSwitchStatement.SetCaseStatements(DevExpress.CodeRush.StructuralParser.LiteCaseStatementCollection)">
            <summary>
            Sets case statements to this element.
            </summary>
            <param name="cases">The case statements to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSwitchStatement.RemoveCaseStatement(DevExpress.CodeRush.StructuralParser.LiteCaseStatement)">
            <summary>
            Removes case statement from this element.
            </summary>
            <param name="st">The case statement to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSwitchStatement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteSwitchStatement.Expression">
            <summary>
            Gets with statement expression.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteSwitchStatement.CaseStatements">
            <summary>
            Gets case statements for current switch statement.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteSwitchStatement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAbortStatement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAbortStatement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAbortStatement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAbortStatement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteThrowStatement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteThrowStatement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteThrowStatement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteThrowStatement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteThrowStatement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteThrowStatement.Expression">
            <summary>
            Gets where clause for current expression.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteReturnStatementBase.ImageIndex">
            <summary>
            Gets element image index.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteEmptyReturnStatement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteEmptyReturnStatement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteEmptyReturnStatement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteEmptyReturnStatement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteOptionStatement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clone data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteOptionStatement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteOptionStatement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteOptionStatement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteOptionStatement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteTryStatement">
            <summary>
            Represents lite try statement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTryStatement.#ctor">
            <summary>
            Creates new LiteFinallyStatement instance.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTryStatement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTryStatement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTryStatement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTryStatement.AddChild(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Adds child element.
            </summary>
            <param name="element">The element to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTryStatement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTryStatement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTryStatement.CodeChildren">
            <summary>
            Gets children elements located in body of current statement.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTryStatement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteTemplateParameterElement">
            <summary>
            Represents generic type parameter.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteTypeParameterElement">
            <summary>
            Represents generic type parameter.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeParameterElement.#ctor">
            <summary>
            Creates a new instance of LiteTypeParameterElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeParameterElement.#ctor(System.String)">
            <summary>
            Creates a new instance of LiteTypeParameterElement
            </summary>
            <param name="name">The name of the element.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeParameterElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeParameterElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeParameterElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeParameterElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeParameterElement.SetActivatedType(DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Sets activated type for the type parameter element.
            </summary>
            <param name="type">The type to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeParameterElement.SetConstraintReference(DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Sets constraint reference for this type reference expression.
            </summary>
            <param name="constraintReference">The constraint reference.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeParameterElement.SetAttributes(DevExpress.CodeRush.StructuralParser.LiteAttributeElementCollection)">
            <summary>
            Sets attributes to this element.
            </summary>
            <param name="attributes">The attributes to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeParameterElement.AddAttribute(DevExpress.CodeRush.StructuralParser.LiteAttributeElement)">
            <summary>
            Adds attribute to the member.
            </summary>
            <param name="attr">The LiteAttributeElement to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeParameterElement.AddAttributes(DevExpress.CodeRush.StructuralParser.LiteAttributeElementCollection)">
            <summary>
            Adds attributes to the member.
            </summary>
            <param name="attributes">The attributes to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeParameterElement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeParameterElement.AddConstraint(DevExpress.CodeRush.StructuralParser.LiteTypeParameterConstraintElement)">
            <summary>
            Adds constraint to this element.
            </summary>
            <param name="constraint">The constraint to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeParameterElement.RemoveConstraint(DevExpress.CodeRush.StructuralParser.LiteTypeParameterConstraintElement)">
            <summary>
            Removes constraint from this element.
            </summary>
            <param name="constraint">The constraint to remove.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeParameterElement.Name">
            <summary>
            Gets element name.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeParameterElement.Constraints">
            <summary>
            Gets element parameters.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeParameterElement.IsActivated">
            <summary>
            Returns true if generic type parameter has
            been activated with some type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeParameterElement.ActivatedType">
            <summary>
            Gets type for the activated type parameter.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeParameterElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeParameterElement.ConstraintReference">
            <summary>
            Gets or sets constraint reference for this type parameter.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTemplateParameterElement.#ctor">
            <summary>
            Creates a new instance of LiteTemplateParameterElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTemplateParameterElement.#ctor(System.String,DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteTemplateParameterElement
            </summary>
            <param name="name">The name of the element.</param>
            <param name="defaultValue">The default value of template parameter</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTemplateParameterElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTemplateParameterElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTemplateParameterElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTemplateParameterElement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTemplateParameterElement.DefaultValue">
            <summary>
            Gets default value for the current template parameter.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTemplateParameterElement.ElementType">
            <summary>
            Gets the type of element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTemplateParameterElement.ImageIndex">
            <summary>
            Gets the image index of element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNestedTemplateParameterElement.#ctor">
            <summary>
            Creates a new instance of LiteTemplateParameterElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNestedTemplateParameterElement.#ctor(System.String,DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteTemplateParameterElement
            </summary>
            <param name="name">The name of the element.</param>
            <param name="defaultValue">The default value of template parameter</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNestedTemplateParameterElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNestedTemplateParameterElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNestedTemplateParameterElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNestedTemplateParameterElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNestedTemplateParameterElement.AddParameter(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Adds parameter to this element.
            </summary>
            <param name="parameter">The parameter to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNestedTemplateParameterElement.RemoveParameter(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Removes parameter from this element.
            </summary>
            <param name="parameter">The parameter to remove.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteNestedTemplateParameterElement.ElementType">
            <summary>
            Gets the type of element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteNestedTemplateParameterElement.Parameters">
            <summary>
            Gets element parameters.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteClassTemplateParameterElement.#ctor">
            <summary>
            Creates a new instance of LiteTemplateParameterElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteClassTemplateParameterElement.#ctor(System.String,DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteTemplateParameterElement
            </summary>
            <param name="name">The name of the element.</param>
            <param name="defaultValue">The default value of template parameter</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteClassTemplateParameterElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteClassTemplateParameterElement.ElementType">
            <summary>
            Gets the type of element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNamedTemplateParameterElement.#ctor">
            <summary>
            Creates a new instance of LiteTemplateParameterElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNamedTemplateParameterElement.#ctor(System.String,DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteTemplateParameterElement
            </summary>
            <param name="name">The name of the element.</param>
            <param name="defaultValue">The default value of template parameter</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNamedTemplateParameterElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteNamedTemplateParameterElement.ElementType">
            <summary>
            Gets the type of element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ElementNameFilter.#ctor(System.String)">
            <summary>
            Creates a new instance of ElementNameFilter.
            </summary>
            <param name="name">The name to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ElementNameFilter.#ctor(System.String,System.Boolean)">
            <summary>
            Creates a new instance of ElementNameFilter.
            </summary>
            <param name="name">The name to use.</param>
            <param name="isCaseSensitive">Pass true if filter is case sensitive.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ElementNameFilter.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a new instance of ElementNameFilter.
            </summary>
            <param name="name">The name to use.</param>
            <param name="isCaseSensitive">Pass true if filter is case sensitive.</param>
            <param name="useTypeArguments">Pass true if filter should use type arguments to compare names.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ElementNameFilter.Apply(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns true if filter allows element name.
            </summary>
            <param name="element">The element to check.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ElementNameFilter.Name">
            <summary>
            Name filter to use.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ElementNameFilter.IsCaseSensitive">
            <summary>
            Returns true if this filter is case sensitive.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ElementNameFilter.UseTypeArguments">
            <summary>
            Returns true if this filter will use type arguments to compare names.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.MembersByArgumentTypesFilter.MinMatchTable">
            <summary>
            Gets or sets type min match hash table.
            Key contains argument and value contains bool determining if min match can be used.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.MembersByArgumentTypesFilter.CheckExtensionMethod">
            <summary>
            Gets or sets value indicating if extension methods 
            are filtered.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.MembersByArgumentTypesFilter.Mode">
            <summary>
            Gets or sets type conversion mode.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.MembersByArgumentTypesFilter.ArgumentCanBeUnresolved">
            <summary>
            Gets or sets value indicating that type of argument can be unresolved.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.MemberWithParametersFilter.SkipOverloadResolution">
            <summary>
            Gets or sets value indicating that overload resolution step should be skipped and only applicable members filter should be applied.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.MemberWithParametersFilter.CheckExtensionMethod">
            <summary>
            Gets or sets value indicating if extension methods 
            are filtered.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.MemberWithParametersFilter.ArgumentCanBeUnresolved">
            <summary>
            Gets or sets value indicating that type of argument can be unresolved.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ChangeFileHelper.ChangeFileOnDisk(System.String,DevExpress.CodeRush.StructuralParser.SourceRange[],System.String)">
            <summary>
            Makes replacement in file on the disk. 
            </summary>
            <param name="path">The path of file</param>
            <param name="ranges">The ranges to replace</param>
            <param name="text">The new text which should be inserted into the specified ranges</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ChangeFileHelper.ChangeFileOnDisk(System.String,DevExpress.CodeRush.StructuralParser.SourceRange[],System.String,DevExpress.CodeRush.StructuralParser.SourceRange[]@)">
            <summary>
            Makes replacement in file on the disk. 
            </summary>
            <param name="path">The path of file</param>
            <param name="ranges">The ranges to replace</param>
            <param name="text">The new text which should be inserted into the specified ranges</param>
            <param name="newRanges">The ranges recalculated after replacement</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ChangeFileHelper.ChangeFile(System.String,DevExpress.CodeRush.StructuralParser.SourceRange[],System.String)">
            <summary>
            Makes replacement in file.
            </summary>
            <param name="path">The path of file</param>
            <param name="ranges">The ranges to replace</param>
            <param name="text">The text to replace</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ChangeFileHelper.ChangeFile(System.String,DevExpress.CodeRush.StructuralParser.SourceRange[],System.String,DevExpress.CodeRush.StructuralParser.SourceRange[]@)">
            <summary>
            Makes replacement in file.
            </summary>
            <param name="path">The path of file</param>
            <param name="ranges">The ranges to replace</param>
            <param name="text">The text to replace</param>
            <param name="newRanges">The ranges recalculated after replacement</param>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.EnvDTEUtils">
            <summary>
            Utility methods for EnvDTE.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.EnvDTEUtils.IsUnmodeledProject(EnvDTE.Project)">
            <summary>
            Returns true if the given project is unmodeled.
            </summary>
            <param name="project">The project to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.EnvDTEUtils.IsUnmodeledProject(System.String)">
            <summary>
            Returns true if the given project kind is unmodeled.
            </summary>
            <param name="kind">The project kind to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.EnvDTEUtils.IsMiscProject(EnvDTE.Project)">
            <summary>
            Returns true if the given project is miscellaneous.
            </summary>
            <param name="project">The project to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.EnvDTEUtils.IsMiscProject(System.String)">
            <summary>
            Returns true if the given project kind is miscellaneous.
            </summary>
            <param name="kind">The project kind to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.EnvDTEUtils.IsSolutionItemProject(EnvDTE.Project)">
            <summary>
            Returns true if the given project is solution item.
            </summary>
            <param name="project">The project to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.EnvDTEUtils.IsSolutionItemProject(System.String)">
            <summary>
            Returns true if the given project is solution item.
            </summary>
            <param name="kind">The project kind to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.EnvDTEUtils.IsPhysicalFile(EnvDTE.ProjectItem)">
            <summary>
            Returns true if the given project item is a physical file.
            </summary>
            <param name="item">The item to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.EnvDTEUtils.IsPhysicalFolder(EnvDTE.ProjectItem)">
            <summary>
            Returns true if the given project item is a physical folder.
            </summary>
            <param name="item">The item to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.EnvDTEUtils.IsVirtualFolder(EnvDTE.ProjectItem)">
            <summary>
            Returns true if the given project item is a virtual folder.
            </summary>
            <param name="item">The item to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.EnvDTEUtils.IsMiscItem(EnvDTE.ProjectItem)">
            <summary>
            Returns true if the given project item is miscellaneous.
            </summary>
            <param name="item">The project item to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.EnvDTEUtils.IsSubProject(EnvDTE.ProjectItem)">
            <summary>
            Returns true if the given project item is sub project.
            </summary>
            <param name="item">The project item to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.EnvDTEUtils.GetProjects(EnvDTE.Solution)">
            <summary>
            Recursively searches and returns all solution projects.
            </summary>
            <param name="solution">The solution to get projects.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.EnvDTEUtils.IsWebProject(EnvDTE.Project)">
            <summary>
            Returns true if the given project is VS2005 web project.
            </summary>
            <param name="project">The project to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.EnvDTEUtils.IsWebAppProject(EnvDTE.Project)">
            <summary>
            Returns true if the given project is Web Application Project.
            </summary>
            <param name="project">The project to check.</param>
            <returns>True if the given project is Web Application Project.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.EnvDTEUtils.GetBuildAction(EnvDTE.ProjectItem)">
            <summary>
            Gets project item  build action.
            </summary>
            <param name="projectItem">The project item.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.EnvDTEUtils.GetDependentUpon(EnvDTE.ProjectItem)">
            <summary>
            Gets a file path on which the given project element depends 
            </summary>
            <param name="projectItem">The project item.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.EnvDTEUtils.GetIsLinkProperty(EnvDTE.ProjectItem)">
            <summary>
            Gets project item IsLink property value.
            </summary>
            <param name="projectItem"></param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.EnvDTEUtils.GetIsCustomToolOutputProperty(EnvDTE.ProjectItem)">
            <summary>
            Gets project item IsCustomToolOutput property value.
            </summary>
            <param name="projectItem"></param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.EnvDTEUtils.LogProperties(EnvDTE.Properties)">
            <summary>
            Logs all properties to messages log.
            </summary>
            <param name="properties">The properties to log.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.EnvDTEUtils.LogProperty(EnvDTE.Property)">
            <summary>
            Logs given property to messages log.
            </summary>
            <param name="property">The property to log.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.EnvDTEUtils.GetLanguageId(EnvDTE.Project)">
            <summary>
            Gets EnvDTE project language id.
            </summary>
            <param name="project">The project to get language from.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.NameCollision.GetUniqueNameInsideScope(DevExpress.CodeRush.StructuralParser.IElement,System.String)">
            <summary>
            Returns unique element name in the given scope.
            </summary>
            <param name="scope">The scope to search in.</param>
            <param name="name">Current name to find unique name for (e.g. "Variable").</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.NameCollision.GetUniqueNameInsideScope(DevExpress.CodeRush.StructuralParser.IElement,System.String,System.Boolean)">
            <summary>
            Returns unique element name in the given scope.
            </summary>
            <param name="scope">The scope to search in.</param>
            <param name="name">Current name to find unique name for (e.g. "Variable").</param>
            <param name="caseSensitive">Pass true to perform case sensitive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.NameCollision.GetUniqueName(DevExpress.CodeRush.StructuralParser.IElement,System.String)">
            <summary>
            Returns unique element name in the class.
            </summary>
            <param name="element">Element to find name for (e.g. method, const).</param>
            <param name="name">Current name to find unique name for (e.g. "Variable").</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.NameCollision.GetUniqueName(DevExpress.CodeRush.StructuralParser.IElement,System.String,System.Boolean)">
            <summary>
            Returns unique element name in the class.
            </summary>
            <param name="element">Element to find name for (e.g. method, const).</param>
            <param name="name">Current name to find unique name for (e.g. "Variable").</param>
            <param name="caseSensitive">Pass true to perform case sensitive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.NameCollision.GetUniqueName(DevExpress.CodeRush.StructuralParser.IElement,DevExpress.CodeRush.StructuralParser.IElement,System.String)">
            <summary>
            Returns unique element name in the scope.
            </summary>
            <param name="scope">Scope to find element in (e.g. class, method).</param>
            <param name="element">Element to find name for (e.g. method, const).</param>
            <param name="name">Current name to find unique name for (e.g. "Variable").</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.NameCollision.GetUniqueName(DevExpress.CodeRush.StructuralParser.IElement,DevExpress.CodeRush.StructuralParser.IElement,System.String,System.Boolean)">
            <summary>
            Returns unique element name in the scope.
            </summary>
            <param name="scope">Scope to find element in (e.g. class, method).</param>
            <param name="element">Element to find name for (e.g. method, const).</param>
            <param name="name">Current name to find unique name for (e.g. "Variable").</param>
            <param name="caseSensitive">Pass true to perform case sensitive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.NameCollision.GetUniqueName(DevExpress.CodeRush.StructuralParser.IElement,DevExpress.CodeRush.StructuralParser.LanguageElementType,System.String)">
            <summary>
            Returns unique element name.
            </summary>
            <param name="scope">Scope to find element in (e.g. class, method).</param>
            <param name="type">Type of the element to find name for (e.g. method, const).</param>
            <param name="name">Current name to find unique name for (e.g. "Variable").</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.NameCollision.GetUniqueName(DevExpress.CodeRush.StructuralParser.IElement,DevExpress.CodeRush.StructuralParser.LanguageElementType,System.String,System.Boolean)">
            <summary>
            Returns unique element name.
            </summary>
            <param name="scope">Scope to find element in (e.g. class, method).</param>
            <param name="type">Type of the element to find name for (e.g. method, const).</param>
            <param name="name">Current name to find unique name for (e.g. "Variable").</param>
            <param name="caseSensitive">Pass true to perform case sensitive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.NameCollision.ResolveNameConflicts(DevExpress.CodeRush.StructuralParser.IElement,System.String)">
            <summary>
            Uses source tree resolving to search for name conflicts and resolve them.
            This method tries to find declaration for the given element name and 
            adds suffix to the start name if conflicts are found.
            </summary>
            <param name="start">The start element.</param>
            <param name="startName">The start name to resovle conflicts.</param>
            <returns>Returns unique name inside scope.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.NameCollision.ResolveNameConflicts(DevExpress.CodeRush.StructuralParser.IElement,System.String,DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Uses source tree resolving to search for name conflicts and resolve them.
            This method tries to find declaration for the given element name and 
            adds suffix to the start name if conflicts are found.
            </summary>
            <param name="start">The start element.</param>
            <param name="startName">The start name to resovle conflicts.</param>
            <param name="excludeDeclaration">The declaration to exclude from checking conflicts.</param>
            <returns>Returns unique name inside scope.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.NameCollision.ResolveNameConflicts(DevExpress.CodeRush.StructuralParser.IElement,System.String,DevExpress.CodeRush.StructuralParser.IElement,System.Boolean)">
            <summary>
            Uses source tree resolving to search for name conflicts and resolve them.
            This method tries to find declaration for the given element name and 
            adds suffix to the start name if conflicts are found.
            </summary>
            <param name="start">The start element.</param>
            <param name="startName">The start name to resovle conflicts.</param>
            <param name="excludeDeclaration">The declaration to exclude from checking conflicts.</param>
            <param name="skipLocalsCheck">The declaration to exclude from checking conflicts.</param>
            <returns>Returns unique name inside scope.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.NodesSelection.Get(DevExpress.CodeRush.StructuralParser.LanguageElement,DevExpress.CodeRush.StructuralParser.SourceRange)">
            <summary>
            Creates and returns new NodesSelection instance.
            </summary>
            <param name="scope">The scope of the selection.</param>
            <param name="range">The range of the selection.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.NodesSelection.AnalyseAssignments(DevExpress.CodeRush.StructuralParser.BaseVariable)">
            <summary>
            Performs assignment analysis on the node selection.
            </summary>
            <param name="local">The local variable to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.NodesSelection.AnalyseAssignments(DevExpress.CodeRush.StructuralParser.BaseVariable,System.Boolean)">
            <summary>
            Performs assignment analysis on the node selection.
            </summary>
            <param name="local">The local variable to check.</param>
            <param name="considerFlowBreaks">Defines if flowbreaks should be considered in analisys.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.NodesSelection.AnalyseAssignments(DevExpress.CodeRush.StructuralParser.BaseVariable,System.Boolean,DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Performs assignment analysis on the node selection.
            </summary>
            <param name="local">The local variable to check.</param>
            <param name="considerFlowBreaks">Defines if flowbreaks should be considered in analisys.</param>
            <param name="resolver"></param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.NodesSelection.SelectedNodes">
            <summary>
            Gets all selected nodes.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.NodesSelection.RootNodes">
            <summary>
            Gets root selected nodes.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.NodesSelection.RootNodesAfterSelectionStart">
            <summary>
            Gets root nodes after start of the selection range.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.NodesSelection.CommonParent">
            <summary>
            Gets common parent for the nodes selection.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.NodesSelection.Expression">
            <summary>
            Gets selected expression.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.NodesSelection.Scope">
            <summary>
            Gets parent scope for the nodes selection.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.NodesSelection.Range">
            <summary>
            Gets selection range.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.NodesSelection.IsRangeEnclosedInLoop">
            <summary>
            Returns true if nodes range is enclosed by a loop statement.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.NodesSelection.SelectionAfter">
            <summary>
            Gets nodes after the selection inside the active scope.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.NodesSelection.SelectionBefore">
            <summary>
            Gets nodes after the selection inside the active scope.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.NodesSelection.HasReturnFlowBreaks">
            <summary>
            Returns true if analyzed range has return flow breaks.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParametersHelper.CalculateRequiredParameters(DevExpress.CodeRush.StructuralParser.LanguageElement,DevExpress.CodeRush.StructuralParser.SourceRange)">
            <summary>
            Calculates parameters that should be passed into the selected range of code
            if the code is extracted from the geiven method or property accessor.
            </summary>
            <param name="target">The target method or property accessor.</param>
            <param name="range">The source range.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParametersHelper.CalculateRequiredParameters(DevExpress.CodeRush.StructuralParser.LanguageElement,DevExpress.CodeRush.StructuralParser.SourceRange,DevExpress.CodeRush.StructuralParser.ParametersHelperContext)">
            <summary>
            Calculates parameters that should be passed into the selected range of code
            if the code is extracted from the geiven method or property accessor.
            </summary>
            <param name="target">The target method or property accessor.</param>
            <param name="range">The source range.</param>
            <param name="context">The context for calculating.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParametersHelper.CalculateRequiredParameters(DevExpress.CodeRush.StructuralParser.LanguageElement,DevExpress.CodeRush.StructuralParser.SourceRange,DevExpress.CodeRush.StructuralParser.LanguageElement@)">
            <summary>
            Calculates parameters that should be passed into the selected range of code
            if the code is extracted from the geiven method or property accessor.
            </summary>
            <param name="target">The target method or property accessor.</param>
            <param name="range">The source range.</param>
            <param name="callingSide">The calling side for parameters collection.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParametersHelper.CalculateRequiredParameters(DevExpress.CodeRush.StructuralParser.LanguageElement,DevExpress.CodeRush.StructuralParser.SourceRange,DevExpress.CodeRush.StructuralParser.LanguageElementCollection,System.Collections.Hashtable)">
            <summary>
            Calculates parameters that should be passed into the selected range of code
            if the code is extracted from the geiven method or property accessor.
            </summary>
            <param name="target">The target method or property accessor.</param>
            <param name="range">The source range.</param>
            <param name="locals">The collection of local declarations inside target.</param>
            <param name="referencesHash">The hash of references, where key is a local and value is collection of references.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParametersHelper.CalculateRequiredParameters(DevExpress.CodeRush.StructuralParser.LanguageElement,DevExpress.CodeRush.StructuralParser.SourceRange,DevExpress.CodeRush.StructuralParser.LanguageElementCollection,System.Collections.Hashtable,System.Collections.Generic.IDictionary{DevExpress.CodeRush.StructuralParser.IElement,DevExpress.CodeRush.StructuralParser.IElement},DevExpress.CodeRush.StructuralParser.LanguageElement@)">
            <summary>
            Calculates parameters that should be passed into the selected range of code
            if the code is extracted from the geiven method or property accessor.
            </summary>
            <param name="target">The target method or property accessor.</param>
            <param name="range">The source range.</param>
            <param name="locals">The collection of local declarations inside target.</param>
            <param name="referencesHash">The hash of references, where key is a local and value is collection of references.</param>
            <param name="paramToDeclarationMap">The map, where key is a calculated parameter and value is a original declaration.</param>
            <param name="callingSide">The calling side for parameters collection.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParametersHelper.CalculateRequiredParameters(DevExpress.CodeRush.StructuralParser.LanguageElement,DevExpress.CodeRush.StructuralParser.SourceRange,DevExpress.CodeRush.StructuralParser.LanguageElementCollection,System.Collections.Hashtable,System.Collections.Generic.IDictionary{DevExpress.CodeRush.StructuralParser.IElement,DevExpress.CodeRush.StructuralParser.IElement},DevExpress.CodeRush.StructuralParser.ParametersHelperContext,DevExpress.CodeRush.StructuralParser.LanguageElement@)">
            <summary>
            Calculates parameters that should be passed into the selected range of code
            if the code is extracted from the geiven method or property accessor.
            </summary>
            <param name="target">The target method or property accessor.</param>
            <param name="range">The source range.</param>
            <param name="locals">The collection of local declarations inside target.</param>
            <param name="referencesHash">The hash of references, where key is a local and value is collection of references.</param>
            <param name="paramToDeclarationMap">The map, where key is a calculated parameter and value is a original declaration.</param>
            <param name="context">The context for calculating.</param>
            <param name="callingSide">The calling side for parameters collection.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParametersHelper.ContainsLocalReferences(DevExpress.CodeRush.StructuralParser.LanguageElement,DevExpress.CodeRush.StructuralParser.SourceRange,System.Collections.Generic.IEnumerable{DevExpress.CodeRush.StructuralParser.BaseVariable})">
            <summary>
            Returns true if the specified range contains references to local variables
            defined inside target scope.
            </summary>
            <param name="scope">The target scope.</param>
            <param name="variables">The variables to check for references.</param>
            <param name="range">The source range.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParametersHelper.ContainsLocalReferences(DevExpress.CodeRush.StructuralParser.LanguageElement,DevExpress.CodeRush.StructuralParser.SourceRange)">
            <summary>
            Returns true if the specified range contains references to local variables
            defined inside target scope.
            </summary>
            <param name="target">The target scope.</param>
            <param name="range">The source range.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParametersHelper.ConvertPinToInteriorPtr(DevExpress.CodeRush.StructuralParser.TypeReferenceExpression)">
            <summary>
            Converts pin_ptr to interior_ptr.
            </summary>
            <param name="type">The type reference to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParametersHelper.IsPinPtrPointer(DevExpress.CodeRush.StructuralParser.TypeReferenceExpression)">
            <summary>
            Returns true if the given type reference expression is a pin_ptr pointer.
            </summary>
            <param name="type">The type reference expression to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParametersHelper.IsInteriorPtrPointer(DevExpress.CodeRush.StructuralParser.TypeReferenceExpression)">
            <summary>
            Returns true if the given type reference expression is a interior_ptr pointer.
            </summary>
            <param name="type">The type reference expression to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParametersHelper.HasPinPtrPointers(DevExpress.CodeRush.StructuralParser.MemberWithParameters)">
            <summary>
            Returns true if the given member has pin_ptr pointers inside return type or inside parameter types.
            </summary>
            <param name="member">The member to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParametersHelper.HasPinPtrPointers(DevExpress.CodeRush.StructuralParser.TypeReferenceExpression,DevExpress.CodeRush.StructuralParser.LanguageElementCollection)">
            <summary>
            Returns true if the given type and parameters has pin_ptr pointers.
            </summary>
            <param name="type">The type reference expression to check.</param>
            <param name="parameters">The parameters to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParametersHelper.GetOptionalParameters(DevExpress.CodeRush.StructuralParser.IWithParameters)">
            <summary>
            Returns all optional parameters.
            </summary>
            <param name="element">The element to get parameters from.</param>
            <returns>Returns all optional parameters.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.NamesMatch(System.String,System.String,System.Boolean)">
            <summary>
            Returns true if passed names match.
            </summary>
            <param name="srcName">The first name.</param>
            <param name="dstName">The second name.</param>
            <param name="caseSensitive">Perfrom case sensitive match.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.NamesMatch(DevExpress.CodeRush.StructuralParser.LanguageElement,System.String)">
            <summary>
            Returns true if passed element matches given name.
            </summary>
            <param name="element">The element to check.</param>
            <param name="name">The name to match.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.NamesMatch(DevExpress.CodeRush.StructuralParser.LanguageElement,System.String,System.Boolean)">
            <summary>
            Returns true if passed element matches given name.
            </summary>
            <param name="element">The element to check.</param>
            <param name="name">The name to match.</param>
            <param name="isCaseSensitive">Perfrom case sensitive match.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.NamesMatch(DevExpress.CodeRush.StructuralParser.LanguageElement,DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Returns true if passed element matches given name.
            </summary>
            <param name="first">The element to check.</param>
            <param name="second">The element to match.</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.DeclarationsMatch(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,DevExpress.CodeRush.StructuralParser.IElement,DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns true if passed declarations match
            </summary>
            <param name="resolver">The ISourceTreeResolver</param>
            <param name="first">The first declaration to compare</param>
            <param name="second">The second declaration to compare</param>    
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.DeclarationsMatch(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,DevExpress.CodeRush.StructuralParser.IElement,DevExpress.CodeRush.StructuralParser.IElement,System.Boolean)">
            <summary>
            Returns true if passed declarations match
            </summary>
            <param name="resolver">The ISourceTreeResolver</param>
            <param name="first">The first declaration to compare</param>
            <param name="second">The second declaration to compare</param>
            <param name="checkOverriden">Set to true if comparison should consider overriden declarations</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.LocationsMatch(DevExpress.CodeRush.StructuralParser.LanguageElement,System.String)">
            <summary>
            Returns true if passed element matches given name.
            </summary>
            <param name="element">The element to check.</param>
            <param name="location">The name to match.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetTypes(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Returns a collection of types defined inside the specified language element.
            Only first level nodes are checked.
            </summary>
            <param name="element">The language element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetTypes(DevExpress.CodeRush.StructuralParser.LanguageElement,System.Boolean)">
            <summary>
            Returns a collection of types defined inside the specified language element.
            </summary>
            <param name="element">The language element to use.</param>
            <param name="findRecursive">Pass true to perform a recursive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetNamespaces(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Returns a collection of namespaces defined inside the specified language element.
            Only first level nodes are checked.
            </summary>
            <param name="element">The language element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetNamespaces(DevExpress.CodeRush.StructuralParser.LanguageElement,System.Boolean)">
            <summary>
            Returns a collection of namespaces defined inside the specified language element.
            </summary>
            <param name="element">The language element to use.</param>
            <param name="findRecursive">Pass true to perform a recursive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetTypesOrNamespaces(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Returns a collection of types or namespaces defined inside the specified language element.
            Only first level nodes are checked.
            </summary>
            <param name="element">The language element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetTypesOrNamespaces(DevExpress.CodeRush.StructuralParser.LanguageElement,System.Boolean)">
            <summary>
            Returns a collection of types or namespaces defined inside the specified language element.
            </summary>
            <param name="element">The language element to use.</param>
            <param name="findRecursive">Pass true to perform a recursive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetMembers(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Returns a collection of members defined inside the specified language element.
            Only first level nodes are checked.
            </summary>
            <param name="element">The language element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetMembers(DevExpress.CodeRush.StructuralParser.LanguageElement,System.Boolean)">
            <summary>
            Returns a collection of members defined inside the specified language element.
            </summary>
            <param name="element">The language element to use.</param>
            <param name="findRecursive">Pass true to perform a recursive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetNonPrivateMembers(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Returns a collection of non private members defined inside the specified language element.
            Only first level nodes are checked.
            </summary>
            <param name="element">The language element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetNonPrivateMembers(DevExpress.CodeRush.StructuralParser.LanguageElement,System.Boolean)">
            <summary>
            Returns a collection of non private members defined inside the specified language element.
            </summary>
            <param name="element">The language element to use.</param>
            <param name="findRecursive">Pass true to perform a recursive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetCommentsFromNodes(DevExpress.CodeRush.StructuralParser.NodeList)">
            <summary>
            Gets all comments from the given list of nodes.
            </summary>
            <param name="nodes">The nodes to search for comments.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetCommentsFromNodes(DevExpress.CodeRush.StructuralParser.CommentCollection,DevExpress.CodeRush.StructuralParser.NodeList)">
            <summary>
            Gets all comments from the given list of nodes and adds them to the given comments list.
            </summary>
            <param name="comments">The list to add comments.</param>
            <param name="nodes">The nodes to search for comments.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetComments(DevExpress.CodeRush.StructuralParser.SourceFile)">
            <summary>
            Gets all comments inside the given source file.
            </summary>
            <param name="file">The source file.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetComments(DevExpress.CodeRush.StructuralParser.CommentCollection,DevExpress.CodeRush.StructuralParser.CodeElement)">
            <summary>
            Gets all comments defined inside the given element.
            </summary>
            <param name="comments">The list to add comments.</param>
            <param name="element">The element to get comments from.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetComments(DevExpress.CodeRush.StructuralParser.CodeElement)">
            <summary>
            Gets all comments defined inside the given element.
            </summary>
            <param name="element">The element to get comments from.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetElementTypeName(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Returns the type name for the passed element.
            </summary>
            <param name="element">The element to get type for.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetElementType(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Returns the type name for the passed element.
            </summary>
            <param name="element">The element to get type for.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetMacroInfo(DevExpress.CodeRush.StructuralParser.SourceFile,DevExpress.CodeRush.StructuralParser.SourceRange)">
            <summary>
            Gets information about macros for the specified location.
            </summary>
            <param name="fileNode">The SourceFile to get information</param>
            <param name="range">The SourceRange to get information</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetMacroInfo(DevExpress.CodeRush.StructuralParser.SourceFile,DevExpress.CodeRush.StructuralParser.SourcePoint)">
            <summary>
            Gets information about macros for the specified location.
            </summary>
            <param name="fileNode">The SourceFile to get information</param>
            <param name="point">The SourcePoint to get information</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetParentOrCurrentType(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Resturns type that contains the given language element or element itself.
            </summary>
            <param name="start">The element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.FindElement(System.Collections.ICollection,System.String)">
            <summary>
            Finds an element with the given name inside the specified collection of language elements.
            Only first level nodes are checked.
            </summary>
            <param name="elements">The collection of language elements to search in.</param>
            <param name="name">The name of the element to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.FindElement(System.Collections.ICollection,System.String,System.Boolean)">
            <summary>
            Finds an element with the given name inside the specified collection of language elements.
            Only first level nodes are checked.
            </summary>
            <param name="elements">The collection of language elements to search in.</param>
            <param name="name">The name of the element to find.</param>
            <param name="caseSensitive">Perform case sensitive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.FindElements(DevExpress.CodeRush.StructuralParser.LanguageElementCollection,System.String)">
            <summary>
            Finds elements with the given name inside the specified collection of language elements.
            Only first level nodes are checked.
            </summary>
            <param name="elements">The collection of language elements to search in.</param>
            <param name="name">The name of the element to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.FindElements(DevExpress.CodeRush.StructuralParser.LanguageElementCollection,System.String,System.Boolean)">
            <summary>
            Finds elements with the given name inside the specified collection of language elements.
            Only first level nodes are checked.
            </summary>
            <param name="elements">The collection of language elements to search in.</param>
            <param name="name">The name of the element to find.</param>
            <param name="caseSensitive">Perform case sensitive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.FindElementByFullName(DevExpress.CodeRush.StructuralParser.LanguageElementCollection,System.String)">
            <summary>
            Performs a recursive search for an element with the given name 
            inside the specified collection of language elements.
            </summary>
            <param name="elements">The collection of language elements to search in.</param>
            <param name="fullName">The full name of the element to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.FindMember(DevExpress.CodeRush.StructuralParser.LanguageElement,System.String)">
            <summary>
            Finds a member with the given name inside the specified language element.
            Only first level nodes are checked.
            </summary>
            <param name="element">The language element to search in.</param>
            <param name="name">The name of the member to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.FindMember(DevExpress.CodeRush.StructuralParser.LanguageElement,System.String,System.Boolean)">
            <summary>
            Finds a member with the given name inside the specified language element.
            Only first level nodes are checked.
            </summary>
            <param name="element">The language element to search in.</param>
            <param name="name">The name of the member to find.</param>
            <param name="caseSensitive">Perform case sensitive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.FindMembers(DevExpress.CodeRush.StructuralParser.LanguageElement,System.String)">
            <summary>
            Finds members with the given name inside the specified language element.
            Only first level nodes are checked.
            </summary>
            <param name="element">The language element to search in.</param>
            <param name="name">The name of the member to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.FindMembers(DevExpress.CodeRush.StructuralParser.LanguageElement,System.String,System.Boolean)">
            <summary>
            Finds members with the given name inside the specified language element.
            Only first level nodes are checked.
            </summary>
            <param name="element">The language element to search in.</param>
            <param name="name">The name of the member to find.</param>
            <param name="caseSensitive">Perform case sensitive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.FindNonPrivateMembers(DevExpress.CodeRush.StructuralParser.LanguageElement,System.String)">
            <summary>
            Finds non private members with the given name inside the specified language element.
            Only first level nodes are checked.
            </summary>
            <param name="element">The language element to search in.</param>
            <param name="name">The name of the member to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.FindNonPrivateMembers(DevExpress.CodeRush.StructuralParser.LanguageElement,System.String,System.Boolean)">
            <summary>
            Finds non private members with the given name inside the specified language element.
            Only first level nodes are checked.
            </summary>
            <param name="element">The language element to search in.</param>
            <param name="name">The name of the member to find.</param>
            <param name="caseSensitive">Perform case sensitive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.FindTypeOrNamespace(DevExpress.CodeRush.StructuralParser.LanguageElement,System.String)">
            <summary>
            Finds a type or namespace with the given name inside the specified
            language element. Only first level nodes are checked.
            </summary>
            <param name="element">The language element to search in.</param>
            <param name="name">The name of the element to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.FindTypeOrNamespace(DevExpress.CodeRush.StructuralParser.LanguageElement,System.String,System.Boolean,System.Boolean)">
            <summary>
            Recursively searches for a type or namespace with the given name inside the specified
            language element.
            </summary>
            <param name="element">The language element to search in.</param>
            <param name="name">The name of the element to find.</param>
            <param name="recursive">Pass true to perform a recursive search.</param>
            <param name="caseSensitive">Perform case sensitive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.FindElementByLocation(DevExpress.CodeRush.StructuralParser.LanguageElementCollection,System.String,System.Boolean)">
            <summary>
            Finds an element with the given location inside the specified collection of language elements.
            Only first level nodes are checked.
            </summary>
            <param name="elements">The collection of language elements to search in.</param>
            <param name="location">The location of the element to find.</param>
            <param name="caseSensitive">Perform case sensitive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.FindElementsByLocation(DevExpress.CodeRush.StructuralParser.LanguageElementCollection,System.String)">
            <summary>
            Finds all elements with the given location inside the specified collection of language elements.
            Only first level nodes are checked.
            </summary>
            <param name="elements">The collection of language elements to search in.</param>
            <param name="location">The location of the element to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.FindNamespaceByLocation(DevExpress.CodeRush.StructuralParser.LanguageElement,System.String)">
            <summary>
            Recursivley searches for a namespace with the given location inside the specified language element.
            </summary>
            <param name="element">The language element to search in.</param>
            <param name="location">The location of the element to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.FindTypeOrNamespaceByLocation(DevExpress.CodeRush.StructuralParser.LanguageElement,System.String,System.Boolean)">
            <summary>
            Recursivley searches for a type or namespace with the given location inside the specified language element.
            </summary>
            <param name="element">The language element to search in.</param>
            <param name="location">The location of the element to find.</param>
            <param name="caseSensitive">Perform case sensitive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.FindTypesOrNamespacesByLocation(DevExpress.CodeRush.StructuralParser.LanguageElement,System.String)">
            <summary>
            Recursivley searches for all types or namespaces with the given location inside the specified language element.
            </summary>
            <param name="element">The language element to search in.</param>
            <param name="location">The location of the element to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.FindTypesOrNamespacesByLocation(DevExpress.CodeRush.StructuralParser.LanguageElementCollection,System.String)">
            <summary>
            Recursivley searches for a type or namespace with the given location inside the specified language elements collection.
            </summary>
            <param name="elements">The language element collection to search in.</param>
            <param name="location">The location of the element to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.FindTypeOrNamespaceInParents(DevExpress.CodeRush.StructuralParser.LanguageElement,System.String)">
            <summary>
            Searches for an element with the given name inside all parents of the specified element.
            </summary>
            <param name="element">The element to start the search.</param>
            <param name="name">The name of the element to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.FindTypeOrNamespaceInParents(DevExpress.CodeRush.StructuralParser.LanguageElement,System.String,System.Boolean)">
            <summary>
            Searches for an element with the given name inside all parents of the specified element.
            </summary>
            <param name="element">The element to start the search.</param>
            <param name="name">The name of the element to find.</param>
            <param name="caseSensitive">Perform case sensitive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.FindLocalDeclaration(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Finds local declaration for specified element reference if it is possible.
            The language element passed to this method should be determined through a call 
            that either guarantees a parse will happen if needed, or the element was 
            acquired directly after calling CodeRush.Language.ParseIfNeeded().
            </summary>
            <param name="element">The element for which to find declaration.</param>
            <returns>Returns declaration for the element reference.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.FindLocalDeclaration(DevExpress.CodeRush.StructuralParser.LanguageElement,System.String)">
            <summary>
            Finds local declaration with the given name, starting from the specified element 
            reference if it is possible.
            The language element passed to this method should be determined through a call 
            that either guarantees a parse will happen if needed, or the element was 
            acquired directly after calling CodeRush.Language.ParseIfNeeded().
            </summary>
            <param name="start">The start element.</param>
            <param name="name">The name of the declaration to search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.FindFieldDeclaration(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Finds field declaration for specified element reference if it is possible.
            The language element passed to this method should be determined through a call 
            that either guarantees a parse will happen if needed, or the element was 
            acquired directly after calling CodeRush.Language.ParseIfNeeded().
            </summary>
            <param name="element">Element for which to find declaration.</param>
            <returns>Returns declaration for the element reference.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.IsTypeDeclaration(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Returns true if the specified language element is a class, struct, interface, enumeration or
            delegate.
            </summary>
            <param name="element">The language element to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.IsClassOrStruct(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Returns true if the specified language element is a class or struct.
            </summary>
            <param name="element">The element to check.</param>
            <returns></returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.IsEventHandler(DevExpress.CodeRush.StructuralParser.IMethodElement)">
            <summary>
            Returns true if the specified method is an event handler.
            </summary>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.IsInterface(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Returns true if the specified language element is an interface.
            </summary>
            <param name="element">The element to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.IsInterfaceImplementedMember(DevExpress.CodeRush.StructuralParser.IMemberElement)">
            <summary>
            Return true if the specified member is interface implemented member.
            </summary>
            <param name="member">The member to check.</param>
            <returns></returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.IsInterfaceImplementedMember(DevExpress.CodeRush.StructuralParser.IMemberElement,DevExpress.CodeRush.StructuralParser.IMemberElement@)">
            <summary>
            Return true if the specified member is interface implemented member.
            </summary>
            <param name="member">The member to check.</param>
            <param name="interfaceMember">The interface member which implements the member to check.</param>
            <returns></returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.IsWebMethod(DevExpress.CodeRush.StructuralParser.IMethodElement)">
            <summary>
            Return true if the specified member is a web method.
            </summary>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.IsNamespace(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Returns true if the specified language element is a namespace.
            </summary>
            <param name="element">The language element to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.IsTypeDeclarationOrNamespace(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Returns true if the specified language element is a class, struct, interface, enumeration, 
            delegate or namespace.
            </summary>
            <param name="element">The language element to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.IsMember(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Returns true if the specified language element is a member of a type.
            </summary>
            <param name="element">The language element to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.IsNonPrivateMember(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Returns true if the specified language element is a non private member of a type.
            </summary>
            <param name="element">The language element to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.IsStaticMember(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Returns true if the specified language element is static member of a type.
            </summary>
            <param name="element">The language element to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.CollectLocalDeclarations(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Collects all local declarations within given LanguageElement.
            Local declaration may be Const, Variable, InitializedVariable or Param.
            </summary>
            <param name="scope">Element where to find local declarations.</param>
            <returns>Returns an ArrayList of local declarations.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.CollectAssignments(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Collects all assignments to the given local variable.
            </summary>
            <param name="local">Local for which to find assignments</param>
            <returns></returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetCommonParent(DevExpress.CodeRush.StructuralParser.LanguageElement,DevExpress.CodeRush.StructuralParser.LanguageElement,System.Boolean)">
            <summary>
            Gets the common parent of the two specified nodes. Returns null if the two nodes do not have a common parent.
            If checkNodes is true, will check passed the first and the second node, if
            the first node parents the second one, then the first will returned, and if
            the second node parents the first one, then first will be returned.
            </summary>
            <param name="firstElement">The first of two nodes to check for a common parent.</param>
            <param name="secondElement">The second of two nodes to check for a common parent.</param>
            <param name="checkNodes">The option to check first and second passed nodes.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetCommonParent(DevExpress.CodeRush.StructuralParser.LanguageElement,DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Gets the common parent of the two specified nodes. Returns null if the two nodes do not have a common parent.
            </summary>
            <param name="firstElement">The first of two nodes to check for a common parent.</param>
            <param name="secondElement">The second of two nodes to check for a common parent.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetExpressionInRange(DevExpress.CodeRush.StructuralParser.LanguageElement,DevExpress.CodeRush.StructuralParser.SourceRange)">
            <summary>
            Returns expression inside of the specified element and restricted within
            the given source range.
            </summary>
            <param name="element">The element that contains the expression.</param>
            <param name="range">The selection source range.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetSourceFileProxy(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns SourceFile proxy object that contains given element.
            </summary>
            <param name="element">The language element to get source file proxy.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetCloneFromNodeList(DevExpress.CodeRush.StructuralParser.NodeList,DevExpress.CodeRush.StructuralParser.NodeList,System.Object)">
            <summary>
            Gets node from the given node list using it's index in the source list.
            </summary>
            <param name="target">The target node list.</param>
            <param name="source">The source node list.</param>
            <param name="obj">The object to obtain clone from target node list.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetCloneFromNodes(DevExpress.CodeRush.StructuralParser.BaseElement,DevExpress.CodeRush.StructuralParser.BaseElement,System.Object)">
            <summary>
            Gets node from the given target node using it's index in the source node.
            </summary>
            <param name="target">The target node.</param>
            <param name="source">The source node.</param>
            <param name="obj">The object to obtain clone from target node.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetDeclaration(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Gets the declaration for the specified element reference.
            </summary>
            <param name="element">The element reference to check. Note that 
            LanguageElement implements IElement, so any LanguageElement descendant 
            can be passed here.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetUnusedDeclarations(System.Collections.IEnumerable)">
            <summary>
            Gets a collection of all unused declarations within the specified scope.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetOverrideCode(DevExpress.CodeRush.StructuralParser.IMemberElement,System.Boolean,System.String,System.String)">
            <summary>
            Gets code to override this member.
            </summary>
            <param name="member">The element to override.</param>
            <param name="callBase">Pass true to add call to base method.</param>
            <param name="codeBefore">The code to add before method call.</param>
            <param name="codeAfter">The code to add after method call.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetOverrideCode(DevExpress.CodeRush.StructuralParser.IMemberElement,DevExpress.CodeRush.StructuralParser.ITypeElement,System.Boolean,System.String,System.String)">
            <summary>
            Gets code to override this member.
            </summary>
            <param name="member">The element to override.</param>
            <param name="type">Type where overridden member would be placed.</param>
            <param name="callBase">Pass true to add call to base method.</param>
            <param name="codeBefore">The code to add before method call.</param>
            <param name="codeAfter">The code to add after method call.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetRelativeQualifier(DevExpress.CodeRush.StructuralParser.IElement,DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Returns type reference expression for the given type element.
            </summary>
            <param name="start">The element where qualifier should be visible.</param>
            <param name="type">The type element.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetTopLevelNodes(DevExpress.CodeRush.StructuralParser.LanguageElement[])">
            <summary>
            Returns top level nodes for the given array of langauge elements.
            </summary>
            <param name="elements">The elements to get top level nodes.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetBlockDelimitersRange(DevExpress.CodeRush.StructuralParser.ParentingStatement)">
            <summary>
            Returns range for block delimiters.    
            If delimiters are absent returns appropriate range considering nodes and trailing support elements
            </summary>
            <param name="statement">The statement to define the range</param>    
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetInnerType(DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Returns type of inner elements for pointers and arrays.
            </summary>
            <param name="type">The expression get element type</param>    
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetLastImplementExpression(DevExpress.CodeRush.StructuralParser.Member)">
            <summary>
            Returns last expression inside implements section for the given member.
            </summary>
            <param name="member">The member to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetLastAncestor(DevExpress.CodeRush.StructuralParser.TypeDeclaration)">
            <summary>
            Returns last expression inside type ancestor exressions section for the given type.
            </summary>
            <param name="type">The type to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.HasImplementExpression(DevExpress.CodeRush.StructuralParser.Member)">
            <summary>
            Returns true if the given member has implements expression.
            </summary>
            <param name="member">The member to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.HasAncestors(DevExpress.CodeRush.StructuralParser.TypeDeclaration)">
            <summary>
            Returns true if the given type has ancestor expressions.
            </summary>
            <param name="type">The type to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetMemberHeadEndPoint(DevExpress.CodeRush.StructuralParser.Member)">
            <summary>
            Returns end point of the given member declaration header.
            </summary>
            <param name="member">The member to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetTypeHeadEndPoint(DevExpress.CodeRush.StructuralParser.TypeDeclaration)">
            <summary>
            Returns end point of the given type declaration header.
            </summary>
            <param name="type">The type to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.CreateReferenceType(DevExpress.CodeRush.StructuralParser.TypeReferenceExpression)">
            <summary>
            Creates new type refernece expression for the given type reference if it doesn't have
            IsReferenceType or IsManagedReferenceType flags are set to true.
            </summary>
            <param name="type">The to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.ReplaceReferenceType(DevExpress.CodeRush.StructuralParser.TypeReferenceExpression)">
            <summary>
            Returns base type for the given type reference expression 
            if IsReferenceType or IsManagedReferenceType flags are set to true.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetTypeQualifiedName(System.String,System.String)">
            <summary>
            Returns type qualified name for the given qualifier and baseName.
            </summary>
            <param name="qualifier">The qualifier to use.</param>
            <param name="baseName">The baseName to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetMemberQualifiedName(System.String,System.String)">
            <summary>
            Returns member qualified name for the given qualifier and baseName.
            </summary>
            <param name="qualifier">The qualifier to use.</param>
            <param name="baseName">The baseName to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetPointerQualifiedName(System.String,System.String)">
            <summary>
            Returns pointer qualified name for the given qualifier and baseName.
            </summary>
            <param name="qualifier">The qualifier to use.</param>
            <param name="baseName">The baseName to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetQualifiedName(System.String,System.String,System.String)">
            <summary>
            Returns qualified name for the given qualifier and baseName, using the specified operator.
            </summary>
            <param name="qualifier">The qualifier to use.</param>
            <param name="op">The operator to use.</param>
            <param name="baseName">The baseName to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.IsInsideUnsafe(DevExpress.CodeRush.StructuralParser.LanguageElement,DevExpress.CodeRush.StructuralParser.SourcePoint)">
            <summary>
            Returns true if the specified point is located inside unsafe statement.
            </summary>
            <param name="target">The target code block to use.</param>
            <param name="point">The source point to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.SimplifyTypeReference(DevExpress.CodeRush.StructuralParser.SourceFile,DevExpress.CodeRush.StructuralParser.TypeReferenceExpression)">
            <summary>
            Transforms TypeReferenceExpression into simple form by removing redundant qualifier or transforming into built-in form.
            </summary>
            <param name="fileNode">The SourceFile to check namespace references</param>
            <param name="type">The TypeReferenceExpression to simplify</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetParent(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns parent of declaration. If declaration is QueryIdent, returns corresponding SqlExpression, otherwise - returns declaration's Parent
            </summary>
            <param name="declaration">Declaration, which parent is requested</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.IsCompatibleBinaryOperator(DevExpress.CodeRush.StructuralParser.BinaryOperatorType,DevExpress.CodeRush.StructuralParser.BinaryOperatorType)">
            <summary>
            Checks if two binary operators are compatible.
            </summary>
            <param name="first">First operator type.</param>
            <param name="second">Second operator type.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.CreateResolvingCache">
            <summary>
            Creates new resolving cache.
            </summary>
            <returns>Returns IResolvingCache instance.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetXamlXmlnsQualifier(DevExpress.CodeRush.StructuralParser.SourceFile,System.String)">
            <summary>
            Get XAML namespace qualifier
            </summary>
            <param name="file">The SourceFile to find qualifier</param>
            <param name="xmlNamespace">The XML namespace to find qualifier</param>
            <returns>Qualifier name</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetXamlXmlnsQualifier(System.String)">
            <summary>
            Get XAML namespace qualifier
            </summary>
            <param name="xmlnsAttributeName">Attribute name of xmlns definition</param>
            <returns>Qualifier name</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.IsXamlXmlnsName(System.String,System.String@)">
            <summary>
            Returns true if attribute name is xml namespace
            </summary>
            <param name="attributeName">Attribute name</param>
            <param name="qualifier">Returns qualifier</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetXamlQualifiedName(System.String,DevExpress.CodeRush.StructuralParser.SourceFile,System.String)">
            <summary>
            Get XAML qualified name
            </summary>
            <param name="name">Name</param>
            <param name="file">The SourceFile to find qualifier</param>
            <param name="xmlNamespace">The XML namespace to find qualifier</param>
            <returns>name with qualifier</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetXamlClassQualifiedName(DevExpress.CodeRush.StructuralParser.SourceFile)">
            <summary>
            Returns XAML Class qualified name
            </summary>
            <param name="file">Source file</param>
            <returns>Class qualified name</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetXamlQualifiedName(System.String,System.String)">
            <summary>
            Get XAML qualified name
            </summary>
            <param name="name">Name</param>
            <param name="qualifier">Qualifier name</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetXamlQualifierFromName(System.String)">
            <summary>
            Get xmlns qualifier from element name
            </summary>
            <param name="name">Name of element</param>
            <returns>Qualifier or string empty</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetXamlQualifierFromName(DevExpress.CodeRush.StructuralParser.HtmlElement)">
            <summary>
            Get xmlns qualifier from element name
            </summary>
            <param name="element">Html element</param>
            <returns>Qualifier or string empty</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.RangeIsCorrupted(DevExpress.CodeRush.StructuralParser.SourceRange)">
            <summary>
            Defines if range has corrupted coordinates.
            </summary>
            <param name="range">The range to check</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetIndexAt(System.Collections.IList,DevExpress.CodeRush.StructuralParser.SourcePoint)">
            <summary>
            Gets index of element located near the specified point.
            </summary>
            <param name="list">The list of elements</param>
            <param name="point">The point to check</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetNodesInRange(DevExpress.CodeRush.StructuralParser.LanguageElement,DevExpress.CodeRush.StructuralParser.SourceRange)">
            <summary>
            Gets nodes located inside of the specified range.
            </summary>
            <param name="scope">The scope to check</param>
            <param name="range">The range to check</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetNodesInRange(DevExpress.CodeRush.StructuralParser.LanguageElement,DevExpress.CodeRush.StructuralParser.SourceRange,System.Boolean)">
            <summary>
            Gets nodes located inside of the specified range.
            </summary>
            <param name="scope">The scope to check</param>
            <param name="range">The range to check</param>
            <param name="useBinarySerach">Defines if binary search should be used</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetNodesInRange(DevExpress.CodeRush.StructuralParser.NodeList,DevExpress.CodeRush.StructuralParser.SourceRange)">
            <summary>
            Gets nodes located inside of the specified range.
            </summary>
            <param name="nodes">The list of nodes to check</param>
            <param name="range">The range to check</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.GetNodesInRange(DevExpress.CodeRush.StructuralParser.NodeList,DevExpress.CodeRush.StructuralParser.SourceRange,System.Boolean)">
            <summary>
            Gets nodes located inside of the specified range.
            </summary>
            <param name="nodes">The list of nodes to check</param>
            <param name="range">The range to check</param>
            <param name="useBinarySerach">Defines if binary search should be used</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.RemoveNodesInRange(DevExpress.CodeRush.StructuralParser.LanguageElement,DevExpress.CodeRush.StructuralParser.SourceRange)">
            <summary>
            Removes nodes located in the scpecified range from the scope.
            </summary>
            <param name="scope">The element to check</param>
            <param name="range">The range to check</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.RemoveNodesInRange(DevExpress.CodeRush.StructuralParser.NodeList,DevExpress.CodeRush.StructuralParser.SourceRange)">
            <summary>
            Removes nodes located in the scpecified range from the list.
            </summary>
            <param name="nodes">The list of nods to check</param>
            <param name="range">The range to check</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.RemoveNodesInRange(DevExpress.CodeRush.StructuralParser.NodeList,DevExpress.CodeRush.StructuralParser.SourceRange,System.Boolean)">
            <summary>
            Removes nodes located in the scpecified range from the list.
            </summary>
            <param name="nodes">The list of nods to check</param>
            <param name="range">The range to check</param>
            <param name="useBinarySerach">Defines if binary search should be used</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceModelUtils.ImplementMember(DevExpress.CodeRush.StructuralParser.TypeDeclaration,DevExpress.CodeRush.StructuralParser.IMemberElement,System.Boolean,System.Boolean)">
            <summary>
            Returns an implementation of an abstract, virtual or an interface member.
            </summary>
            <param name="activeType"></param>
            <param name="member"></param>
            <param name="isInterfaceMember"></param>
            <param name="isExplicitImplementation"></param>
            <returns></returns>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.ICodeModelService">
            <summary>
            Provides methods and properties to work with EnvDTE code model.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ICodeModelService.GetMembers(EnvDTE.CodeElement)">
            <summary>
            Gets members defined in the specified code element.
            </summary>
            <param name="aCodeElement">The code element to get members from.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ICodeModelService.FindElement(EnvDTE.CodeElements,System.String)">
            <summary>
            Finds an element with the given name inside the specified code elements.
            </summary>
            <param name="elements">The elements to search in.</param>
            <param name="name">The name of the element to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ICodeModelService.FindNamespace(EnvDTE.CodeElements,System.String)">
            <summary>
            Finds a namespace with the given name inside the specified code elements.
            </summary>
            <param name="elements">The elements to search in.</param>
            <param name="name">The name of the element to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ICodeModelService.GetProjectCodeModel(DevExpress.CodeRush.StructuralParser.ProjectElement)">
            <summary>
            Gets project code model for the given project element.
            </summary>
            <param name="projectElement">The project element to get code model.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ICodeModelService.GetCodeElements(DevExpress.CodeRush.StructuralParser.ProjectElement)">
            <summary>
            Gets all code elements inside the code model of the given project element.
            </summary>
            <param name="element">The project element to get code elements.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ICodeModelService.GetCodeElementByFullName(DevExpress.CodeRush.StructuralParser.ProjectElement,System.String)">
            <summary>
            Finds an element with the given full name inside the specified project element.
            </summary>
            <param name="projectElement">The project to search.</param>
            <param name="fullName">The full name of the element to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ICodeModelService.GetCodeElementByFullName(EnvDTE.CodeElements,System.String)">
            <summary>
            Finds an element with the given full name inside the specified code elements.
            </summary>
            <param name="elements">The code elements to search.</param>
            <param name="fullName">The full name of the element to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ICodeModelService.GetCodeElementByFullName(EnvDTE.CodeElement,System.String)">
            <summary>
            Gets an element with the given full name from members defined in the specified
            code element.
            </summary>
            <param name="element">The element to get members from.</param>
            <param name="fullName">The full name of the element to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ICodeModelService.GetFileCodeModel(EnvDTE.Document)">
            <summary>
            Gets file code model for the given document.
            </summary>
            <param name="document">The document to get code model.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ICodeModelService.GetFileCodeModel(EnvDTE.TextDocument)">
            <summary>
            Gets file code model for the given text document.
            </summary>
            <param name="document">The document to get code model.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.IDocumentServices.GetIDocumentImplementor(System.String)">
            <summary>
            Returns IDocument implementer for the given file name.
            </summary>
            <param name="fileName">The name of the file to get IDocument.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.IDocumentServices.GetText(System.String)">
            <summary>
            Retrieves the current text of the specified file. If the file is open in Visual Studio
            in a document window or in-memory, the current contents of the buffer will be returned. If
            the file is not open, the contents of the file on disk will be returned.
            </summary>
            <param name="filePath">The file whose text to retrieve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.IDocumentServices.GetText(System.String,System.Boolean)">
            <summary>
            Retrieves the current text of the specified file. If the file is open in Visual Studio
            in a document window or in-memory, the current contents of the buffer will be returned. If
            the file is not open, the contents of the file on disk will be returned.
            </summary>
            <param name="filePath">The file whose text to retrieve.</param>
            <param name="useDTE">Defines whether EnvDTE or should be used (VSIP is used by default).</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.IExpressionSimplifier.Simplify(DevExpress.CodeRush.StructuralParser.Expression)">
            <summary>
            Simplifies given expression.
            </summary>
            <param name="expression">The expression to simplify.</param>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteFunctionPointerTypeReference">
            <summary>
            Function pointer type reference.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFunctionPointerTypeReference.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteQualifiedElementReferenceExpression">
            <summary>
            Represents qualified element reference.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQualifiedElementReferenceExpression.#ctor">
            <summary>
            Creates a new instance of LiteQualifiedElementReferenceExpression
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQualifiedElementReferenceExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression,System.String)">
            <summary>
            Creates a new instance of LiteQualifiedElementReferenceExpression
            </summary>
            <param name="source">The source expression.</param>
            <param name="name">The name of the element reference.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQualifiedElementReferenceExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression,System.String,System.Boolean)">
            <summary>
            Creates a new instance of LiteQualifiedElementReferenceExpression
            </summary>
            <param name="source">The source expression.</param>
            <param name="name">The name of the element reference.</param>
            <param name="isModified">The value determining if reference is modified.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQualifiedElementReferenceExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQualifiedElementReferenceExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQualifiedElementReferenceExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQualifiedElementReferenceExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQualifiedElementReferenceExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCppQualifiedElementReferenceExpression.#ctor">
            <summary>
            Creates a new instance of LiteCppQualifiedElementReferenceExpression
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCppQualifiedElementReferenceExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression,System.String)">
            <summary>
            Creates a new instance of LiteCppQualifiedElementReferenceExpression
            </summary>
            <param name="source">The source expression.</param>
            <param name="name">The name of the element reference.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCppQualifiedElementReferenceExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression,System.String,System.Boolean)">
            <summary>
            Creates a new instance of LiteCppQualifiedElementReferenceExpression
            </summary>
            <param name="source">The source expression.</param>
            <param name="name">The name of the element reference.</param>
            <param name="isModified">The value determining if reference is modified.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCppQualifiedElementReferenceExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression.
            </summary>
            <param name="resolver">The source tree resolver.</param>
            <returns>Returns language element representing the type of the expression.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCppQualifiedElementReferenceExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteCppQualifiedElementReferenceExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteCppQualifiedElementReferenceExpression.ImageIndex">
            <summary>
            Gets element index.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LitePointerElementReference.#ctor">
            <summary>
            Creates a new instance of LitePointerElementReference
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LitePointerElementReference.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression,System.String)">
            <summary>
            Creates a new instance of LitePointerElementReference
            </summary>
            <param name="source">The source expression.</param>
            <param name="name">The name of the element reference.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LitePointerElementReference.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression,System.String,System.Boolean)">
            <summary>
            Creates a new instance of LitePointerElementReference
            </summary>
            <param name="source">The source expression.</param>
            <param name="name">The name of the element reference.</param>
            <param name="isModified">The value determining if reference is modified.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LitePointerElementReference.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression.
            </summary>
            <param name="resolver">The source tree resolver.</param>
            <returns>Returns language element representing the type of the expression.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LitePointerElementReference.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LitePointerElementReference.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LitePointerElementReference.ImageIndex">
            <summary>
            Gets element index.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQualifiedNestedReference.#ctor">
            <summary>
            Creates a new instance of LiteQualifiedNestedReference
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQualifiedNestedReference.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression,System.String)">
            <summary>
            Creates a new instance of LiteQualifiedNestedReference
            </summary>
            <param name="source">The source expression.</param>
            <param name="name">The name of the element reference.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQualifiedNestedReference.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression,System.String,System.Boolean)">
            <summary>
            Creates a new instance of LiteQualifiedNestedReference
            </summary>
            <param name="source">The source expression.</param>
            <param name="name">The name of the element reference.</param>
            <param name="isModified">The value determining if reference is modified.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQualifiedNestedReference.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression.
            </summary>
            <param name="resolver">The source tree resolver.</param>
            <returns>Returns language element representing the type of the expression.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQualifiedNestedReference.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteQualifiedNestedReference.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteQualifiedNestedReference.ImageIndex">
            <summary>
            Gets element index.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlAttributeReferenceExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression.
            </summary>
            <param name="resolver">The source tree resolver.</param>
            <returns>Returns language element representing the type of the expression.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlAttributeReferenceExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteXmlAttributeReferenceExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteXmlAttributeReferenceExpression.ImageIndex">
            <summary>
            Gets element index.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlElementReferenceExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression.
            </summary>
            <param name="resolver">The source tree resolver.</param>
            <returns>Returns language element representing the type of the expression.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlElementReferenceExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clone data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The element clone options.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlElementReferenceExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteXmlElementReferenceExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteXmlElementReferenceExpression.ImageIndex">
            <summary>
            Gets element index.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteUsingDeclarationStatement.#ctor">
            <summary>
            Creates new LiteUsingDeclarationStatement instance.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteUsingDeclarationStatement.#ctor(DevExpress.CodeRush.StructuralParser.LiteNamespaceReference)">
            <summary>
            Creates new LiteUsingDeclarationStatement instance.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteUsingDeclarationStatement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteUsingDeclarationStatement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteUsingDeclarationStatement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteUsingDeclarationStatement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteUsingDeclarationStatement.SetNamespaceReference(DevExpress.CodeRush.StructuralParser.LiteNamespaceReference)">
            <summary>
            Sets with statement expression.
            </summary>
            <param name="expression">The expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteUsingDeclarationStatement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteUsingDeclarationStatement.NamespaceReference">
            <summary>
            Gets namespace reference.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteUsingDeclarationStatement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteUsingDeclarationStatement.ImageIndex">
            <summary>
            Gets image index.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteUsingDeclarationStatement.Ranges">
            <summary>
            Gets element range. In case of partial 
            elements there are more than one range.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteUsingDeclarationStatement.FirstRange">
            <summary>
            Gets first TextRange that indicate where 
            the element appears in the code.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.IdentifiersMatch(System.String,System.String)">
            <summary>
            Returns true if the specified identifiers are equivalent.
            </summary>
            <param name="identifier1">The first identifier to compare.</param>
            <param name="identifier2">The second identifier to compare.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.ExtractFirstIdentifier(System.String@)">
            <summary>
            Removes the first identifier from qualifiedName and returns that identifier. 
            For example, if qualifiedName is "System.Boolean", this method will return 
            "System" and will set qualifiedName to "Boolean".
            </summary>
            <param name="qualifiedName">The identifier to evaluate.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.GetEscapedString(System.String,System.String,System.Boolean)">
            <summary>
            Returns an escaped version of the passed string.
            </summary>
            <param name="language">The language to use when converting the string.</param>
            <param name="value">The string value to convert.</param>
            <param name="isVerbatim">Whether the string is a verbatim string. E.g., in C#, verbatim strings
            begin with an '@' character.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.IntroduceComments(DevExpress.CodeRush.StructuralParser.ParserContext)">
            <summary>
            Adds collected Comments to the SourceFile, both held in the specified ParserContext.
            </summary>
            <param name="parserContext">The ParserContext holding valid Document.Parser, SourceFile, and Comments properties.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.GetSimpleTypeName(System.String)">
            <summary>
            Gets simple type name for the specified full name.
            </summary>
            <param name="fullName">The full type name.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.GetSimpleTypeName(System.String,System.String)">
            <summary>
            Gets simple type name for the specified full name.
            </summary>
            <param name="fullName">The full type name.</param>
            <param name="languageID">The language id.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.GetFullTypeName(System.String)">
            <summary>
            Returns full type name for the given simple type name.
            </summary>
            <param name="simpleName">The simple type name.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.GetFullTypeName(System.String,System.String)">
            <summary>
            Returns full type name for the given simple type name.
            </summary>
            <param name="simpleName">The simple type name.</param>
            <param name="languageID">The language id.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.GetBuiltInTypeWideningConversionTable">
            <summary>
            Gets implicit conversion table for the builtin types.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.GetBuiltInTypeNarrowingConversionTable">
            <summary>
            Gets explicit conversion table for the builtin types.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.GetBuiltInTypeWideningConversionTable(System.String)">
            <summary>
            Gets implicit conversion table for the builtin types.
            </summary>
            <param name="languageID">The language id</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.GetBuiltInTypeNarrowingConversionTable(System.String)">
            <summary>
            Gets explicit conversion table for the builtin types.
            </summary>
            <param name="languageID">The language id</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.GetSimpleName(System.String)">
            <summary>
            Returns simple name for the given string.
            </summary>
            <param name="name">The name to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.GetSimpleName(System.String,System.String)">
            <summary>
            Returns simple name for the given string.
            </summary>
            <param name="name">The name to use.</param>
            <param name="language">The language id to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.GetParserFromLanguageID(System.String)">
            <summary>
            Returns a parser that is capable of parsing text documents matching the specified Language ID.
            </summary>
            <param name="languageID">The Language ID to get parser support for (e.g., "CSharp", "Basic", "C/C++").</param>
            <returns>The parser that can parse files of this type, or null if not found.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.CreateParserFromLanguageID(System.String)">
            <summary>
            Create new parser that is capable of parsing text documents matching the specified Language ID.
            </summary>
            <param name="languageID">The Language ID to get parser support for (e.g., "CSharp", "Basic", "C/C++").</param>
            <returns>The parser that can parse files of this type, or null if not found.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.GetCodeGenerator(System.String)">
            <summary>
            Returns code generator for the given language extension.
            </summary>
            <param name="extension">The language extension.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.IsBaseInstanceKeyword(System.String)">
            <summary>
            Returns true if the given string equals to base instance keyword for the active language.
            </summary>
            <param name="str">The string to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.IsBaseInstanceKeyword(System.String,System.String)">
            <summary>
            Returns true if the given string equals to base instance keyword for the active language.
            </summary>
            <param name="language">The language id to use.</param>
            <param name="str">The string to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.IsClassInstanceKeyword(System.String)">
            <summary>
            Returns true if the given string equals to class instance keyword for the active language.
            </summary>
            <param name="str">The string to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.IsClassInstanceKeyword(System.String,System.String)">
            <summary>
            Returns true if the given string equals to class instance keyword for the active language.
            </summary>
            <param name="language">The language id to use.</param>
            <param name="str">The string to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.IsTrailingIdentifierChar(System.Char)">
            <summary>
            Returns true if testChar qualifies as a character that can follow the first character of an identifier.
            </summary>
            <param name="testChar">The character to test.</param>
            <returns></returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.IsLeadingIdentifierChar(System.Char)">
            <summary>
            Returns true if testChar qualifies as a character that can start an identifier.
            </summary>
            <param name="testChar">The character to test.</param>
            <returns></returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.IsQualifiedName(System.String)">
            <summary>
            Returns true if the given name is qualified.
            </summary>
            <param name="name">The name to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.IsQualifiedName(System.String,System.String)">
            <summary>
            Returns true if the given name is qualified.
            </summary>
            <param name="name">The name to check.</param>
            <param name="language">The language id to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.CheckQualifiedName(System.String,System.String)">
            <summary>
            Returns true if the given name is qualified.
            </summary>
            <param name="name">The name to check.</param>
            <param name="operators">The delimiter operators.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.CheckSimpleName(System.String,System.String)">
            <summary>
            Returns simple name for the given string.
            </summary>
            <param name="name">The name to use.</param>
            <param name="operators">The delimiter operators.</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.IsLanguageCaseSensitive(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns true if the given node's language is case sensitive.
            </summary>
            <param name="node">The node to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.IsDefaultPrimitiveValue(DevExpress.CodeRush.StructuralParser.ITypeElement,DevExpress.CodeRush.StructuralParser.IExpression)">
            <summary>
            Checks if given expression is primitive and has default value for the specified type. 
            </summary>
            <param name="typeElement">The type element to check.</param>
            <param name="expression">The expression to check.</param>
            <returns>Returns true if given expression is primitive and has default value for the specified type.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.Parse(System.String)">
            <summary>
            Parses the specified source file on disk and returns the LanguageElement that represents it.
            </summary>
            <param name="fileName">The name of the file on disk to parse.</param>
            <returns>Returns the LanguageElement representing the specified file, or null if an error occurred.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.Parse(System.String,System.Text.Encoding)">
            <summary>
            Parses the specified source file on disk and returns the LanguageElement that represents it.
            </summary>
            <param name="fileName">The name of the file on disk to parse.</param>
            <param name="encoding"> The code page of the file on disk to parse.</param>
            <returns>Returns the LanguageElement representing the specified file, or null if an error occurred.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.IsCollapsible(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Determines whether or not the specified LanguageElement is collapsible for the active language.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.GenerateElement(DevExpress.CodeRush.StructuralParser.LanguageElement,System.String)">
            <summary>
            Generates code for the given LanguageElement in the specified language.
            </summary>
            <param name="element">The LanguageElement to generate.</param>
            <param name="languageID">The language to generate code in.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.GenerateElement(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Generates code for the given LanguageElement in the active language.
            </summary>
            <param name="element">The LanguageElement to generate.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.GenerateExpressionCode(DevExpress.CodeRush.StructuralParser.Expression,System.String)">
            <summary>
            Generates code for the given expression in the specified language.
            </summary>
            <param name="expression">The expression to generate.</param>
            <param name="languageID">The language to generate code in.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.GenerateExpressionCode(DevExpress.CodeRush.StructuralParser.Expression)">
            <summary>
            Generates code for the given expression in the active language.
            </summary>
            <param name="expression">The expression to generate.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.GenerateXmlCode(DevExpress.CodeRush.StructuralParser.XmlDocComment,System.String)">
            <summary>
            Generates code for the given XmlDocComment in the specified language.
            </summary>
            <param name="xmlComment">The XmlDocComment to generate.</param>
            <param name="languageID">The language to generate code in.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.GenerateXmlCode(DevExpress.CodeRush.StructuralParser.XmlDocComment)">
            <summary>
            Generates code for the given XmlDocComment in the active language.
            </summary>
            <param name="xmlComment">The XmlDocComment to generate.</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.GetCollapsibleRange(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Gets a SourceRange representing the range of the specified LanguageElement that can be collapsed for the active language.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.GetComment(System.String)">
            <summary> 
            Gets a single-line comment for the specified text in the active language. 
            </summary> 
            <param name="text">The text to comment.</param> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.GetComment(System.String,System.String)">
            <summary> 
            Gets a single-line comment for the specified text in the specified language. 
            </summary> 
            <param name="text">The text to comment.</param> 
            <param name="languageID">The ID of the language to get the comment for.</param> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.GetActiveCodeDomProvider">
            <summary>
            Returns CodeDom provider for the active language.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.GetParserFromFileExt(System.String)">
            <summary>
            Returns a parser that is capable of parsing files matching the specified file extension.
            </summary>
            <param name="fileExt">The file extension to get parser support for (including the leading ".").</param>
            <returns>The parser that can parse files of this type, or null if not found.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.GetTypeParameterInitializer(System.String)">
            <summary>
            Returns default initializer for the specified TypeParameter name.
            </summary>
            <param name="name">The name of TypeParameter</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.GetNullReferenceExpression">
            <summary>
            Returns null reference expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.IsBuiltInType(System.String)">
            <summary>
            Returns true if the given type name is built in into the project language.
            </summary>
            <param name="typeName">The type name to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.IsBuiltInType(System.String,System.String)">
            <summary>
            Returns true if the given type name is built in into the project language.
            </summary>
            <param name="typeName">The type name to check.</param>
            <param name="languageID">The language id.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.GetDefaultAssemblyReferences(System.String)">
            <summary>
            Returns paths to assemblies that should be referenced by a project by default.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.GetActiveElementBuilder">
            <summary>
            Returns active ElementBuilder.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.GetElementBuilder(System.String)">
            <summary>
            Returns ElementBuilder for the given language.
            </summary>
            <param name="languageID">The language id</param>
            <returns>Returns ElementBuilder for the given language.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.IsCaseSensitiveLanguage(System.String)">
            <summary>
            Returns true if the language is case-sensitive.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.LoadProject(EnvDTE.Project)">
            <summary>
            Loads ProjectElement from the given EnvDTE.Project.
            </summary>
            <param name="project">The project to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.GetProjectLoader(EnvDTE.Project)">
            <summary>
            Returns project loader for the given project.
            </summary>
            <param name="project">The project to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.GetDefaultValueExpression(DevExpress.CodeRush.StructuralParser.PrimitiveExpression)">
            <summary>
            Returns default value expression using given primitive expression.
            </summary>
            <param name="primitive">The primitive expression to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.GetDefaultValueExpression(DevExpress.CodeRush.StructuralParser.PrimitiveExpression,System.String)">
            <summary>
            Returns default value expression using given primitive expression.
            </summary>
            <param name="primitive">The primitive expression to use.</param>
            <param name="language">The language ID to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.IsExtensionMethod(DevExpress.CodeRush.StructuralParser.IMethodElement)">
            <summary>
            Returns true if method is extension.
            </summary>
            <param name="method">The method to check</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.IsExtensionMethod(DevExpress.CodeRush.StructuralParser.IMethodElement,System.String)">
            <summary>
            Returns true if method is extension method.
            </summary>
            <param name="method">The method to check</param>
            <param name="languageID">The language to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.ParseExpression(System.String)">
            <summary>
            Parses an expression from the given string.
            </summary>
            <param name="expression">The string to parse.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.ParseExpression(System.String,System.Int32,System.Int32)">
            <summary>
            Parses an expression from the given string.
            </summary>
            <param name="expression">The string to parse.</param>
            <param name="startLine">The line where this expression text starts. Ensures LanguageElement Ranges are correct.</param>
            <param name="startColumn">The column offset where this expression text starts. Ensures LanguageElement Ranges are correct.</param>
            <returns></returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.ParseExpression(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Parses an expression from the given string.
            </summary>
            <param name="expression">The string to parse.</param>
            <param name="startLine">The line where this expression text starts. Ensures LanguageElement Ranges are correct.</param>
            <param name="startColumn">The column offset where this expression text starts. Ensures LanguageElement Ranges are correct.</param>
            <param name="languageID">The language to use.</param>
            <returns></returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.IsKeyword(System.String)">
            <summary>
            Returns true if the specified string is a legal keyword for the active language.
            </summary>
            <param name="s">The string to test.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.IsKeywordElement(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns true if the specified element is a keyword usage for the active language. Correctly resolves context keywords(for example - get, set in C#).
            </summary>
            <param name="element">The element to test.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.GetIdentifierFromKeyword(System.String)">
            <summary>
            Returns identifier from keyword for active language extension.
            If passed string is not keyword then method does not process it.
            </summary>
            <param name="keyword">The keyword to process.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.GetOverloadableOperatorName(DevExpress.CodeRush.StructuralParser.OperatorType,System.Int32)">
            <summary>
            Returns operator name for the given operator type.
            </summary>
            <param name="op">The operator type.</param>
            <param name="count">Operator parameter count.</param>
            <returns>Operator name for the given operator type.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.GetOverloadableOperatorName(DevExpress.CodeRush.StructuralParser.OperatorType,System.Int32,System.String)">
            <summary>
            Returns operator name for the given operator type and language id.
            </summary>
            <param name="op">The operator type.</param>
            <param name="count">Operator parameter count.</param>
            <param name="languageID">The language id.</param>
            <returns>Operator name for the given operator type.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.SupportsRootNamespace(System.String)">
            <summary>
            Returns true if the given language supports root namespace feature.
            </summary>
            <param name="language">The language to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.SupportsMacroses">
            <summary>
            Returns true if current language supports macroses.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.SupportsMacroses(System.String)">
            <summary>
            Returns true if current language supports macross.
            </summary>
            <param name="language">The language to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.SupportsNestedNamespaceSearch">
            <summary>
            Returns true if the given language supports searching of the nested namespaces.
            </summary>    
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.SupportsNestedNamespaceSearch(System.String)">
            <summary>
            Returns true if the given language supports searching of the nested namespaces.
            </summary>
            <param name="language">The language to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.SupportsPrototypesAndImplementations">
            <summary>
            Returns true if the given language supports prototypes and implementations.
            (E.g. C++ does support prototypes)
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.SupportsPrototypesAndImplementations(System.String)">
            <summary>
            Returns true if the given language supports prototypes and implementations.
            (E.g. C++ does support prototypes)
            </summary>
            <param name="language">The language to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.SupportsObjectCreationFromMethod">
            <summary>
            Returns true if the given language supports creation of new objects using method declaration.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.SupportsObjectCreationFromMethod(System.String)">
            <summary>
            Returns true if the given language supports creation of new objects using method declaration.
            </summary>
            <param name="language">The language to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.SupportsRootMembers">
            <summary>
            Returns true if members can be placed directly to the file or namespace.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.SupportsRootMembers(System.String)">
            <summary>
            Returns true if members can be placed directly to the file or namespace.
            </summary>
            <param name="language">The language to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.SupportsTypes">
            <summary>
            Returns true if the given language supports type declarations.
            </summary>    
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.SupportsTypes(System.String)">
            <summary>
            Returns true if the given language supports type declarations.
            </summary>
            <param name="language">The language to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.SupportsPartialClasses">
            <summary>
            Returns true if active language supports partial classes.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.SupportsParenslessCalls">
            <summary>
            Returns true if the given language supports method calls without parens.
            </summary>    
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.SupportsFileBuildAction(DevExpress.CodeRush.StructuralParser.ISourceFile)">
            <summary>
            Returns true if build action can be checked for the file.
            </summary>
            <param name="fileNode">The file to check.</param>
            <returns>True if build action can be checked.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.CheckBaseMemberVirtualModifier">
            <summary>
            Returns true if virtual modifier should be checked when searching for a base member.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.CheckBaseMemberVirtualModifier(System.String)">
            <summary>
            Returns true if virtual modifier should be checked when searching for a base member.
            </summary>
            <param name="language">The language to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.HasManagedPointers">
            <summary>
            Returns true if current language uses managed pointers.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.SupportsImplicitPointers">
            <summary>
            Returns true if active language supports implicit pointer declarations, e.g. C# or VB language.
            C++ language requires explicit pointers.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.SupportsImplicitPointers(System.String)">
            <summary>
            Returns true if active language supports implicit pointer declarations, e.g. C# or VB language.
            C++ language requires explicit pointers.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.SupportsAutoImplementedPropertyAccessorVisibility">
            <summary>
            Returns true if the given language supports a visibility keyword for auto-implemented properties.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.SupportsOutParameters">
            <summary>
            Returns true if the given language supports out parameters.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.SupportsOutParameters(System.String)">
            <summary>
            Returns true if the given language supports out parameters.
            </summary>
            <param name="language">The language to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.SupportsImplicitImplementationRename">
            <summary>
            Returns true if the given language supports implicit implementation rename.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.SupportsImplicitImplementationRename(System.String)">
            <summary>
            Returns true if the given language supports implicit implementation rename.
            </summary>
            <param name="language">The language to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.GetLanguageID(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Gets languageID for the given element.
            </summary>
            <param name="element">The element to get languageID.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.GetLanguageID(DevExpress.CodeRush.StructuralParser.DotNetLanguageType)">
            <summary>
            Gets languageID for the given DotNetLanguageType.
            </summary>
            <param name="type">The DotNetLanguageType.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.GetLanguageID(System.String)">
            <summary>
            Gets languageID for the given DotNetLanguageType.
            </summary>
            <param name="fileExt">The file extension.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.GetFileLanguageID(DevExpress.CodeRush.StructuralParser.SourceFile)">
            <summary>
            Gets languageID for the given element.
            </summary>
            <param name="element">The element to get languageID.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.IsJavaScriptLanguage(System.String)">
            <summary>
            Returns true if specified language is JavaScript.
            </summary>
            <param name="languageID">The ID of the language.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.IsXAMLLanguage(System.String)">
            <summary>
            Returns true if specified language is XAML.
            </summary>
            <param name="languageID">The ID of the language.</param> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.IsCSharpLanguage(System.String)">
            <summary>
            Returns true if specified language is CSharp.
            </summary>
            <param name="languageID">The ID of the language.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.IsBasicLanguage(System.String)">
            <summary>
            Returns true if specified language is Basic.
            </summary>
            <param name="languageID">The ID of the language.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.IsHtmlLanguage(System.String)">
            <summary>
            Returns true if specified language is HTML.
            </summary>
            <param name="languageID">The ID of the language.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.IsBasicEventExpression(DevExpress.CodeRush.StructuralParser.IExpression)">
            <summary>
            Returns true if current language is Basic and expression name ends with 'Event'
            </summary>
            <param name="expression">Expression for check</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.GetBasicEventName(DevExpress.CodeRush.StructuralParser.IExpression)">
            <summary>
            Returns expression name without 'Event' if current language is Basic and expression name ends with 'Event'
            or returns empty string.
            </summary>
            <param name="expression">Expression for check</param>
            <returns>Name or empty string</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.SupportsPopulatingAnArrayWithInitialValues(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns true if the language of given element supports populating an Array with Initial Values.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.GetSupportedFileExtensions(System.String)">
            <summary>
            Gets supported file extensions for the specified language.
            </summary>
            <param name="languageID">The language id.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ILanguageService.GetTypeAccessOperator(System.String)">
            <summary>
            Returns the character that allow access to the nested elements of type.
            </summary>
            <param name="languageID">The target language</param>
            <returns>Returns the character that allow access to the nested elements of type.</returns>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ILanguageService.Active">
            <summary>
            Returns the Language ID of the active source file.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ILanguageService.IsCaseSensitive">
            <summary>
            Returns true if the active file contains a case-sensitive language.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ILanguageService.MemberAccessOperator">
            <summary>
            Returns the member access operator (e.g., "." in C# and VB) for the active language. Returns an empty string if the active language does not support a member access operator.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ILanguageService.PointerAccessOperator">
            <summary>
            Returns the character that allow access via pointer to members of a struct, class or interface.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ILanguageService.TypeAccessOperator">
            <summary>
            Returns the character that allow access to the nested elements of type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ILanguageService.SupportedFileExtensions">
            <summary>
            Gets supported file extensions for the active language.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ILanguageService.SupportsCLRSettings">
            <summary>
            Determines whether or not the active language supports with statements.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ILanguageService.IsCSharp">
            <summary>
            Returns true if the active file contains CSharp source code.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ILanguageService.IsBasic">
            <summary>
            Returns true if the active file contains Basic source code.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ILanguageService.IsCPlusPlus">
            <summary>
            Returns true if the active file contains C/C++ source code.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ILanguageService.IsNativeCPlusPlus">
            <summary>
            Returns true if the active file is inside native C++ project.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ILanguageService.IsHTML_XML">
            <summary>
            Returns true if the active file contains HTML or XML.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ILanguageService.IsPlainText">
            <summary>
            Returns true if the active file contains plain text.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ILanguageService.IsVisualJSharp">
            <summary>
            Returns true if Visual JSharp is the language used in the active file.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.INamespaceCollector.AddNamespace(DevExpress.CodeRush.StructuralParser.Namespace)">
            <summary>
            Adds a Namespace to a collector of namespaces. Note that at the time this 
            method is called, the Namespace added may not be complete. It's Name property 
            and Parent properties may not have been set. For this reason, implementors of 
            this interface should keep the added Namespaces in a temporary list, and 
            process them later (e.g., move them from the temporary list to a Hashtable 
            keyed off of the FullName property) when ResolveAddedNamespaces() is called. 
            </summary>
            <param name="aNamespace">The Namespace to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.INamespaceCollector.RemoveNamespace(DevExpress.CodeRush.StructuralParser.Namespace)">
            <summary>
            Removes a Namespace from the INamespaceCollector.
            </summary>
            <param name="aNamespace">The Namespace to remove</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.INamespaceCollector.ResolveAddedNamespaces">
            <summary>
            Moves Namespaces added via AddNamespace from a temporary list to a Hashtable 
            keyed off of the FullName property of the Namespace. The best time to call this 
            is in an AfterParse event handler.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.IRefactoringService.FindAllLocalReferences(DevExpress.CodeRush.StructuralParser.LanguageElement,DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Finds all referecnes to a local declaration by it's name within the given scope.
            </summary>
            <param name="scope">Scope where to find refereneces to declaration.</param>
            <param name="element">Declaration for which to find references.</param>
            <returns>Returns an ArrayList of ElementReference objects.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.IRefactoringService.FindAllFieldReferences(DevExpress.CodeRush.StructuralParser.LanguageElement,DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Finds all referecnes to a field declaration by it's name within the given scope.
            </summary>
            <param name="scope">Scope where to find refereneces to declaration.</param>
            <param name="element">Declaration for which to find references.</param>
            <returns>Returns an ArrayList of ElementReference objects.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.IRefactoringService.FindAllMethodReferences(DevExpress.CodeRush.StructuralParser.LanguageElement,System.String,System.Int32)">
            <summary>
            Finds all referecnes to a method by it's name and parameters count within the given scope.
            The language elements passed to this method should be determined through a call 
            that either guarantees a parse will happen if needed, or the element was 
            acquired directly after calling CodeRush.Language.ParseIfNeeded().
            </summary>
            <param name="scope">Scope where to find refereneces to a method.</param>
            <param name="name">The name of the method.</param>
            <param name="count">The number of parameters.</param>
            <returns>Returns an ArrayList of MethodCall objects.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.IRefactoringService.FindAllReferences(DevExpress.CodeRush.StructuralParser.IElement,DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Searches for references to the given declaration inside the specified scope.
            </summary>
            <param name="scope">The scope to search in.</param>
            <param name="declaration">The declaration to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.IRefactoringService.ReferenceIsPassedByRefOrOutArgument(DevExpress.CodeRush.StructuralParser.ScopeResolveResult,DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns true if the specified element reference is passed as an argument to a reference parameter or an out parameter.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.IRefactoringService.ReferenceIsPassedByRefOrOutArgument(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns true if the specified element reference is passed as an argument to a reference parameter or an out parameter.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.IRefactoringService.ReferenceIsPassedByRefArgument(DevExpress.CodeRush.StructuralParser.ScopeResolveResult,DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns true if the specified element reference is passed as an argument to a reference parameter.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.IRefactoringService.ReferenceIsPassedByRefArgument(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns true if the specified element reference is passed as an argument to a reference parameter.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.IRefactoringService.ReferenceIsPassedAsOutArgument(DevExpress.CodeRush.StructuralParser.ScopeResolveResult,DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns true if the specified element reference is passed as an argument to an out parameter.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.IRefactoringService.ReferenceIsPassedAsOutArgument(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns true if the specified element reference is passed as an argument to an out parameter.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.IRefactoringService.ReferenceIsPassedAsAnArgument(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns true if the specified element reference is passed as an argument.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.IRefactoringService.ReferenceIsPassedAsAnArgument(DevExpress.CodeRush.StructuralParser.ScopeResolveResult,DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns true if the specified element reference is passed as an argument.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.GetTypes(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Returns a collection of types defined inside the specified language element.
            Only first level nodes are checked.
            </summary>
            <param name="element">The language element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.GetTypes(DevExpress.CodeRush.StructuralParser.LanguageElement,System.Boolean)">
            <summary>
            Returns a collection of types defined inside the specified language element.
            </summary>
            <param name="element">The language element to use.</param>
            <param name="findRecursive">Pass true to perform a recursive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.GetNamespaces(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Returns a collection of namespaces defined inside the specified language element.
            Only first level nodes are checked.
            </summary>
            <param name="element">The language element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.GetNamespaces(DevExpress.CodeRush.StructuralParser.LanguageElement,System.Boolean)">
            <summary>
            Returns a collection of namespaces defined inside the specified language element.
            </summary>
            <param name="element">The language element to use.</param>
            <param name="findRecursive">Pass true to perform a recursive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.GetTypesOrNamespaces(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Returns a collection of types or namespaces defined inside the specified language element.
            Only first level nodes are checked.
            </summary>
            <param name="element">The language element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.GetTypesOrNamespaces(DevExpress.CodeRush.StructuralParser.LanguageElement,System.Boolean)">
            <summary>
            Returns a collection of types or namespaces defined inside the specified language element.
            </summary>
            <param name="element">The language element to use.</param>
            <param name="findRecursive">Pass true to perform a recursive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.GetMembers(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Returns a collection of members defined inside the specified language element.
            Only first level nodes are checked.
            </summary>
            <param name="element">The language element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.GetMembers(DevExpress.CodeRush.StructuralParser.LanguageElement,System.Boolean)">
            <summary>
            Returns a collection of members defined inside the specified language element.
            </summary>
            <param name="element">The language element to use.</param>
            <param name="findRecursive">Pass true to perform a recursive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.FindElement(DevExpress.CodeRush.StructuralParser.LanguageElementCollection,System.String)">
            <summary>
            Finds element with the given name inside the specified collection of language elements.
            Only first level nodes are checked.
            </summary>
            <param name="elements">The collection of language elements to search in.</param>
            <param name="name">The name of the element to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.FindElementByFullName(DevExpress.CodeRush.StructuralParser.LanguageElementCollection,System.String)">
            <summary>
            Performs a recursive search for an element with the given name 
            inside the specified collection of language elements.
            </summary>
            <param name="elements">The collection of language elements to search in.</param>
            <param name="fullName">The full name of the element to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.FindElements(DevExpress.CodeRush.StructuralParser.LanguageElementCollection,System.String)">
            <summary>
            Finds elements with the given name inside the specified collection of language elements.
            Only first level nodes are checked.
            </summary>
            <param name="elements">The collection of language elements to search in.</param>
            <param name="name">The name of the element to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.FindMember(DevExpress.CodeRush.StructuralParser.LanguageElement,System.String)">
            <summary>
            Finds a member with the given name inside the specified language element.
            Only first level nodes are checked.
            </summary>
            <param name="element">The language element to search in.</param>
            <param name="name">The name of the member to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.FindMembers(DevExpress.CodeRush.StructuralParser.LanguageElement,System.String)">
            <summary>
            Finds members with the given name inside the specified language element.
            Only first level nodes are checked.
            </summary>
            <param name="element">The language element to search in.</param>
            <param name="name">The name of the member to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.FindType(System.String)">
            <summary>
            Finds and returns the ITypeElement for the specified typeToFind. The 
            type returned will be in the scope of the active LanguageElement at the 
            caret.
            </summary>
            <param name="typeName">The name of the Module, Enumeration, Class, Struct or Interface to find.</param>
            <returns>Returns a LanguageElement that represents the type declaration, or null if not found.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.FindType(System.String,DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Finds and returns the ITypeElement for the specified typeToFind.
            </summary>
            <param name="typeToFind">The name of the Module, Enumeration, Class, Struct or Interface to find.</param>
            <param name="startNode">The LanguageElement to start the search from. The type found will be visible from this node.</param>
            <returns>Returns a LanguageElement that represents the type declaration, or null if not found.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.FindTypeOrNamespace(DevExpress.CodeRush.StructuralParser.LanguageElement,System.String)">
            <summary>
            Finds a type or namespace with the given name inside the specified
            language element. Only first level nodes are checked.
            </summary>
            <param name="element">The language element to search in.</param>
            <param name="name">The name of the element to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.FindTypeOrNamespace(DevExpress.CodeRush.StructuralParser.LanguageElement,System.String,System.Boolean)">
            <summary>
            Recursively searches for a type or namespace with the given name inside the specified
            language element.
            </summary>
            <param name="element">The language element to search in.</param>
            <param name="name">The name of the element to find.</param>
            <param name="recursive">Pass true to perform a recursive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.FindElementByLocation(DevExpress.CodeRush.StructuralParser.LanguageElementCollection,System.String)">
            <summary>
            Finds an element with the given location inside the specified collection of language elements.
            Only first level nodes are checked.
            </summary>
            <param name="elements">The collection of language elements to search in.</param>
            <param name="location">The location of the element to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.FindNamespaceByLocation(DevExpress.CodeRush.StructuralParser.LanguageElement,System.String)">
            <summary>
            Recursivley searches for a namespace with the given location inside the specified language element.
            Only first level nodes are checked.
            </summary>
            <param name="element">The language element to search in.</param>
            <param name="location">The location of the element to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.FindTypeOrNamespaceByLocation(DevExpress.CodeRush.StructuralParser.LanguageElement,System.String)">
            <summary>
            Recursivley searches for a type or namespace with the given location inside the specified language element.
            </summary>
            <param name="element">The language element to search in.</param>
            <param name="location">The location of the element to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.GetComments(DevExpress.CodeRush.StructuralParser.CodeElement)">
            <summary>
            Gets all comments inside the given code element.
            </summary>
            <param name="element">The element to get comments from.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.GetExpressionInRange(DevExpress.CodeRush.StructuralParser.LanguageElement,DevExpress.CodeRush.StructuralParser.SourceRange)">
            <summary>
            Returns expression inside of the specified element and restricted within
            the given source range.
            </summary>
            <param name="element">The element that contains the expression.</param>
            <param name="range">The selection source range.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.GetDeclaration(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns declaration for the given language element.
            </summary>
            <param name="element">The element to find declaration.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.GetDeclaration(DevExpress.CodeRush.StructuralParser.IElement,System.Boolean)">
            <summary>
            Returns declaration for the given language element.
            </summary>
            <param name="element">The element to find declaration.</param>
            <param name="restore">Defines wether language element should be restored for declaration.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.GetDeclaration(DevExpress.CodeRush.StructuralParser.IElement,System.String)">
            <summary>
            Returns declaration for the given identifier starting from the given
            element.
            </summary>
            <param name="start">The start element.</param>
            <param name="identifier">The identifier to search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.GetDeclaration(DevExpress.CodeRush.StructuralParser.IElement,System.String,System.Boolean)">
            <summary>
            Returns declaration for the given identifier starting from the given
            element.
            </summary>
            <param name="start">The start element.</param>
            <param name="identifier">The identifier to search.</param>
            <param name="restore">Defines wether language element should be restored for declaration.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.GetBaseTypes(DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Returns base type (types in case of multiple inheritence) for the pointed type declaration.
            </summary>
            <param name="element">The TypeElement.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.GetAllBaseTypes(DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Returns all base types for the pointed type declaration.
            </summary>
            <param name="element">The TypeElement.</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.GetProjectConfigurationName(DevExpress.CodeRush.StructuralParser.ProjectElement)">
            <summary>
            Returns project configuration name.
            </summary>
            <param name="project">The project to get configuration name.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.StripNamespace(System.String)">
            <summary>
            Gets the simple type (as a string) of the specified expression full name.
            </summary>
            <param name="typeFullName">The full name of the expression to get simple type for.</param>
            <returns>Returns the simple type (as a string) of the specified type, takes into account all imported namespaces.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.GetAspImportedNamespaces(DevExpress.CodeRush.StructuralParser.ProjectElement)">
            <summary>
            Gets imported namespaces for ASP.NET project.
            </summary>
            <param name="project">The project to get namespaces for.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.GetBuildAction(DevExpress.CodeRush.StructuralParser.SourceFile)">
            <summary>
            Gets source file build action.
            </summary>
            <param name="fileNode">The source file.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.GetStorage(DevExpress.CodeRush.StructuralParser.SolutionElement,System.String)">
            <summary>
            Returns solution specific decoupled storage for the given page.
            </summary>
            <param name="solution">The solution to create decoupled storage.</param>
            <param name="page">The page to create decoupled storage.</param>
            <returns>Returns solution specific decoupled storage for the given page.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.GetStorage(DevExpress.CodeRush.StructuralParser.SolutionElement,System.String,System.String)">
            <summary>
            Returns solution specific decoupled storage for the given page.
            </summary>
            <param name="solution">The solution to create decoupled storage.</param>
            <param name="category">The category to create decoupled storage.</param>
            <param name="page">The page to create decoupled storage.</param>
            <returns>Returns solution specific decoupled storage for the given page.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.GetStorage(DevExpress.CodeRush.StructuralParser.ProjectElement,System.String)">
            <summary>
            Returns project specific decoupled storage for the given page.
            </summary>
            <param name="project">The project to create decoupled storage.</param>
            <param name="page">The page to create decoupled storage.</param>
            <returns>Returns solution specific decoupled storage for the given page.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.GetStorage(DevExpress.CodeRush.StructuralParser.ProjectElement,System.String,System.String)">
            <summary>
            Returns project specific decoupled storage for the given page.
            </summary>
            <param name="project">The project to create decoupled storage.</param>
            <param name="category">The category to create decoupled storage.</param>
            <param name="page">The page to create decoupled storage.</param>
            <returns>Returns solution specific decoupled storage for the given page.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.GetStorage(System.String,System.String)">
            <summary>
            Returns project specific decoupled storage for the given page.
            </summary>
            <param name="category">The category to create decoupled storage.</param>
            <param name="page">The page to create decoupled storage.</param>
            <returns>Returns solution specific decoupled storage for the given page.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.InMacroCall(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Defines if element is located in macro call.
            </summary>
            <param name="element">The element to define.</param>
            <returns>Returns true if element is located in macro call.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.OnFarCacheChanged">
            <summary>
            Called when FAR symbols are changed. Used only internally.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.OnFarCacheInSync">
            <summary>
            Called when project symbols are in sync.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.OnAfterCacheElementUpdate(DevExpress.CodeRush.StructuralParser.ProjectElement,System.String)">
            <summary>
            Called after element in project cache is updated
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.OnBeforeCacheElementUpdate(DevExpress.CodeRush.StructuralParser.ProjectElement,System.String)">
            <summary>
            Called before element in project cache is updated
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.OnProjectItemLoaded(DevExpress.CodeRush.StructuralParser.ProjectElement,System.String)">
            <summary>
            Called after element in project cache was loaded from disc
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceModelService.OnProjectItemParsed(DevExpress.CodeRush.StructuralParser.ProjectElement,System.String)">
            <summary>
            Called after element in project cache was parsed
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ISourceModelService.ActiveProject">
            <summary>
            Gets the ProjectElement containing the active document.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ISourceModelService.SolutionNode">
            <summary>
            Gets solution node.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ISourceModelService.ActiveSolution">
            <summary>
            Gets active solution node.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ISourceModelService.UsePostponedParsing">
            <summary>
            If true, then language elements that implement on demand parsing
            will store tokens for later parse. On demand parse of such language elements
            will occur once NodeCount, Nodes, DetailNodeCount, DetailNodes or Comments
            properties are accessed.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.IStringService.IsNullOrEmpty(System.String)">
            <summary>
            Determines if the specified string is null or an empty string containing no text.
            </summary>
            <param name="value">The string to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.IStringService.SplitLines(System.String)">
            <summary>
            Splits a string containing line terminators into a string array. If, after splitting, the last entry
            is empty, it is removed from the result.
            </summary>
            <param name="text">The string to split.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.IStringService.EndsWithLineTerminator(System.String)">
            <summary>
            Checks if the given string ends with line terminator.
            </summary>
            <param name="s">The string to check.</param>
            <returns>True if the given string ends with line terminator.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.IStringService.GetLastLineTerminatorIndex(System.String)">
            <summary>
            Gets index of the last line terminator in the given string or -1 if
            the given string does not end with line terminator.
            </summary>
            <param name="s">The string to check.</param>
            <returns>The index of the last line terminator.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.IStringService.GetLastLineTerminator(System.String)">
            <summary>
            Gets the last line terminator in the given string or empty TagText if
            the given string does not end with line terminator.
            </summary>
            <param name="s">The string to check.</param>
            <returns>The index of the last line terminator.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.IStringService.CountLines(System.String)">
            <summary>
            Counts the number of lines in the passed text. (Note: Empty string has one line)
            This function uses Regex to find line terminators.
            </summary>
            <param name="text">The text to check.</param>
            <returns>The number of lines in the given text.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.IStringService.SplitLines(System.String,System.Boolean)">
            <summary>
            Splits a string containing line terminators into a string array.
            </summary>
            <param name="text">The string to split.</param>
            <param name="removeLastIfEmpty">If true, the last entry is removed if it is an empty string.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.IStringService.SplitCodeLine(System.String,System.Int32,System.String@,System.String@)">
            <summary>
            Splits the source code text (from a call to "TextDocument.GetLine(...)") into left and right segments, at the specified character offset.
            </summary>
            <param name="textLine">The source code text (from a call to "TextDocument.GetLine(...)") to split.</param>
            <param name="offset">The character offset into this line where the split should occur.</param>
            <param name="leftText">This output parameter is set to the text to the left of the split point.</param>
            <param name="rightText">This output parameter is set to the text to the right of the split point.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.IStringService.GetClosingWhiteSpaceCharCount(System.String)">
            <summary>
            Returns the number of closing white space characters (tabs and spaces) on the passed-in text.
            </summary>
            <param name="text">The text to check.</param>
            <returns>Returns the number of leading white space characters (tabs and spaces) found.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.IStringService.RemoveLastLineTerminator(System.String)">
            <summary>
            Removes last line terminator from the given string.
            </summary>
            <param name="s">The string that contains line terminator to remove.</param>
            <returns>String with removed last line terminator.</returns>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.ISynchronizationService">
            <summary>
            Synchronization service.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LanguageElementBuilder.Build(EnvDTE.CodeElement)">
            <summary>
            Converts given code model object to language element.
            </summary>
            <param name="element">The element to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LanguageElementBuilder.Build(EnvDTE.CodeElement,System.Boolean)">
            <summary>
            Converts given code model object to language element.
            </summary>
            <param name="element">The element to convert.</param>
            <param name="full">Pass true to build full tree.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LanguageElementBuilder.Build(DevExpress.CodeRush.StructuralParser.LanguageElementCollection,EnvDTE.CodeElement)">
            <summary>
            Converts given code element into language element and adds it
            to the given collection.
            </summary>
            <param name="collector">The collection to add converted element.</param>
            <param name="element">The element to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LanguageElementBuilder.BuildChildren(DevExpress.CodeRush.StructuralParser.LanguageElement,EnvDTE.CodeElements)">
            <summary>
            Converts all passed code elements to language elements and adds them
            to the passed language element.
            </summary>
            <param name="parent">The element to add children.</param>
            <param name="children">The elementsto convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LanguageElementBuilder.BuildChildren(DevExpress.CodeRush.StructuralParser.LanguageElement,EnvDTE.CodeElements,System.Boolean)">
            <summary>
            Converts all passed code elements to language elements and adds them
            to the passed language element.
            </summary>
            <param name="parent">The element to add children.</param>
            <param name="children">The elements to convert.</param>
            <param name="full">Pass true to build full tree.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LanguageElementBuilder.CompleteElement(DevExpress.CodeRush.StructuralParser.LanguageElement,EnvDTE.CodeElements)">
            <summary>
            Completes the given element adding only new children from the passed code elements collection.
            </summary>
            <param name="element">The element to complete.</param>
            <param name="children">The code elements collection to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LanguageElementBuilder.BuildChildren(DevExpress.CodeRush.StructuralParser.LanguageElement,EnvDTE.CodeElement)">
            <summary>
            Converts all child elements of the given CodeElement into language elements and 
            adds them to the passed language element.
            </summary>
            <param name="parent">The element to add children.</param>
            <param name="element">The element to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LanguageElementBuilder.BuildChildren(DevExpress.CodeRush.StructuralParser.LanguageElement,EnvDTE.CodeElement,System.Boolean)">
            <summary>
            Converts all child elements of the given CodeElement into language elements and 
            adds them to the passed language element.
            </summary>
            <param name="parent">The element to add children.</param>
            <param name="element">The element to convert.</param>
            <param name="full">Pass true to build full tree.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ElementConverter.Build(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Converts given element object to language element.
            </summary>
            <param name="element">The element to convert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ElementConverter.Build(DevExpress.CodeRush.StructuralParser.IElement,System.Boolean)">
            <summary>
            Converts given element object to language element.
            </summary>
            <param name="element">The element to convert.</param>
            <param name="buildNodes">Defines whether element nodes should be built.</param>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteAddressOfExpression">
            <summary>
            Address of expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAddressOfExpression.#ctor">
            <summary>
            Creates a new instance of LiteAddressOfExpression
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAddressOfExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteAddressOfExpression
            </summary>
            <param name="expression">The expression</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAddressOfExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAddressOfExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAddressOfExpression.SetExpression(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets expression for this element.
            </summary>
            <param name="expression">The expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAddressOfExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAddressOfExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAddressOfExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAddressOfExpression.Expression">
            <summary>
            Gets the detail expression.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAddressOfExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteArgumentDirectionExpression">
            <summary>
            Argument direction expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArgumentDirectionExpression.#ctor">
            <summary>
            Creates a new instance of LiteArgumentDirectionExpression
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArgumentDirectionExpression.#ctor(DevExpress.CodeRush.StructuralParser.ArgumentDirection,DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteArgumentDirectionExpression
            </summary>
            <param name="direction">The argument direction</param>
            <param name="expression">The detail expression</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArgumentDirectionExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArgumentDirectionExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArgumentDirectionExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArgumentDirectionExpression.SetExpression(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets element expression.
            </summary>
            <param name="expression">The expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArgumentDirectionExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArgumentDirectionExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArgumentDirectionExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteArgumentDirectionExpression.Direction">
            <summary>
            Gets argument direction.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteArgumentDirectionExpression.Expression">
            <summary>
            Gest argument direction expression.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteArgumentDirectionExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteArrayCreateExpression">
            <summary>
            Array creation expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArrayCreateExpression.#ctor">
            <summary>
            Creates a new instance of LiteArrayCreateExpression
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArrayCreateExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression,DevExpress.CodeRush.StructuralParser.LiteArrayInitializerExpression)">
            <summary>
            Creates a new instance of LiteArrayCreateExpression
            </summary>
            <param name="baseType">The base type</param>		
            <param name="initializer">The initialize expression</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArrayCreateExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArrayCreateExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArrayCreateExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArrayCreateExpression.SetBaseType(DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Sets expression base type.
            </summary>
            <param name="baseType">The base type to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArrayCreateExpression.SetInitializer(DevExpress.CodeRush.StructuralParser.LiteArrayInitializerExpression)">
            <summary>
            Sets expression initializer.
            </summary>
            <param name="initializer">The initializer to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArrayCreateExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArrayCreateExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArrayCreateExpression.AddDimension(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Adds dimension to this element.
            </summary>
            <param name="dimension">The dimension to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArrayCreateExpression.RemoveDimension(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Removes dimension from this element.
            </summary>
            <param name="dimension">The dimension to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArrayCreateExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteArrayCreateExpression.BaseType">
            <summary>
            Gets base type of the array.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteArrayCreateExpression.Dimensions">
            <summary>
            Gets array dimensions.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteArrayCreateExpression.Initializer">
            <summary>
            Gets array initializer expression.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteArrayCreateExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteArrayInitializerExpression">
            <summary>
            Array initializer expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArrayInitializerExpression.#ctor">
            <summary>
            Creates a new instance of LiteArrayInitializerExpression
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArrayInitializerExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArrayInitializerExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArrayInitializerExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArrayInitializerExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArrayInitializerExpression.AddInitializer(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Adds initializer to this element.
            </summary>
            <param name="initializer">The initializer to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArrayInitializerExpression.RemoveInitializer(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Removes initializer from this element.
            </summary>
            <param name="initializer">The initializer to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArrayInitializerExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArrayInitializerExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteArrayInitializerExpression.Initializers">
            <summary>
            Gets array initializers.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteArrayInitializerExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteArrayTypeReferenceExpression">
            <summary>
            Simple type reference expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArrayTypeReferenceExpression.#ctor">
            <summary>
            Creates new instance of LiteArrayTypeReferenceExpression.
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArrayTypeReferenceExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression,System.UInt16)">
            <summary>
            Creates new instance of LiteArrayTypeReferenceExpression.
            </summary>
            <param name="baseType">The base type of the expression.</param>
            <param name="rank">The rank of the array expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArrayTypeReferenceExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression,System.UInt16,DevExpress.CodeRush.StructuralParser.LiteExpression[])">
            <summary>
            Creates new instance of LiteArrayTypeReferenceExpression.
            </summary>
            <param name="baseType">The base type of the expression.</param>
            <param name="rank">The rank of the array expression.</param>
            <param name="bounds">The bounds of array expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArrayTypeReferenceExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArrayTypeReferenceExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArrayTypeReferenceExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArrayTypeReferenceExpression.SetBounds(DevExpress.CodeRush.StructuralParser.LiteExpression[])">
            <summary>
            Sets array creation bounds.
            </summary>
            <param name="bounds">The bounds of the array.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArrayTypeReferenceExpression.SetBaseType(DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Sets base type for this type reference expression.
            </summary>
            <param name="baseType">The base type of the expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArrayTypeReferenceExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArrayTypeReferenceExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArrayTypeReferenceExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArrayTypeReferenceExpression.AddTypeArgument(DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Adds type argument to this type reference expression.
            </summary>
            <param name="argument">The argument to add.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteArrayTypeReferenceExpression.BaseType">
            <summary>
            Gets base type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteArrayTypeReferenceExpression.Rank">
            <summary>
            Gets array rank.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteArrayTypeReferenceExpression.ArrayBounds">
            <summary>
            Gets array bound expressions.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteArrayTypeReferenceExpression.IsArrayType">
            <summary>
            Returns true if this type reference is array reference.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteArrayTypeReferenceExpression.TypeReferenceType">
            <summary>
            Gets type reference type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteAssignmentExpression">
            <summary>
            Assignment expression.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteBinaryOperatorExpression">
            <summary>
            Binary operator expression.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteOperatorExpression">
            <summary>
            Represents operator expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteOperatorExpression.#ctor">
            <summary>
            Creates a new instance of LiteOperatorExpression
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBinaryOperatorExpression.#ctor">
            <summary>
            Creates a new instance of LiteBinaryOperatorExpression
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBinaryOperatorExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression,DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteBinaryOperatorExpression
            </summary>
            <param name="leftSide">The left side expression.</param>
            <param name="rightSide">The right side expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBinaryOperatorExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBinaryOperatorExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBinaryOperatorExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBinaryOperatorExpression.SetLeftSide(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets left side.
            </summary>
            <param name="left">The expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBinaryOperatorExpression.SetRightSide(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets right side.
            </summary>
            <param name="right">The expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBinaryOperatorExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBinaryOperatorExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBinaryOperatorExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteBinaryOperatorExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteBinaryOperatorExpression.LeftSide">
            <summary>
            Gets or left operand of the expression.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteBinaryOperatorExpression.RightSide">
            <summary>
            Gets right operand of the expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAssignmentExpression.#ctor">
            <summary>
            Creates a new instance of LiteAssignmentExpression
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAssignmentExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression,DevExpress.CodeRush.StructuralParser.AssignmentOperatorType,DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteAssignmentExpression
            </summary>
            <param name="left">The left side part.</param>
            <param name="assignmentOperatorType">The operator type.</param>
            <param name="right">The right side part.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAssignmentExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAssignmentExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAssignmentExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAssignmentExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAssignmentExpression.AssignmentOperatorType">
            <summary>
            Gets or sets assignment operator type
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteAttributeVariableInitializer">
            <summary>
            Attribute variable initializer.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAttributeVariableInitializer.#ctor">
            <summary>
            Creates a new instance of LiteAttributeVariableInitializer
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAttributeVariableInitializer.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression,DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteAttributeVariableInitializer
            <param name="left">The left side expression</param>
            <param name="right">The left side expression</param>
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAttributeVariableInitializer.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAttributeVariableInitializer.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteBaseReferenceExpression">
            <summary>
            Base reference expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBaseReferenceExpression.#ctor">
            <summary>
            Creates a new instance of LiteBaseReferenceExpression
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBaseReferenceExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBaseReferenceExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBaseReferenceExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clone data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The clone options.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBaseReferenceExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBaseReferenceExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBaseReferenceExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteBaseReferenceExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteTypeCastExpression">
            <summary>
            Represents type cast expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeCastExpression.#ctor">
            <summary>
            Creates a new instance of LiteTypeCastExpression
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeCastExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression,DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteTypeCastExpression
            </summary>
            <param name="typeReference">The type reference expression</param>
            <param name="target">The target</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeCastExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeCastExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeCastExpression.SetTypeReference(DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Sets type reference expression.
            </summary>
            <param name="typeReference">The type reference expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeCastExpression.SetTarget(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets target type reference expression.
            </summary>
            <param name="target">The target expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeCastExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeCastExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeCastExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeCastExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeCastExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeCastExpression.TypeReference">
            <summary>
            Gets type to cast to.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeCastExpression.Target">
            <summary>
            Gets the expression being casted.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCastTargetExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression,DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteTypeCastExpression
            </summary>
            <param name="typeReference">The type reference expression.</param>
            <param name="target">The target</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCastTargetExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteCastTargetExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteCheckedExpression">
            <summary>
            Checked expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCheckedExpression.#ctor">
            <summary>
            Creates a new instance of LiteCheckedExpression
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCheckedExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteCheckedExpression
            </summary>
            <param name="expression">The checked expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCheckedExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCheckedExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCheckedExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCheckedExpression.SetExpression(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets element expression.
            </summary>
            <param name="expression">The expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCheckedExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCheckedExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCheckedExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteCheckedExpression.Expression">
            <summary>
            Gets detail expression.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteCheckedExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteComplexExpression.#ctor">
            <summary>
            Creates new instance of the ComplexExpression class.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteComplexExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteComplexExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteComplexExpression.AddExpression(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Adds expression to this element.
            </summary>
            <param name="expression">The expression to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteComplexExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteComplexExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteConditionalTypeCast">
            <summary>
            Represents conditional type cast expression.	
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConditionalTypeCast.#ctor">
            <summary>
            Creates a new instance of LiteConditionalTypeCast
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConditionalTypeCast.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression,DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteConditionalTypeCast
            </summary>
            <param name="left">The left side expression.</param>
            <param name="right">The right side expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConditionalTypeCast.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConditionalTypeCast.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clone data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConditionalTypeCast.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteConditionalTypeCast.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCTypeExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteCTypeExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDefaultValueExpression.#ctor">
            <summary>
            Creates a new instance of IDefaultValueExpression
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDefaultValueExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Creates a new instance of IDefaultValueExpression
            </summary>
            <param name="typeReference"></param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDefaultValueExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDefaultValueExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDefaultValueExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDefaultValueExpression.SetTypeReference(DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Sets type reference expression for the element.
            </summary>
            <param name="typeReference">The type reference to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDefaultValueExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDefaultValueExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDefaultValueExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteDefaultValueExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteDefaultValueExpression.TypeReference">
            <summary>
            Gets type reference expression.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteDeleteExpression">
            <summary>
            Represents delete expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDeleteExpression.#ctor">
            <summary>
            Creates new instance of LiteDeleteExpression class.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDeleteExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates new instance of LiteDeleteExpression class.
            </summary>
            <param name="expression">The expression to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDeleteExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDeleteExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDeleteExpression.SetExpression(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets expression.
            </summary>
            <param name="expression">The expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDeleteExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDeleteExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDeleteExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDeleteExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteDeleteExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteDeleteExpression.ImageIndex">
            <summary>
            Gets element image index.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteDeleteExpression.Expression">
            <summary>
            The expression to delete.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDirectCastExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteDirectCastExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteGlobalQualifiedAliasExpression">
            <summary>
            Represents qualified alias expression.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteQualifiedAliasExpression">
            <summary>
            Represents qualified alias expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQualifiedAliasExpression.#ctor">
            <summary>
            Creates a new instance of LiteQualifiedAliasExpression
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQualifiedAliasExpression.#ctor(System.String)">
            <summary>
            Creates a new instance of LiteQualifiedAliasExpression
            </summary>
            <param name="name">The alias name.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQualifiedAliasExpression.#ctor(System.String,System.Boolean)">
            <summary>
            Creates a new instance of LiteQualifiedAliasExpression
            </summary>
            <param name="name">The alias name.</param>
            <param name="isModified">The value determining if expression is modified.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQualifiedAliasExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteQualifiedAliasExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteQualifiedAliasExpression.IsGlobal">
            <summary>
            Returns true if this expresison is global alias.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteGlobalQualifiedAliasExpression.#ctor">
            <summary>
            Creates a new instance of LiteGlobalQualifiedAliasExpression
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteGlobalQualifiedAliasExpression.#ctor(System.Boolean)">
            <summary>
            Creates a new instance of LiteGlobalQualifiedAliasExpression
            </summary>
            <param name="isModified">The value determining if expression is modified.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteGlobalQualifiedAliasExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteGlobalQualifiedAliasExpression.IsGlobal">
            <summary>
            Returns true if this expresison is global alias.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteIndexerExpression">
            <summary>
            Indexer expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIndexerExpression.#ctor">
            <summary>
            Creates a new instance of LiteIndexerExpression
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIndexerExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteIndexerExpression
            </summary>
            <param name="source">The source of expression</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIndexerExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIndexerExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIndexerExpression.SetSource(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets source expression for this element.
            </summary>
            <param name="source">The source expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIndexerExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIndexerExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIndexerExpression.AddArgument(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Adds argument to this element.
            </summary>
            <param name="argument">The argument to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIndexerExpression.RemoveArgument(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Removes argument from this element.
            </summary>
            <param name="argument">The argument to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIndexerExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIndexerExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteIndexerExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteIndexerExpression.Arguments">
            <summary>
            Gets arguments passed to the indexer.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteIndexerExpression.Source">
            <summary>
            The source expression.
            </summary>		
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteIsExpression">
            <summary>
            Is expression.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteTypeCheckExpression">
            <summary>
            Represents type checking expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeCheckExpression.#ctor">
            <summary>
            Creates a new instance of LiteTypeCheckExpression
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeCheckExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression,DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteTypeCheckExpression
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeCheckExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeCheckExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeCheckExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIsExpression.#ctor">
            <summary>
            Creates a new instance of LiteIsExpression
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIsExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression,DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteIsExpression
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIsExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteIsExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteIsNotExpression">
            <summary>
            IsNot expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIsNotExpression.#ctor">
            <summary>
            Creates a new instance of LiteIsExpression
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIsNotExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression,DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteIsExpression
            </summary>
            <param name="expression">The expression for check</param>
            <param name="typeReference">LiteTypeReference expression for comparison</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIsNotExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIsNotExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteIsNotExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteLogicalInversionExpression">
            <summary>
            Logical inversion.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteUnaryOperatorExpression">
            <summary>
            Represents unary operator expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteUnaryOperatorExpression.#ctor">
            <summary>
            Creates a new instance of LiteUnaryOperatorExpression
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteUnaryOperatorExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression,System.Boolean,DevExpress.CodeRush.StructuralParser.UnaryOperatorType)">
            <summary>
            Creates a new instance of LiteUnaryOperatorExpression
            </summary>
            <param name="isPostOperator">The unary expresion</param>
            <param name="unaryExpression">The value determining if operator is postfix.</param>
            <param name="typeOperator">The unary expression type operator.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteUnaryOperatorExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteUnaryOperatorExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteUnaryOperatorExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteUnaryOperatorExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteUnaryOperatorExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteUnaryOperatorExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteUnaryOperatorExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteUnaryOperatorExpression.Expression">
            <summary>
            Gets unary expression.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteUnaryOperatorExpression.UnaryExpression">
            <summary>
            Gets unary expression.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteUnaryOperatorExpression.IsPostOperator">
            <summary>
            Returns true if this expression is post unary expression.
            Otherwise returns false.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteUnaryOperatorExpression.UnaryOperator">
            <summary>
            Gets or sets unary operator type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteLogicalInversionExpression.#ctor">
            <summary>
            Creates a new instance of LiteUnaryOperatorExpression
            </summary>				
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteLogicalInversionExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteUnaryOperatorExpression
            </summary>		
            <param name="unaryExpression">The unary expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteLogicalInversionExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression,System.Boolean)">
            <summary>
            Creates a new instance of LiteUnaryOperatorExpression
            </summary>		
            <param name="unaryExpression">The unary expression.</param>
            <param name="isPost">The value determining if operator is postfix.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteLogicalInversionExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteLogicalInversionExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteLogicalInversionExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteLogicalOperationExpression">
            <summary>
            Logical operation.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteLogicalOperationExpression.#ctor">
            <summary>
            Creates a new instance of LiteBinaryOperatorExpression
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteLogicalOperationExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression,DevExpress.CodeRush.StructuralParser.LogicalOperator,DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteBinaryOperatorExpression
            </summary>
            <param name="leftSide">The left side expression.</param>
            <param name="op">The logical operator of expression.</param>
            <param name="rightSide">The right side expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteLogicalOperationExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteLogicalOperationExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteLogicalOperationExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteLogicalOperationExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteLogicalOperationExpression.LogicalOperator">
            <summary>
            Gets logical operator.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMemberAccessExpression">
            <summary>
            Member access expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMemberAccessExpression.#ctor">
            <summary>
            Creates a new instance of LiteMemberAccessExpression
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMemberAccessExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMemberAccessExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMemberAccessExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clone data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The clone options.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMemberAccessExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMemberAccessExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMemberAccessExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMemberAccessExpression.ParentWith">
            <summary>
            Gets parent with statement.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMemberAccessExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMethodReferenceExpression">
            <summary>
            Method reference expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodReferenceExpression.#ctor">
            <summary>
            Creates a new instance of LiteReferenceExpression
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodReferenceExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression,System.String)">
            <summary>
            Creates a new instance of LiteReferenceExpression
            </summary>
            <param name="source">The source of the expression.</param>
            <param name="name">The name of the expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodReferenceExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodReferenceExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodReferenceExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodReferenceExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodReferenceExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMethodReferenceExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteNullCoalescingExpression">
            <summary>
            Null coalescing expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNullCoalescingExpression.#ctor">
            <summary>
            Creates a new instance of LiteBinaryOperatorExpression
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNullCoalescingExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression,DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteBinaryOperatorExpression
            </summary>
            <param name="leftSide">The left side expression.</param>
            <param name="rightSide">The right side expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNullCoalescingExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteNullCoalescingExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteObjectCreationExpression">
            <summary>
            Object creation expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteObjectCreationExpression.#ctor">
            <summary>
            Creates a new instance of LiteObjectCreationExpression
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteObjectCreationExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Creates a new instance of LiteObjectCreationExpression
            </summary>
            <param name="objectType"></param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteObjectCreationExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteObjectCreationExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteObjectCreationExpression.SetObjectType(DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Sets object type.
            </summary>
            <param name="objectType">The object type to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteObjectCreationExpression.SetObjectInitializer(DevExpress.CodeRush.StructuralParser.LiteObjectInitializerExpression)">
            <summary>
            Sets object intializer.
            </summary>
            <param name="objectInitializer">The object intializer  to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteObjectCreationExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteObjectCreationExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteObjectCreationExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteObjectCreationExpression.AddArgument(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Adds argument to this element.
            </summary>
            <param name="argument">The argument to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteObjectCreationExpression.RemoveArgument(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Removes argument from this element.
            </summary>
            <param name="argument">The argument to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteObjectCreationExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteObjectCreationExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteObjectCreationExpression.Arguments">
            <summary>
            Gets object creation expression arguments.
            </summary>		 
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteObjectCreationExpression.ObjectType">
            <summary>
            Gets type of the created object.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteParenthesizedExpression">
            <summary>
            Represents parens expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteParenthesizedExpression.#ctor">
            <summary>
            Creates a new instance of LiteParenthesizedExpression
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteParenthesizedExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteParenthesizedExpression
            </summary>
            <param name="expression"></param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteParenthesizedExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteParenthesizedExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteParenthesizedExpression.SetExpression(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets element expression.
            </summary>
            <param name="expression">The expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteParenthesizedExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteParenthesizedExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteParenthesizedExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteParenthesizedExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteParenthesizedExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteParenthesizedExpression.Expression">
            <summary>
            Gets detail expression in parens.
            </summary>	
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LitePointerTypeReferenceExpression">
            <summary>
            Pointer type reference expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LitePointerTypeReferenceExpression.#ctor">
            <summary>
            Creates new instance of LitePointerTypeReferenceExpression.
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LitePointerTypeReferenceExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Creates new instance of LitePointerTypeReferenceExpression.
            </summary>
            <param name="baseType">The base type of the expression.</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LitePointerTypeReferenceExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LitePointerTypeReferenceExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LitePointerTypeReferenceExpression.SetBaseType(DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Sets base type for this type reference expression.
            </summary>
            <param name="baseType">The base type of the expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LitePointerTypeReferenceExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LitePointerTypeReferenceExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LitePointerTypeReferenceExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LitePointerTypeReferenceExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LitePointerTypeReferenceExpression.AddTypeArgument(DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Adds type argument to this type reference expression.
            </summary>
            <param name="argument">The argument to add.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LitePointerTypeReferenceExpression.BaseType">
            <summary>
            Gets base type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LitePointerTypeReferenceExpression.ReferenceType">
            <summary>
            Gets or sets type reference type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LitePointerTypeReferenceExpression.TypeReferenceType">
            <summary>
            Gets or sets type reference type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LitePointerTypeReferenceExpression.IsPointerType">
            <summary>
            Returns true if this type reference is array pointer.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LitePointerTypeReferenceExpression.IsConst">
            <summary>
            Returns true if this type is constant.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LitePointerTypeReferenceExpression.IsVolatile">
            <summary>
            Returns true if this type is volatile.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LitePointerTypeReferenceExpression.IsReferenceType">
            <summary>
            Returns true if this type is reference type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LitePointerTypeReferenceExpression.IsManaged">
            <summary>
            Returns true if this type is managed type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LitePrimitiveExpression">
            <summary>
            Represents primitive expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LitePrimitiveExpression.#ctor">
            <summary>
            Creates a new instance of LitePrimitiveExpression
            </summary>    
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LitePrimitiveExpression.#ctor(DevExpress.CodeRush.StructuralParser.PrimitiveType)">
            <summary>
            Creates a new instance of LitePrimitiveExpression
            </summary>
            <param name="primitiveType"></param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LitePrimitiveExpression.#ctor(System.Object)">
            <summary>
            Creates a new instance of LitePrimitiveExpression
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LitePrimitiveExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LitePrimitiveExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LitePrimitiveExpression.Value">
            <summary>
            Gets element type.
            </summary>
            <summary>
            Gets primitive expression value.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LitePrimitiveExpression.PrimitiveType">
            <summary>
            Gets primitive type of this expression.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteStringPrimitiveExpression">
            <summary>
            Represents primitive expression.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteQualifiedGenericTypeReferenceExpression">
            <summary>
            Qualified generic type type reference expression.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteQualifiedTypeReferenceExpression">
            <summary>
            Qualified type reference expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQualifiedTypeReferenceExpression.#ctor">
            <summary>
            Creates new instance of LiteQualifiedTypeReferenceExpression.
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQualifiedTypeReferenceExpression.#ctor(System.String,DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Creates new instance of LiteQualifiedTypeReferenceExpression.
            </summary>
            <param name="name">The name of the expression.</param>
            <param name="baseType">The base type of the expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQualifiedTypeReferenceExpression.SetBaseType(DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Sets base type for this type reference expression.
            </summary>
            <param name="baseType">The base type of the expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQualifiedTypeReferenceExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQualifiedTypeReferenceExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQualifiedTypeReferenceExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQualifiedTypeReferenceExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQualifiedTypeReferenceExpression.SetSource(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets source expression.
            </summary>
            <param name="source">The source expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQualifiedTypeReferenceExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteQualifiedTypeReferenceExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteQualifiedTypeReferenceExpression.BaseType">
            <summary>
            Gets base type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteQualifiedTypeReferenceExpression.Source">
            <summary>
            Gets source expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQualifiedGenericTypeReferenceExpression.#ctor">
            <summary>
            Creates new instance of LiteQualifiedGenericTypeReferenceExpression.
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQualifiedGenericTypeReferenceExpression.#ctor(System.String,DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Creates new instance of LiteQualifiedGenericTypeReferenceExpression.
            </summary>
            <param name="name">The name of the expression.</param>
            <param name="baseType">The base type of the expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQualifiedGenericTypeReferenceExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQualifiedGenericTypeReferenceExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQualifiedGenericTypeReferenceExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQualifiedGenericTypeReferenceExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQualifiedGenericTypeReferenceExpression.AddTypeArgument(DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Adds type argument to this type reference expression.
            </summary>
            <param name="argument">The argument to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQualifiedGenericTypeReferenceExpression.AddTypeArgument(DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Adds type argument to the expression.
            </summary>
            <param name="argument">The type argument to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQualifiedGenericTypeReferenceExpression.RemoveTypeArgument(DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Removes type argument from the expression.
            </summary>
            <param name="argument">The type argument to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQualifiedGenericTypeReferenceExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteQualifiedGenericTypeReferenceExpression.TypeArguments">
            <summary>
            Returns type arguments for this reference.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteReDimExpression">
            <summary>
            ReDim expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteReDimExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteReDimExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteReDimExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteReDimExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteReDimExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteReDimExpression.AddModifier(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Adds modifier to this element.
            </summary>
            <param name="element">The element to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteReDimExpression.RemoveModifier(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Removes modifier from this element.
            </summary>
            <param name="element">The element to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteReDimExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteReDimExpression.Modifiers">
            <summary>
            Gets modifiers.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteReDimExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteRelationalOperationExpression">
            <summary>
            Represents relational operation expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteRelationalOperationExpression.#ctor">
            <summary>
            Creates a new instance of LiteRelationalOperationExpression
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteRelationalOperationExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression,DevExpress.CodeRush.StructuralParser.RelationalOperator,DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteRelationalOperationExpression
            </summary>
            <param name="leftSide">The left side expression.</param>
            <param name="op">The operator of expression.</param>
            <param name="rightSide">The right side expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteRelationalOperationExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteRelationalOperationExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteRelationalOperationExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteRelationalOperationExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteRelationalOperationExpression.RelationalOperator">
            <summary>
            Gets or sets relational operator.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteSimpleGenericTypeReferenceExpression">
            <summary>
            Simple generic type reference expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSimpleGenericTypeReferenceExpression.#ctor">
            <summary>
            Creates new instance of LiteSimpleGenericTypeReferenceExpression.
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSimpleGenericTypeReferenceExpression.#ctor(System.String)">
            <summary>
            Creates new instance of LiteSimpleGenericTypeReferenceExpression.
            </summary>
            <param name="name">The name of the expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSimpleGenericTypeReferenceExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSimpleGenericTypeReferenceExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSimpleGenericTypeReferenceExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSimpleGenericTypeReferenceExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSimpleGenericTypeReferenceExpression.AddTypeArgument(DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Adds type argument to this type reference expression.
            </summary>
            <param name="argument">The argument to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSimpleGenericTypeReferenceExpression.AddTypeArgument(DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Adds type argument to the expression.
            </summary>
            <param name="argument">The type argument to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSimpleGenericTypeReferenceExpression.RemoveTypeArgument(DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Removes type argument from the expression.
            </summary>
            <param name="argument">The type argument to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSimpleGenericTypeReferenceExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteSimpleGenericTypeReferenceExpression.TypeArguments">
            <summary>
            Returns type arguments for this reference.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteSizeOfExpression">
            <summary>
            Represents size of expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSizeOfExpression.#ctor">
            <summary>
            Creates a new instance of LiteSizeOfExpression
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSizeOfExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteSizeOfExpression
            </summary>
            <param name="typeReference"></param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSizeOfExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSizeOfExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSizeOfExpression.SetTypeReference(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets type reference expression.
            </summary>
            <param name="typeReference">The type reference to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSizeOfExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSizeOfExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSizeOfExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSizeOfExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteSizeOfExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteSizeOfExpression.TypeReference">
            <summary>
            Gets type reference expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypedElementReferenceExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypedElementReferenceExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypedElementReferenceExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteTypeOfExpression">
            <summary>
            Represents type of expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeOfExpression.#ctor">
            <summary>
            Creates a new instance of LiteTypeOfExpression
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeOfExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteTypeOfExpression
            </summary>
            <param name="typeReference"></param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeOfExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeOfExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeOfExpression.SetExpression(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets expression.
            </summary>
            <param name="expression">The expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeOfExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeOfExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeOfExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeOfExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeOfExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeOfExpression.TypeReference">
            <summary>
            Gets detail type reference expression.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteTypeOfIsExpression">
            <summary>
            Represents type check expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeOfIsExpression.#ctor">
            <summary>
            Creates a new instance of LiteTypeOfIsExpression
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeOfIsExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression,DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Creates a new instance of LiteTypeOfIsExpression
            </summary>
            <param name="expression">The expression to check</param>
            <param name="typeReference">The type to check</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeOfIsExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeOfIsExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeOfIsExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeOfIsExpression.Expression">
            <summary>
            Gets target expression.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeOfIsExpression.TypeReference">
            <summary>
            Gets target type reference expression to check.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpressionWrapper.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpressionWrapper.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpressionWrapper.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpressionWrapper.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpressionWrapper.AddTypeArgument(DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Adds type argument to this type reference expression.
            </summary>
            <param name="argument">The argument to add.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpressionWrapper.Name">
            <summary>
            Gets element name.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpressionWrapper.Ranges">
            <summary>
            Gets start location.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpressionWrapper.BaseType">
            <summary>
            Gets base type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpressionWrapper.Rank">
            <summary>
            Gets array rank.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpressionWrapper.ArrayBounds">
            <summary>
            Gets array bounds for this expression.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpressionWrapper.IsArrayType">
            <summary>
            Returns true if this type reference is array.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpressionWrapper.IsPointerType">
            <summary>
            Returns true if this type reference is pointer.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpressionWrapper.IsConst">
            <summary>
            Returns true if this type is constant.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpressionWrapper.IsVolatile">
            <summary>
            Returns true if this type is volatile pointer.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpressionWrapper.IsReferenceType">
            <summary>
            Returns true if this type is reference type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpressionWrapper.IsManaged">
            <summary>
            Returns true if this type is managed pointer type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpressionWrapper.TypeReferenceType">
            <summary>
            Gets type reference type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpressionWrapper.IsNullable">
            <summary>
            Returns true if this expression has nullable modifier.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpressionWrapper.IsGeneric">
            <summary>
            Returns true if this expression references to generic type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpressionWrapper.IsDynamic">
            <summary>
            Returns true if this expression is dynamic type reference.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpressionWrapper.TypeArguments">
            <summary>
            Gets type arguments.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpressionWrapper.ResolvePoint">
            <summary>
            Gets resolve point stored inside the element.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteUnaryDecrementExpression">
            <summary>
            Unary decrement expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteUnaryDecrementExpression.#ctor">
            <summary>
            Creates a new instance of LiteUnaryIncrementExpression
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteUnaryDecrementExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteUnaryIncrementExpression
            </summary>
            <param name="unaryExpression">The LiteExpression</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteUnaryDecrementExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression,System.Boolean)">
            <summary>
            Creates a new instance of LiteUnaryIncrementExpression
            </summary>
            <param name="unaryExpression">The LiteExpression</param>
            <param name="isPost">Is post flag</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteUnaryDecrementExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteUnaryDecrementExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteUnaryIncrementExpression">
            <summary>
            Unary increment expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteUnaryIncrementExpression.#ctor">
            <summary>
            Creates a new instance of LiteUnaryIncrementExpression
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteUnaryIncrementExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteUnaryIncrementExpression
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteUnaryIncrementExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression,System.Boolean)">
            <summary>
            Creates a new instance of LiteUnaryIncrementExpression
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteUnaryIncrementExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteUnaryIncrementExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteUncheckedExpression">
            <summary>
            Represents unchecked expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteUncheckedExpression.#ctor">
            <summary>
            Creates a new instance of LiteUncheckedExpression
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteUncheckedExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteUncheckedExpression
            </summary>
            <param name="expression">The detail expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteUncheckedExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteUncheckedExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteUncheckedExpression.SetExpression(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets element expression.
            </summary>
            <param name="expression">The expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteUncheckedExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteUncheckedExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteUncheckedExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteUncheckedExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteUncheckedExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteUncheckedExpression.Expression">
            <summary>
            Gets detail expression.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteHtmlAttribute">
            <summary>
            HTML Attribute.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteXmlAttribute">
            <summary>
            XML Attribute.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlAttribute.#ctor">
            <summary>
            Creates a new instance of LiteXmlAttribute
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlAttribute.#ctor(System.String)">
            <summary>
            Creates a new instance of LiteXmlAttribute
            </summary>		
            <param name="value">The value of attribute.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlAttribute.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of LiteXmlAttribute
            </summary>		
            <param name="name">The name of attribute.</param>
            <param name="value">The value of attribute.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlAttribute.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlAttribute.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlAttribute.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlAttribute.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlAttribute.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlAttribute.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteXmlAttribute.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteHtmlAttribute.#ctor">
            <summary>
            Creates a new instance of LiteHtmlAttribute
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteHtmlAttribute.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteHtmlAttribute
            </summary>
            <param name="inlineExpression">The inline expression</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteHtmlAttribute.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression,System.String)">
            <summary>
            Creates a new instance of LiteHtmlAttribute
            </summary>
            <param name="inlineExpression">The inline expression</param>
            <param name="value">Attribute value.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteHtmlAttribute.#ctor(System.String,DevExpress.CodeRush.StructuralParser.LiteExpression,System.String)">
            <summary>
            Creates a new instance of LiteHtmlAttribute
            </summary>
            <param name="name">Attribute name.</param>
            <param name="inlineExpression">The inline expression</param>
            <param name="value">Attribute value.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteHtmlAttribute.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteHtmlAttribute.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteHtmlAttribute.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteHtmlAttribute.SetInlineExpression(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets inline expression.
            </summary>
            <param name="inlineExpression">The inline expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteHtmlAttribute.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteHtmlAttribute.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteHtmlAttribute.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteHtmlAttribute.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteHtmlAttribute.DevExpress#CodeRush#StructuralParser#IHtmlAttribute#InlineExpression">
            <summary>
            Gets inline expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBaseXmlNode.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBaseXmlNode.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBaseXmlNode.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBaseXmlNode.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBaseXmlNode.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteBaseXmlNode.XmlNodeType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlAttributeDeclaration.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlAttributeDeclaration.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clone data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The element clone options.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlAttributeDeclaration.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlAttributeDeclaration.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteXmlAttributeDeclaration.XmlNodeType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlAttributeListDeclaration.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlAttributeListDeclaration.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlAttributeListDeclaration.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlAttributeListDeclaration.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlAttributeListDeclaration.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlAttributeListDeclaration.SetAttributesDecl(DevExpress.CodeRush.StructuralParser.LiteElementCollection)">
            <summary>
            Sets AttributesDecl to this element.
            </summary>
            <param name="coll">The attributes to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlAttributeListDeclaration.AddAttributesDecl(DevExpress.CodeRush.StructuralParser.LiteElementCollection)">
            <summary>
            Adds AttributesDecl to the element.
            </summary>
            <param name="coll">The AttributesDecl to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlAttributeListDeclaration.AddAttributeDecl(DevExpress.CodeRush.StructuralParser.LiteXmlAttributeDeclaration)">
            <summary>
            Adds attribute to the member.
            </summary>
            <param name="element">The LiteAttributeElement to add.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteXmlAttributeListDeclaration.XmlNodeType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlCharacterData.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlCharacterData.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteXmlCharacterData.XmlNodeType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCharReference.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteCharReference.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteCharReference.XmlNodeType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNewExternalIDSystemLink.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNewExternalIDSystemLink.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNewExternalIDSystemLink.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNewExternalIDSystemLink.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteNewExternalIDSystemLink.XmlNodeType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNewExternalPublicLink.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNewExternalPublicLink.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNewExternalPublicLink.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNewExternalPublicLink.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteNewExternalPublicLink.XmlNodeType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlAnyContentSpec.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlAnyContentSpec.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlAnyContentSpec.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteXmlAnyContentSpec.XmlNodeType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlChildrenContentSpec.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlChildrenContentSpec.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlChildrenContentSpec.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlChildrenContentSpec.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlChildrenContentSpec.SetSource(DevExpress.CodeRush.StructuralParser.LiteXmlContentParticle)">
            <summary>
            Sets Source of this element.
            </summary>
            <param name="source">The source to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlChildrenContentSpec.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteXmlChildrenContentSpec.XmlNodeType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlEmptyContentSpec.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlEmptyContentSpec.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlEmptyContentSpec.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteXmlEmptyContentSpec.XmlNodeType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlMixedContentSpec.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlMixedContentSpec.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteXmlMixedContentSpec.XmlNodeType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlNamedContentParticle.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlNamedContentParticle.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlNamedContentParticle.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlNamedContentParticle.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlNamedContentParticle.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteXmlNamedContentParticle.XmlNodeType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlSequencedContentParticle.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlSequencedContentParticle.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlSequencedContentParticle.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlSequencedContentParticle.SetParticles(DevExpress.CodeRush.StructuralParser.LiteElementCollection)">
            <summary>
            Sets AttributesDecl to this element.
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlSequencedContentParticle.AddParticles(DevExpress.CodeRush.StructuralParser.LiteElementCollection)">
            <summary>
            Adds AttributesDecl to the element.
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlSequencedContentParticle.AddParticle(DevExpress.CodeRush.StructuralParser.LiteXmlContentParticle)">
            <summary>
            Adds attribute to the member.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlSequencedContentParticle.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlChoiceContentParticle.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlChoiceContentParticle.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteXmlChoiceContentParticle.XmlNodeType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlSequenceContentParticale.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlSequenceContentParticale.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteXmlSequenceContentParticale.XmlNodeType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlName.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlName.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteXmlName.XmlNodeType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteAspCodeEmbedding">
            <summary>
            AspCodeEmbeddeing.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAspCodeEmbedding.#ctor">
            <summary>
            Creates a new instance of LiteAspCodeEmbedding
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAspCodeEmbedding.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAspCodeEmbedding.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAspCodeEmbedding.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAspCodeEmbedding.AddChild(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Adds element to the member.
            </summary>
            <param name="element">The LiteElement to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAspCodeEmbedding.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAspCodeEmbedding.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAspCodeEmbedding.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAspCodeEmbedding.CodeChildren">
            <summary>
            Gets children elements located in body of current statement.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAspCodeEmbedding.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteAliasReference">
            <summary>
            Represents namespace reference element.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteNamespaceReference">
            <summary>
            Represents namespace reference element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNamespaceReference.#ctor">
            <summary>
            Creates a new instance of LiteNamespaceReference
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNamespaceReference.#ctor(System.String,DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteNamespaceReference
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNamespaceReference.#ctor(DevExpress.CodeRush.StructuralParser.LiteElementReferenceExpression,DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteNamespaceReference
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNamespaceReference.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNamespaceReference.SetNameExpression(DevExpress.CodeRush.StructuralParser.LiteElementReferenceExpression)">
            <summary>
            Sets alias expression.
            </summary>
            <param name="expression">The name expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNamespaceReference.SetExpression(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets expression.
            </summary>
            <param name="expression">The expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNamespaceReference.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNamespaceReference.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNamespaceReference.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteNamespaceReference.IsAlias">
            <summary>
            Returns true if namespace reference is alias.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteNamespaceReference.NameExpression">
            <summary>
            Gets name expression.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteNamespaceReference.Expression">
            <summary>
            Gets expression.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteNamespaceReference.Name">
            <summary>
            Gets element name.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteNamespaceReference.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAliasReference.#ctor(DevExpress.CodeRush.StructuralParser.LiteElementReferenceExpression,DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteNamespaceReference
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAliasReference.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAliasReference.IsAlias">
            <summary>
            Returns true if namespace reference is alias.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteElementHelper">
            <summary>
            Contains utility methods for all lite elements.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElementHelper.AddElement(DevExpress.CodeRush.StructuralParser.LiteElement,System.Collections.IList,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Adds element to the given node list and sets it's parent.
            </summary>
            <param name="parent">The parent element.</param>
            <param name="list">The target node list.</param>
            <param name="element">The element to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElementHelper.AddElements(DevExpress.CodeRush.StructuralParser.LiteElement,System.Collections.IList,DevExpress.CodeRush.StructuralParser.LiteElementCollection)">
            <summary>
            Adds elements to the given node list and sets it's parent.
            </summary>
            <param name="parent">The parent element.</param>
            <param name="list">The target node list.</param>
            <param name="elements">The elements to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElementHelper.AddElements(DevExpress.CodeRush.StructuralParser.LiteElement,System.Collections.IList,DevExpress.CodeRush.StructuralParser.NodeList)">
            <summary>
            Adds elements to the given node list and sets it's parent.
            </summary>
            <param name="parent">The parent element.</param>
            <param name="list">The target node list.</param>
            <param name="elements">The elements to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElementHelper.RemoveElement(DevExpress.CodeRush.StructuralParser.LiteElementCollection,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Removes element from the given node list and sets it's parent to null.
            </summary>
            <param name="list">The target node list.</param>
            <param name="element">The element to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElementHelper.RemoveElement(DevExpress.CodeRush.StructuralParser.NodeList,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Removes element from the given node list and sets it's parent to null.
            </summary>
            <param name="list">The target node list.</param>
            <param name="element">The element to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElementHelper.InsertElement(DevExpress.CodeRush.StructuralParser.LiteElement,System.Collections.IList,System.Int32,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Inserts element a new element at the specified index and sets its parent.
            </summary>
            <param name="parent">The parent element.</param>
            <param name="list">The target node list.</param>
            <param name="index">The index.</param>
            <param name="element">The element to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElementHelper.Contains(DevExpress.CodeRush.StructuralParser.LiteElementCollection,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Returns true if the given list contains specified element.
            </summary>
            <param name="list">The list to check.</param>
            <param name="element">The element to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElementHelper.Contains(DevExpress.CodeRush.StructuralParser.NodeList,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Returns true if the given list contains specified element.
            </summary>
            <param name="list">The list to check.</param>
            <param name="element">The element to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElementHelper.Replace(DevExpress.CodeRush.StructuralParser.LiteElementCollection,DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces old element with new one.
            </summary>
            <param name="list">The list to use.</param>
            <param name="oldElement">The element to replace.</param>
            <param name="newElement">The new element.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElementHelper.Replace(DevExpress.CodeRush.StructuralParser.NodeList,DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces old element with new one.
            </summary>
            <param name="list">The list to use.</param>
            <param name="oldElement">The element to replace.</param>
            <param name="newElement">The new element.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElementHelper.BitIsSet(System.UInt16,System.Byte)">
            <summary>
            Defines if specified bit is set.
            </summary>
            <param name="flag">The flag to check the bit in.</param>
            <param name="bit">The bit to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElementHelper.ChangeBit(System.UInt16@,System.Byte,System.Boolean)">
            <summary>
            Changes specified bit inside the flag.
            </summary>
            <param name="flag">The flag.</param>
            <param name="bit">The bit to change.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElementHelper.BitIsSet(System.Byte,System.Byte)">
            <summary>
            Defines if specified bit is set.
            </summary>
            <param name="flag">The flag to check the bit in.</param>
            <param name="bit">The bit to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElementHelper.ChangeBit(System.Byte@,System.Byte,System.Boolean)">
            <summary>
            Changes specified bit inside the flag.
            </summary>
            <param name="flag">The flag.</param>
            <param name="bit">The bit to change.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteNamespaceElement">
            <summary>
            Represents lite weight namespace.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNamespaceElement.#ctor">
            <summary>
            Creates new instance of LiteNamespaceElement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNamespaceElement.#ctor(System.String)">
            <summary>
            Creates new instance of LiteNamespaceElement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNamespaceElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNamespaceElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNamespaceElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNamespaceElement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNamespaceElement.AddType(DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Adds type element to the namespace.
            </summary>
            <param name="type">The type to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNamespaceElement.RemoveType(DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Removes type element from the namespace.
            </summary>
            <param name="type">The type to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNamespaceElement.AddNamespace(DevExpress.CodeRush.StructuralParser.LiteNamespaceElement)">
            <summary>
            Adds namespace element to the namespace.
            </summary>
            <param name="aNamespace">The namespace to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNamespaceElement.RemoveNamespace(DevExpress.CodeRush.StructuralParser.LiteNamespaceElement)">
            <summary>
            Removes namespace element from the namespace.
            </summary>
            <param name="aNamespace">The namespace to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNamespaceElement.AddGlobal(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Adds global declaration to the namespace.
            </summary>
            <param name="global">The global declaration to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNamespaceElement.RemoveGlobal(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Removes global declaration from the namespace.
            </summary>
            <param name="global">The global declaration to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNamespaceElement.AddChild(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Adds element to the namespace.
            </summary>
            <param name="element">The LiteElement to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNamespaceElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteNamespaceElement.ChildrenList">
            <summary>
            Gets all namespace children.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteNamespaceElement.TypesList">
            <summary>
            Gets type elements list.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteNamespaceElement.NamespacesList">
            <summary>
            Gets namespace elements list.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteNamespaceElement.GlobalsList">
            <summary>
            Gets namespace global declarations list.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteNamespaceElement.CodeChildren">
            <summary>
            Gets children elements located in body of current statement.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteNamespaceElement.Name">
            <summary>
            Gets namespace name.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteNamespaceElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteNamespaceElement.ImageIndex">
            <summary>
            Gets element image index.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteNamespaceElement.Namespaces">
            <summary>
            Gets child namespaces.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteNamespaceElement.Types">
            <summary>
            Gets namespace types.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteNamespaceElement.AllNamespaces">
            <summary>
            Gets enumeration for all namespaces.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteNamespaceElement.AllTypes">
            <summary>
            Gets enumeration for all types.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteNamespaceElement.Globals">
            <summary>
            Gets namespace global declarations.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteXmlNamespaceReference">
            <summary>
            Represents xml-namespace reference element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlNamespaceReference.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlNamespaceReference.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteXmlNamespaceReference.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteAliasDeclaration">
            <summary>
            Represents namespace reference element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAliasDeclaration.#ctor(System.String,DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteNamespaceReference
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAliasDeclaration.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAliasDeclaration.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAliasDeclaration.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAliasDeclaration.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAliasDeclaration.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAliasDeclaration.ImageIndex">
            <summary>
            Gets element image index.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAliasDeclaration.AliasName">
            <summary>
            Gets alias declaration name.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAliasDeclaration.Name">
            <summary>
            Gets alias declaration name.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAliasDeclaration.Expression">
            <summary>
            Gets alias expression.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteConstFieldElement">
            <summary>
            Represents a field.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteInitializedFieldElement">
            <summary>
            Represents a field.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteFieldElement">
            <summary>
            Represents a field.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFieldElement.#ctor">
            <summary>
            Creates a new instance of LiteFieldElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFieldElement.#ctor(System.String,DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Creates a new instance of LiteFieldElement
            </summary>
            <param name="name">The name of the event.</param>
            <param name="type">The type of the event.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFieldElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFieldElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFieldElement.SetType(DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Sets type of this element.
            </summary>
            <param name="type">The type to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFieldElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFieldElement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFieldElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteFieldElement.Type">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteFieldElement.Modifiers">
            <summary>
            Gets element array modifiers.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteFieldElement.IsConst">
            <summary>
            Defines if field is constant
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteFieldElement.Expression">
            <summary>
            Get initialization expression
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteFieldElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteFieldElement.IsLocal">
            <summary>
            Returns true if variable is local.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteFieldElement.IsField">
            <summary>
            Returns true if variable is field.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteFieldElement.IsParameter">
            <summary>
            Returns true if variable is parameter.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteFieldElement.IsTypeDef">
            <summary>
            Gets or sets value indicating that this 
            element is a typedef declaration.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteFieldElement.IsAspxTag">
            <summary>
            Returns true if this variable was created from Aspx tag.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteFieldElement.IsRunAtServer">
            <summary>
            Returns true if this variable was created from Aspx tag and has runat=server attribute.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteFieldElement.IsObjectCreationInit">
            <summary>
            Returns true if this field is object creation initialization.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteFieldElement.IsFixedSizeBuffer">
            <summary>
            Returns true if this element is a fixed size buffer declaration.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteFieldElement.IsBitField">
            <summary>
            Returns true if variable is bit field.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteFieldElement.BitFieldSize">
            <summary>
            Gets bit field size.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteFieldElement.IsVolatile">
            <summary>
            Returns true if variable is volatile.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteFieldElement.IsWithEvents">
            <summary>
            Returns true if variable is WithEvents (Visual Basic).
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteFieldElement.NodeLink">
            <summary>
            Gets element node link for this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteFieldElement.HasNodeLink">
            <summary>
            Returns true if this element has element node link.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteInitializedFieldElement.#ctor">
            <summary>
            Creates a new instance of LiteInitializedFieldElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteInitializedFieldElement.#ctor(System.String,DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression,DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteInitializedFieldElement
            </summary>
            <param name="name">The name of the event.</param>
            <param name="type">The type of the event.</param>
            <param name="expression">The initialization expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteInitializedFieldElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteInitializedFieldElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteInitializedFieldElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteInitializedFieldElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteInitializedFieldElement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteInitializedFieldElement.Expression">
            <summary>
            Get initialization expression
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteInitializedFieldElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConstFieldElement.#ctor">
            <summary>
            Creates a new instance of LiteConstFieldElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConstFieldElement.#ctor(System.String,DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression,DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteConstFieldElement
            </summary>
            <param name="name">The name of the event.</param>
            <param name="type">The type of the event.</param>
            <param name="expression">The initialization expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConstFieldElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteConstFieldElement.IsConst">
            <summary>
            Defines if field is constant
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteConstFieldElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteConstructorElement">
            <summary>
            Represents a method.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMethodElement">
            <summary>
            Represents a method.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodElement.#ctor">
            <summary>
            Creates a new instance of LiteMethodElement
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodElement.#ctor(System.String)">
            <summary>
            Creates a new instance of LiteMethodElement
            </summary>
            <param name="name">The name of the event.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodElement.GetDescendantChildrenOverride">
            <summary>
            Returns all descendant children of this element.
            This method is called by GetAllChildren method before
            ChildrenList is iterated over.
            </summary>
            <returns>Returns all descendant children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodElement.AddParameter(DevExpress.CodeRush.StructuralParser.LiteParameterElement)">
            <summary>
            Adds parameter to this element.
            </summary>
            <param name="parameter">The parameter to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodElement.AddParameters(DevExpress.CodeRush.StructuralParser.LiteParameterElementCollection)">
            <summary>
            Adds parameters to this element.
            </summary>
            <param name="parameters">The parameters to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodElement.SetParameters(DevExpress.CodeRush.StructuralParser.LiteParameterElementCollection)">
            <summary>
            Sets parameters to this element.
            </summary>
            <param name="parameters">The parameters to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodElement.RemoveParameter(DevExpress.CodeRush.StructuralParser.LiteParameterElement)">
            <summary>
            Removes parameter from this element.
            </summary>
            <param name="parameter">The parameter to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodElement.AddTypeParameter(DevExpress.CodeRush.StructuralParser.LiteTypeParameterElement)">
            <summary>
            Adds type parameter to this element.
            </summary>
            <param name="typeParameter">The type parameter to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodElement.AddTypeParameters(DevExpress.CodeRush.StructuralParser.LiteTypeParameterCollection)">
            <summary>
            Adds type parameters to this element.
            </summary>
            <param name="typeParameters">The type parameters to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodElement.SetTypeParameters(DevExpress.CodeRush.StructuralParser.LiteTypeParameterCollection)">
            <summary>
            Sets type parameters.
            </summary>
            <param name="typeParameters">Parameters to set</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodElement.RemoveTypeParameter(DevExpress.CodeRush.StructuralParser.LiteTypeParameterElement)">
            <summary>
            Removes type parameter from the element.
            </summary>
            <param name="typeParameter">The element to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodElement.AddHandlesExpression(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Adds handles expression to this element.
            </summary>
            <param name="expr">The handles expression to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodElement.AddHandlesExpressions(DevExpress.CodeRush.StructuralParser.LiteExpressionCollection)">
            <summary>
            Adds handles expressions to this element.
            </summary>
            <param name="expressions">The type parameters to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodElement.SetHandlesExpressions(DevExpress.CodeRush.StructuralParser.LiteExpressionCollection)">
            <summary>
            Sets handles expressions.
            </summary>
            <param name="expressions">Handles expressions to set</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodElement.AddImplementsExpression(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Adds implements expression to this element.
            </summary>
            <param name="expr">The implements expression to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodElement.AddImplementsExpressions(DevExpress.CodeRush.StructuralParser.LiteExpressionCollection)">
            <summary>
            Adds implements expressions to this element.
            </summary>
            <param name="expressions">The implements expressions to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodElement.AddImplementsExpressions(DevExpress.CodeRush.StructuralParser.LiteExpression[])">
            <summary>
            Adds implements expressions to this element.
            </summary>
            <param name="expressions">The implements expressions to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodElement.SetImplementsExpressions(DevExpress.CodeRush.StructuralParser.LiteExpressionCollection)">
            <summary>
            Sets implements expressions.
            </summary>
            <param name="expressions">implements expressions to set</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodElement.RemoveTypeParameter(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Removes handles expression from the element.
            </summary>
            <param name="expression">The handles expression to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodElement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodElement.SetExtension(System.Boolean)">
            <summary>
            Sets extension flag for current element .
            </summary>
            <param name="value">The value to set</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodElement.IsExtensionMethod">
            <summary>
            Returns true if method is extension.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodElement.IsMainProcedure">
            <summary>
            Determines whether this method is the main prodedure of an application.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodElement.IsInitializeComponent">
            <summary>
            Determines whether this method is InitializeComponent method
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMethodElement.IsWebMethod">
            <summary>
            Return true if the specified member is a web method.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMethodElement.Type">
            <summary>
            Gets element type.
            </summary>		 
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMethodElement.Parameters">
            <summary>
            Gets element parameters.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMethodElement.HasImplicitVariable">
            <summary>
            Returns true if element has Implcit variable
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMethodElement.ImplicitVariable">
            <summary>
            Returns implicit variable of method
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMethodElement.TypeParameters">
            <summary>
            Gets type parameters.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMethodElement.HandlesExpressions">
            <summary>
            Gets handles expressions.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMethodElement.ImplementsExpressions">
            <summary>
            Gets implemented expression 
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMethodElement.IsGeneric">
            <summary>
            Returns true if element is generic.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMethodElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMethodElement.IsConstructor">
            <summary>
            Returns true if element is constructor
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMethodElement.IsSerializationConstructor">
            <summary>
            Returns true if the element is a serialization constructor.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMethodElement.IsDestructor">
            <summary>
            Returns true if element is destructor
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMethodElement.IsTypeInitializer">
            <summary>
            Returns true if element is instance constructor
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMethodElement.IsActivatedGeneric">
            <summary>
            Returns true if element is activated.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMethodElement.IsMemberFunctionConst">
            <summary>
            Gets or sets member function const flag. 
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMethodElement.IsExplicitInterfaceMember">
            <summary>
            Returns true if this member is explicitly declared interface member.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMethodElement.MethodType">
            <summary>
            The type of this method (e.g., Constructor, Destructor, Procedure or Function)
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMethodElement.GenericTemplate">
            <summary>
            Returns template element that was used to activate generic.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMethodElement.IsClassOperator">
            <summary>
            Returns true if this method is operator override.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMethodElement.IsImplicitCast">
            <summary>
            Returns true if this method defines implicit type cast.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMethodElement.IsExplicitCast">
            <summary>
            Returns true if this method defines explicit type cast.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMethodElement.IsAsynchronous">
            <summary>
            True if this method is asynchronous.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConstructorElement.#ctor">
            <summary>
            Creates a new instance of LiteConstructorElement
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConstructorElement.#ctor(System.String)">
            <summary>
            Creates a new instance of LiteMethodElement
            </summary>
            <param name="name">The name of the event.</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConstructorElement.#ctor(System.String,DevExpress.CodeRush.StructuralParser.LiteConstructorInitializerElement)">
            <summary>
            Creates a new instance of LiteMethodElement
            </summary>
            <param name="name">The name of the constructor.</param>		
            <param name="initializer">The initializer of the constructor.</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConstructorElement.SetInitializer(DevExpress.CodeRush.StructuralParser.LiteConstructorInitializerElement)">
            <summary>
            Sets constructor initializer.
            </summary>
            <param name="initializer">The initializer to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConstructorElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConstructorElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConstructorElement.GetDescendantChildrenOverride">
            <summary>
            Returns all descendant children of this element.
            This method is called by GetAllChildren method before
            ChildrenList is iterated over.
            </summary>
            <returns>Returns all descendant children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConstructorElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteConstructorElement.IsConstructor">
            <summary>
            Returns true if element is constructor
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteConstructorElement.MethodType">
            <summary>
            The type of this method (e.g., Constructor, Destructor, Procedure or Function)
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteConstructorElement.Initializer">
            <summary>
            Gets or sets constructor initializer element.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteConstructorPrototype">
            <summary>
            LiteConstructorPrototype represent constructor prototype.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConstructorPrototype.#ctor">
            <summary>
            Creates a new instance of LiteConstructorElement
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConstructorPrototype.#ctor(System.String)">
            <summary>
            Creates a new instance of LiteConstructorElement
            </summary>
            <param name="name">The name of the event.</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConstructorPrototype.#ctor(System.String,DevExpress.CodeRush.StructuralParser.LiteConstructorInitializerElement)">
            <summary>
            Creates a new instance of LiteMethodElement
            </summary>
            <param name="name">The name of the constructor.</param>		
            <param name="initializer">The initializer of the constructor.</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConstructorPrototype.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteConstructorPrototype.ElementType">
            <summary>
            Gets type of this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConstructorInitializerElement.#ctor">
            <summary>
            Creates a new instance of LiteConstructorInitializerElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConstructorInitializerElement.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression,DevExpress.CodeRush.StructuralParser.InitializerTarget)">
            <summary>
            Creates a new instance of LiteConstructorInitializerElement
            </summary>
            <param name="expression">The expression for the initializer.</param>
            <param name="target">The target.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConstructorInitializerElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConstructorInitializerElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConstructorInitializerElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConstructorInitializerElement.AddArgument(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Adds argument to this element.
            </summary>
            <param name="argument">The argument to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConstructorInitializerElement.RemoveArgument(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Removes argument from this element.
            </summary>
            <param name="argument">The argument to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConstructorInitializerElement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConstructorInitializerElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteConstructorInitializerElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteConstructorInitializerElement.Expression">
            <summary>
            Gets expression of current initializer.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteConstructorInitializerElement.Arguments">
            <summary>
            Gets arguments passed to method call expression.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteDestructorElement">
            <summary>
            Represents a method.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDestructorElement.#ctor">
            <summary>
            Creates a new instance of LiteDestructorElementt
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDestructorElement.#ctor(System.String)">
            <summary>
            Creates a new instance of LiteDestructorElement
            </summary>
            <param name="name">The name of the event.</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDestructorElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteDestructorElement.IsDestructor">
            <summary>
            Returns true if element is destructor
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteDestructorElement.MethodType">
            <summary>
            The type of this method (e.g., Constructor, Destructor, Procedure or Function)
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteDestructorPrototype">
            <summary>
            LiteDestructorPrototype represent constructor prototype.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDestructorPrototype.#ctor">
            <summary>
            Creates a new instance of LiteDestructorPrototype
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDestructorPrototype.#ctor(System.String)">
            <summary>
            Creates a new instance of LiteDestructorPrototype
            </summary>
            <param name="name">The name of the event.</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDestructorPrototype.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteDestructorPrototype.ElementType">
            <summary>
            Gets type of this element.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteFinalizerElement">
            <summary>
            Represents a method.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFinalizerElement.#ctor">
            <summary>
            Creates a new instance of LiteFinalizerElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFinalizerElement.#ctor(System.String)">
            <summary>
            Creates a new instance of LiteFinalizerElement
            </summary>
            <param name="name">The name of the event.</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFinalizerElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteFinalizerElement.MethodType">
            <summary>
            The type of this method (e.g., Constructor, Destructor, Procedure or Function)
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteFinalizerPrototype">
            <summary>
            LiteDestructorPrototype represent constructor prototype.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFinalizerPrototype.#ctor">
            <summary>
            Creates a new instance of LiteFinalizerPrototype
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFinalizerPrototype.#ctor(System.String)">
            <summary>
            Creates a new instance of LiteFinalizerPrototype
            </summary>
            <param name="name">The name of the event.</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFinalizerPrototype.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteFinalizerPrototype.ElementType">
            <summary>
            Gets type of this element.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteEnumElement">
            <summary>
            Represents a enum element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteEnumElement.#ctor">
            <summary>
            Creates a new instance of LiteEnumElement
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteEnumElement.#ctor(System.String)">
            <summary>
            Creates a new instance of LiteEnumElement
            </summary>
            <param name="name">Name of enum element</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteEnumElement.#ctor(System.String,DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteEnumElement		
            </summary>
            <param name="name">Name of enum element</param>
            <param name="valueExpression">Value expression of current element</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteEnumElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteEnumElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteEnumElement.SetValueExpression(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets value expression of this element.
            </summary>
            <param name="valueExpression">The value to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteEnumElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteEnumElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteEnumElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteEnumElement.ValueExpression">
            <summary>
            Gets value expression for current enum element.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteEventElement">
            <summary>
            Represents an event.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteEventElement.#ctor">
            <summary>
            Creates a new instance of LiteEventElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteEventElement.#ctor(System.String,DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Creates a new instance of LiteEventElement
            </summary>
            <param name="name">The name of the event.</param>
            <param name="type">The type of the event.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteEventElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteEventElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteEventElement.SetAddMethod(DevExpress.CodeRush.StructuralParser.LiteMethodElement)">
            <summary>
            Sets add method.
            </summary>
            <param name="method">The method to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteEventElement.SetRemoveMethod(DevExpress.CodeRush.StructuralParser.LiteMethodElement)">
            <summary>
            Sets remove method.
            </summary>
            <param name="method">The method to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteEventElement.SetType(DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Sets type of this element.
            </summary>
            <param name="type">The type to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteEventElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteEventElement.AddParameter(DevExpress.CodeRush.StructuralParser.LiteParameterElement)">
            <summary>
            Adds parameter to this element.
            </summary>
            <param name="parameter">The parameter to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteEventElement.AddParameters(DevExpress.CodeRush.StructuralParser.LiteParameterElementCollection)">
            <summary>
            Adds parameters to this element.
            </summary>
            <param name="parameters">The parameters to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteEventElement.SetParameters(DevExpress.CodeRush.StructuralParser.LiteParameterElementCollection)">
            <summary>
            Sets parameters to this element.
            </summary>
            <param name="parameters">The parameters to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteEventElement.RemoveParameter(DevExpress.CodeRush.StructuralParser.LiteParameterElement)">
            <summary>
            Removes parameter from this element.
            </summary>
            <param name="parameter">The parameter to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteEventElement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteEventElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteEventElement.Type">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteEventElement.Parameters">
            <summary>
            Gets element parameters.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteEventElement.AddMethod">
            <summary>
            Gets or sets Add method for event
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteEventElement.RemoveMethod">
            <summary>
            Gets or sets Remove method for event
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteEventElement.IsExplicitInterfaceMember">
            <summary>
            Returns true if this member is explicitly declared interface member.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteEventElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteAspxFieldElement">
            <summary>
            Represents a field.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAspxFieldElement.#ctor">
            <summary>
            Creates a new instance of LiteFieldElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAspxFieldElement.#ctor(System.String,DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Creates a new instance of LiteFieldElement
            </summary>
            <param name="name">The name of the event.</param>
            <param name="type">The type of the event.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAspxFieldElement.#ctor(System.String,DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression,DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Creates a new instance of LiteFieldElement
            </summary>
            <param name="name">The name of the event.</param>
            <param name="type">The type of the event.</param>
            <param name="nodeLink">The node link.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAspxFieldElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAspxFieldElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAspxFieldElement.AddElement(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Adds child to this element.
            </summary>
            <param name="child">The child to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAspxFieldElement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAspxFieldElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAspxFieldElement.NodeLink">
            <summary>
            Gets element node link for this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAspxFieldElement.IsAspxTag">
            <summary>
            Returns true if this variable was created from Aspx tag.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAspxFieldElement.IsRunAtServer">
            <summary>
            Returns true if this variable was created from Aspx tag and has runat=server attribute.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteFunctionElement">
            <summary>
            Summary description for LiteFunctionElement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFunctionElement.#ctor">
            <summary>
            Creates a new instance of LiteFunctionElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFunctionElement.#ctor(System.String,DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Creates a new instance of LiteFunctionElement
            </summary>
            <param name="name">The name of the event.</param>
            <param name="type">The type of the event.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFunctionElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFunctionElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFunctionElement.SetType(DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Sets type of this element.
            </summary>
            <param name="type">The type to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFunctionElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The clone options.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFunctionElement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFunctionElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteFunctionElement.Type">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteFunctionElement.MethodType">
            <summary>
            The type of this method (e.g., Constructor, Destructor, Procedure or Function)
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteFunctionPrototype">
            <summary>
            LiteFunctionPrototype represent function prototype.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFunctionPrototype.#ctor">
            <summary>
            Creates a new instance of LiteFunctionPrototype
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFunctionPrototype.#ctor(System.String,DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Creates a new instance of LiteFunctionPrototype
            </summary>
            <param name="name">The name of the event.</param>
            <param name="type">The type of the event.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFunctionPrototype.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteFunctionPrototype.ElementType">
            <summary>
            Gets type of this element.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteIndexerPropertyElement">
            <summary>
            Represents a property.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LitePropertyElement">
            <summary>
            Represents a property.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LitePropertyElement.#ctor">
            <summary>
            Creates a new instance of LitePropertyElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LitePropertyElement.#ctor(System.String,DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Creates a new instance of LitePropertyElement
            </summary>
            <param name="name">The name of the event.</param>
            <param name="type">The type of the event.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LitePropertyElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LitePropertyElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LitePropertyElement.SetGetMethod(DevExpress.CodeRush.StructuralParser.LiteMethodElement)">
            <summary>
            Sets add method.
            </summary>
            <param name="method">The method to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LitePropertyElement.SetSetMethod(DevExpress.CodeRush.StructuralParser.LiteMethodElement)">
            <summary>
            Sets remove method.
            </summary>
            <param name="method">The method to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LitePropertyElement.SetType(DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Sets type of this element.
            </summary>
            <param name="type">The type to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LitePropertyElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LitePropertyElement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LitePropertyElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LitePropertyElement.IsIndexed">
            <summary>
            Retruns true if property is indexer.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LitePropertyElement.IsExplicitInterfaceMember">
            <summary>
            Returns true if this member is explicitly declared interface member.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LitePropertyElement.IsAutoImplemented">
            <summary>
            Returns true is property is autoimplemented.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LitePropertyElement.Type">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LitePropertyElement.GetMethod">
            <summary>
            Returns property getter.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LitePropertyElement.SetMethod">
            <summary>
            Returns property setter.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LitePropertyElement.Parameters">
            <summary>
            Gets element parameters.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LitePropertyElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIndexerPropertyElement.#ctor">
            <summary>
            Creates a new instance of LitePropertyElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIndexerPropertyElement.#ctor(System.String,DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Creates a new instance of LitePropertyElement
            </summary>
            <param name="name">The name of the event.</param>
            <param name="type">The type of the event.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIndexerPropertyElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIndexerPropertyElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIndexerPropertyElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIndexerPropertyElement.AddParameter(DevExpress.CodeRush.StructuralParser.LiteParameterElement)">
            <summary>
            Adds parameter to this element.
            </summary>
            <param name="parameter">The parameter to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIndexerPropertyElement.AddParameters(DevExpress.CodeRush.StructuralParser.LiteParameterElementCollection)">
            <summary>
            Adds parameters to this element.
            </summary>
            <param name="parameters">The parameters to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIndexerPropertyElement.SetParameters(DevExpress.CodeRush.StructuralParser.LiteParameterElementCollection)">
            <summary>
            Sets parameters to this element.
            </summary>
            <param name="parameters">The parameters to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIndexerPropertyElement.RemoveParameter(DevExpress.CodeRush.StructuralParser.LiteParameterElement)">
            <summary>
            Removes parameter from this element.
            </summary>
            <param name="parameter">The parameter to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIndexerPropertyElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIndexerPropertyElement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteIndexerPropertyElement.IsIndexed">
            <summary>
            Retruns true if property is indexer.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteIndexerPropertyElement.Parameters">
            <summary>
            Gets element parameters.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMethodGroupElement">
            <summary>
            Represents a method.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodGroupElement.#ctor">
            <summary>
            Creates a new instance of LiteMethodGroupElement
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodGroupElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodGroupElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodGroupElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodGroupElement.AddElement(DevExpress.CodeRush.StructuralParser.IMemberElement)">
            <summary>
            Adds child element to this method group.
            </summary>
            <param name="element">The element to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodGroupElement.AddElements(DevExpress.CodeRush.StructuralParser.LiteMemberElementCollection)">
            <summary>
            Adds child elements to this method group.
            </summary>
            <param name="elements">The elements to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodGroupElement.AddElements(DevExpress.CodeRush.StructuralParser.IElementCollection)">
            <summary>
            Adds child elements to this method group.
            </summary>
            <param name="elements">The elements to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodGroupElement.SetElements(DevExpress.CodeRush.StructuralParser.LiteMemberElementCollection)">
            <summary>
            Sets child elements for this method group.
            </summary>
            <param name="elements">The elements to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodGroupElement.RemoveElement(DevExpress.CodeRush.StructuralParser.IMemberElement)">
            <summary>
            Removes element from this method group.
            </summary>
            <param name="element">The element to remove.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMethodGroupElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMethodGroupElement.Elements">
            <summary>
            Gets all method group elements.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteParameterElement">
            <summary>
            Represents a parameter.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteParameterElement.#ctor">
            <summary>
            Creates a new instance of LiteParameterElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteParameterElement.#ctor(System.String,DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Creates a new instance of LiteParameterElement
            </summary>
            <param name="name">The name of the event.</param>
            <param name="type">The type of the event.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteParameterElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteParameterElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteParameterElement.SetType(DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Sets type of this element.
            </summary>
            <param name="type">The type to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteParameterElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteParameterElement.AddAttribute(DevExpress.CodeRush.StructuralParser.LiteAttributeElement)">
            <summary>
            Adds attribute to the member.
            </summary>
            <param name="attr">The LiteAttributeElement to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteParameterElement.AddAttributes(DevExpress.CodeRush.StructuralParser.LiteAttributeElementCollection)">
            <summary>
            Adds attributes to the member.
            </summary>
            <param name="attributes">The attributes to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteParameterElement.SetAttributes(DevExpress.CodeRush.StructuralParser.LiteAttributeElementCollection)">
            <summary>
            Sets attributes to this element.
            </summary>
            <param name="attributes">The attributes to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteParameterElement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteParameterElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteParameterElement.Is(System.String)">
            <summary>
            Returns true if Type of this element is the same as, or 
            descends from, the specified type.
            Returns false otherwise.
            </summary>
            <param name="fullTypeName">Full type name of the type to check.</param>
            <returns>
            Returns true if Type of this element is the same as, or 
            descends from, the specified type.
            Returns false otherwise.
            </returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteParameterElement.Is(DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Returns true if type of this element is the same as, or descends from, 
            the specified ITypeElement.
            Returns false otherwise.
            </summary>
            <param name="type">The ITypeElement to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteParameterElement.Is(System.Type)">
            <summary>
            Returns true if type of this element is the same as, or descends from, 
            the specified Type.
            Returns false otherwise.
            </summary>
            <param name="type">The Type to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteParameterElement.Is(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,System.String)">
            <summary>
            Returns true if this type element is the same as, or descends from, 
            the specified type.
            Returns false otherwise.
            </summary>
            <param name="resolver">The source tree resolver instance to use.</param>
            <param name="fullTypeName">The full name (e.g., "System.Drawing.Point") of 
            the type to compare against.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteParameterElement.Name">
            <summary>
            Gets element name.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteParameterElement.Type">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteParameterElement.Direction">
            <summary>
            Gets or sets argument direction for parameter
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteParameterElement.IsOptional">
            <summary>
            Gets or sets value determining if parameter is optional.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteParameterElement.IsParamArray">
            <summary>
            Returns true if parameter is defined as param array.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteParameterElement.IsArgList">
            <summary>
            Returns true if parameter is __arglist.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteParameterElement.IsImplicit">
            <summary>
            Returns true if this declaration is implicit.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteParameterElement.IsReturnedValue">
            <summary>
            Returns true if this declaration is used as return value.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteParameterElement.IsAspxTag">
            <summary>
            Returns true if this variable was created from Aspx tag.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteParameterElement.IsRunAtServer">
            <summary>
            Returns true if this variable was created from Aspx tag and has runat=server attribute.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteParameterElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteParameterElement.IsTypeDef">
            <summary>
            Gets or sets value indicating that this 
            element is a typedef declaration.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteOptionalParameterElement.#ctor">
            <summary>
            Creates a new instance of LiteOptionalParameterElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteOptionalParameterElement.#ctor(System.String,DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Creates a new instance of LiteOptionalParameterElement
            </summary>
            <param name="name">The name of the parameter.</param>
            <param name="type">The type of the parameter.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteOptionalParameterElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteOptionalParameterElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteOptionalParameterElement.SetExpression(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets type of this element.
            </summary>
            <param name="expression">The type to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteOptionalParameterElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteOptionalParameterElement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteOptionalParameterElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteOptionalParameterElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteOptionalParameterElement.IsOptional">
            <summary>
            Gets or sets value determining if parameter is optional.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteOptionalParameterElement.DefaultValue">
            <summary>
            Gets or sets default value of the optional parameter.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteProcedureElement">
            <summary>
            LiteProcedureElement represent method with no return type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteProcedureElement.#ctor">
            <summary>
            Creates a new instance of LiteProcedureElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteProcedureElement.#ctor(System.String)">
            <summary>
            Creates a new instance of LiteProcedureElement
            </summary>
            <param name="name">The name of the event.</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteProcedureElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteProcedurePrototype">
            <summary>
            LiteProcedurePrototype represent method prototype with no return type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteProcedurePrototype.#ctor">
            <summary>
            Creates a new instance of LiteProcedureElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteProcedurePrototype.#ctor(System.String)">
            <summary>
            Creates a new instance of LiteProcedureElement
            </summary>
            <param name="name">The name of the event.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteProcedurePrototype.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteProcedurePrototype.ElementType">
            <summary>
            Gets type of this element.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteTypeInitializerElement">
            <summary>
            Represents a method.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeInitializerElement.#ctor">
            <summary>
            Creates a new instance of LiteTypeInitializerElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeInitializerElement.#ctor(System.String)">
            <summary>
            Creates a new instance of LiteTypeInitializerElement
            </summary>
            <param name="name">The name of the event.</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteTypeInitializerElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeInitializerElement.IsTypeInitializer">
            <summary>
            Returns true if element is instance constructor
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteTypeInitializerElement.IsConstructor">
            <summary>
            Returns true if element is constructor
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteAnonymousTypeReferenceExpression">
            <summary>
            Anonymous type reference expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAnonymousTypeReferenceExpression.#ctor">
            <summary>
            Creates new instance of LiteSimpleTypeReferenceExpression.
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAnonymousTypeReferenceExpression.#ctor(DevExpress.CodeRush.StructuralParser.IAnonymousTypeElement)">
            <summary>
            Creates new instance of LiteSimpleTypeReferenceExpression.
            </summary>
            <param name="anonymousType">Anonymous type element.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAnonymousTypeReferenceExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAnonymousTypeReferenceExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAnonymousTypeReferenceExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAnonymousTypeReferenceExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAnonymousTypeReferenceExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAnonymousTypeReferenceExpression.AddTypeArgument(DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Adds type argument to this type reference expression.
            </summary>
            <param name="argument">The argument to add.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAnonymousTypeReferenceExpression.Name">
            <summary>
            Gets name of the simple type reference.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAnonymousTypeReferenceExpression.AnonymousType">
            <summary>
            Gets or sets anonymous type for this type reference.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteEqualsExpression.#ctor">
            <summary>
            Creates a new instance of LiteEqualsExpression
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteEqualsExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression,DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteEqualsExpression
            </summary>
            <param name="leftSide">The left side expression.</param>
            <param name="rightSide">The right side expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteEqualsExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteEqualsExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteEqualsExpression.ImageIndex">
            <summary>
            Gets element index.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMemberInitializerExpression.#ctor">
            <summary>
            Creates insrance of LiteMemberInitializerExpression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMemberInitializerExpression.#ctor(System.String,DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates insrance of LiteMemberInitializerExpression.
            </summary>
            <param name="name"></param>
            <param name="value">The value of expression</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMemberInitializerExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMemberInitializerExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clone data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The element clone options.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMemberInitializerExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMemberInitializerExpression.Name">
            <summary>
            Gets or sets name of this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clone data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The element clone options.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the specified element visitor.
            </summary>
            <param name="visitor">The visitor to accept.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlExpression.AddChild(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Adds element to the member.
            </summary>
            <param name="element">The LiteElement to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces old element with the new one.
            </summary>
            <param name="oldElement">The old element to remove.</param>
            <param name="newElement">The new element to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteXmlExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteXmlExpression.CodeChildren">
            <summary>
            Gets children elements located in body of current statement.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteXmlExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteXmlExpression.ImageIndex">
            <summary>
            Gets element index.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFromExpression.#ctor">
            <summary>
            Creates new instance of LiteFromExpression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFromExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFromExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFromExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFromExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFromExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFromExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteFromExpression.AddInExpression(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Adds in-expression to this element.
            </summary>
            <param name="expression">The in-expression to add.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteFromExpression.InExpressions">
            <summary>
            Gets in expressions for current element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteFromExpression.ImageIndex">
            <summary>
            Gets element image index.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAggregateExpression.#ctor">
            <summary>
            Creates new instance of LiteFromExpression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAggregateExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAggregateExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAggregateExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAggregateExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAggregateExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAggregateExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAggregateExpression.AddQueryOperator(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Adds query operator expression to this element.
            </summary>
            <param name="expression">The expression to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAggregateExpression.AddQueryOperators(DevExpress.CodeRush.StructuralParser.LiteExpressionCollection)">
            <summary>
            Adds query operator expressions to this element.
            </summary>
            <param name="expressions">The expressions to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAggregateExpression.AddQueryOperators(DevExpress.CodeRush.StructuralParser.LiteExpression[])">
            <summary>
            Adds query operator expressions to this element.
            </summary>
            <param name="expressions">The expressions to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAggregateExpression.AddIntoElement(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Adds into element to this element.
            </summary>
            <param name="element">The element to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAggregateExpression.AddIntoElements(DevExpress.CodeRush.StructuralParser.IElementCollection)">
            <summary>
            Adds into elements to this element.
            </summary>
            <param name="elements">The elements to add.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAggregateExpression.QueryOperators">
            <summary>
            Gets child query operators for current element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAggregateExpression.IntoElements">
            <summary>
            Gets aggregate into elements.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAggregateExpression.ElementType">
            <summary>
            Gets or sets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAggregateExpression.ImageIndex">
            <summary>
            Gets element image index.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteGroupByExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteGroupByExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteGroupByExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteGroupByExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteGroupByExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteGroupByExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteGroupByExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteGroupByExpression.ImageIndex">
            <summary>
            Gets element image index.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteInExpression.#ctor">
            <summary>
            Creates new instance of LiteInExpression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteInExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteInExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteInExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteInExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteInExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteInExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteInExpression.ImageIndex">
            <summary>
            Gets element image index.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIntoExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIntoExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIntoExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIntoExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIntoExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteIntoExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteIntoExpression.IntoTarget">
            <summary>
            Gets into target for current element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteIntoExpression.ImageIndex">
            <summary>
            Gets element image index.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteJoinExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteJoinExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteJoinExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteJoinExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteJoinExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteJoinExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteJoinExpression.ImageIndex">
            <summary>
            Gets element image index.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteJoinIntoExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteJoinIntoExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteJoinIntoExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteJoinIntoExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteJoinIntoExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteJoinIntoExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteJoinIntoExpression.ImageIndex">
            <summary>
            Gets element image index.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteLetExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteLetExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteLetExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteLetExpression.AddDeclaration(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Adds declaration  to the Declarations list.
            </summary>
            <param name="element">The declaration to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteLetExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteLetExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteLetExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteLetExpression.ImageIndex">
            <summary>
            Gets element image index.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteOrderByExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteOrderByExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteOrderByExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteOrderByExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteOrderByExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteOrderByExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteOrderByExpression.AddOrdering(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Adds ordering to this element.
            </summary>
            <param name="ordering">The ordering to add.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteOrderByExpression.Orderings">
            <summary>
            Gets order expressions.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteOrderByExpression.ImageIndex">
            <summary>
            Gets element image index.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteOrderingExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteOrderingExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteOrderingExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteOrderingExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteOrderingExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteOrderingExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteOrderingExpression.Ordering">
            <summary>
            Gets ordering for current expression.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteOrderingExpression.Order">
            <summary>
            Gets order type for current expression.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteOrderingExpression.ImageIndex">
            <summary>
            Gets element image index.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQueryExpression.SetTranslation(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets expression.
            </summary>
            <param name="expression">The expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQueryExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQueryExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQueryExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQueryExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQueryExpression.AddChild(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Adds element to the member.
            </summary>
            <param name="element">The LiteElement to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQueryExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves type of this expression.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQueryExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQueryExpression.ToString">
            <summary>
            Gets string representation for this expression.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteQueryExpression.CodeChildren">
            <summary>
            Gets children elements located in body of current statement.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteQueryExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteQueryExpression.ImageIndex">
            <summary>
            Gets element image index.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteQueryExpression.Translation">
            <summary>
            Gets query expression translation.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSelectExpression.AddReturnedElement(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Adds returned expression to this element.
            </summary>
            <param name="element">The clause to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSelectExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSelectExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSelectExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSelectExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSelectExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteSelectExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteSelectExpression.ReturnedElements">
            <summary>
            Gets select return elements.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteSelectExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteSelectExpression.ImageIndex">
            <summary>
            Gets element image index.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteWhereExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteWhereExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteWhereExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteWhereExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteWhereExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteWhereExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteWhereExpression.WhereClause">
            <summary>
            Gets where clause for current expression.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteWhereExpression.ImageIndex">
            <summary>
            Gets element image index.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteExtensionMethodParam.#ctor">
            <summary>
            Creates a new instance of LiteExtensionMethodParam
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteExtensionMethodParam.#ctor(System.String,DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Creates a new instance of LiteExtensionMethodParam
            </summary>
            <param name="name">The name of the parameter.</param>
            <param name="type">The type of the parameter.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteExtensionMethodParam.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteExtensionMethodParam.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteInitializedVariableStatement">
            <summary>
            Represents initialized varialbe statement.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteVariableDeclarationStatement">
            <summary>
            Represents lite variable declaration statement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteVariableDeclarationStatement.#ctor">
            <summary>
            Creates a new instance of LiteFieldElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteVariableDeclarationStatement.#ctor(System.String,DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Creates a new instance of LiteFieldElement
            </summary>
            <param name="name">The name of the event.</param>
            <param name="type">The type of the event.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteVariableDeclarationStatement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteVariableDeclarationStatement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteVariableDeclarationStatement.SetType(DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Sets type of this element.
            </summary>
            <param name="type">The type to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteVariableDeclarationStatement.SetIterationExpression(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets iteration expression.
            </summary>
            <param name="iteration">The expresion to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteVariableDeclarationStatement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteVariableDeclarationStatement.SetNameQualifier(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets name qualifier.
            </summary>
            <param name="expression">The expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteVariableDeclarationStatement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteVariableDeclarationStatement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteVariableDeclarationStatement.Is(System.String)">
            <summary>
            Returns true if Type of this element is the same as, or 
            descends from, the specified type.
            Returns false otherwise.
            </summary>
            <param name="fullTypeName">Full type name of the type to check.</param>
            <returns>
            Returns true if Type of this element is the same as, or 
            descends from, the specified type.
            Returns false otherwise.
            </returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteVariableDeclarationStatement.Is(DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Returns true if type of this element is the same as, or descends from, 
            the specified ITypeElement.
            Returns false otherwise.
            </summary>
            <param name="type">The ITypeElement to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteVariableDeclarationStatement.Is(System.Type)">
            <summary>
            Returns true if type of this element is the same as, or descends from, 
            the specified Type.
            Returns false otherwise.
            </summary>
            <param name="type">The Type to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteVariableDeclarationStatement.Is(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,System.String)">
            <summary>
            Returns true if this type element is the same as, or descends from, 
            the specified type.
            Returns false otherwise.
            </summary>
            <param name="resolver">The source tree resolver instance to use.</param>
            <param name="fullTypeName">The full name (e.g., "System.Drawing.Point") of 
            the type to compare against.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteVariableDeclarationStatement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteVariableDeclarationStatement.Type">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteVariableDeclarationStatement.IsConst">
            <summary>
            Defines if field is constant
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteVariableDeclarationStatement.Expression">
            <summary>
            Get initialization expression
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteVariableDeclarationStatement.IsImplicit">
            <summary>
            Returns true if this declaration is implicit.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteVariableDeclarationStatement.IsReturnedValue">
            <summary>
            Returns true if this declaration is used as return value.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteVariableDeclarationStatement.IsLocal">
            <summary>
            Returns true if variable is local.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteVariableDeclarationStatement.IsField">
            <summary>
            Returns true if variable is field.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteVariableDeclarationStatement.IsParameter">
            <summary>
            Returns true if variable is parameter.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteVariableDeclarationStatement.IsTypeDef">
            <summary>
            Gets or sets value indicating that this 
            element is a typedef declaration.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteVariableDeclarationStatement.IsObjectCreationInit">
            <summary>
            Returns true if this field is object creation initialization.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteVariableDeclarationStatement.IsAspxTag">
            <summary>
            Returns true if this variable was created from Aspx tag.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteVariableDeclarationStatement.IsRunAtServer">
            <summary>
            Returns true if this variable was created from Aspx tag and has runat=server attribute.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteVariableDeclarationStatement.IsFixedSizeBuffer">
            <summary>
            Returns true if this element is a fixed size buffer declaration.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteVariableDeclarationStatement.IsBitField">
            <summary>
            Returns true if variable is bit field.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteVariableDeclarationStatement.BitFieldSize">
            <summary>
            Gets bit field size.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteVariableDeclarationStatement.IsVolatile">
            <summary>
            Returns true if variable is volatile.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteVariableDeclarationStatement.NameQualifier">
            <summary>
            Gets or sets name qualifier.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteVariableDeclarationStatement.HasIterationExpression">
            <summary>
            Returns true if this variabe is used as iteration variable, e.g. inside for each loop.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteVariableDeclarationStatement.IterationExpression">
            <summary>
            Returns iteration expression, e.g. inside for each loop.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteInitializedVariableStatement.#ctor">
            <summary>
            Creates a new instance of LiteInitializedFieldElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteInitializedVariableStatement.#ctor(System.String,DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression,DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteInitializedFieldElement
            </summary>
            <param name="name">The name of the event.</param>
            <param name="type">The type of the event.</param>
            <param name="expression">The initialization expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteInitializedVariableStatement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteInitializedVariableStatement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteInitializedVariableStatement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteInitializedVariableStatement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteInitializedVariableStatement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteInitializedVariableStatement.Expression">
            <summary>
            Get initialization expression
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteInitializedVariableStatement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteImplicitVariableStatement.#ctor">
            <summary>
            Creates a new instance of LiteImplicitVariableStatement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteImplicitVariableStatement.#ctor(System.String)">
            <summary>
            Creates a new instance of LiteImplicitVariableStatement
            </summary>
            <param name="name">The name of the event.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteImplicitVariableStatement.#ctor(System.String,DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteImplicitVariableStatement
            </summary>
            <param name="name">The name of the event.</param>
            <param name="expression">The initialization expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteImplicitVariableStatement.#ctor(System.String,DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression,DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteImplicitVariableStatement
            </summary>
            <param name="name">The name of the event.</param>
            <param name="type">The type of the event.</param>
            <param name="expression">The initialization expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteImplicitVariableStatement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteImplicitVariableStatement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteImplicitVariableStatement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteLambdaImplicitlyTypedParam.#ctor">
            <summary>
            Creates a new instance of LiteLambdaImplicitlyTypedParam
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteLambdaImplicitlyTypedParam.#ctor(System.String)">
            <summary>
            Creates a new instance of LiteLambdaImplicitlyTypedParam
            </summary>
            <param name="name">The name of the parameter</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteLambdaImplicitlyTypedParam.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteLambdaImplicitlyTypedParam.ElementType">
            <summary>		
            Gets element type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteQueryIdent.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteAddHandlerStatement">
            <summary>
            Represents add handler statement.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteHandlerStatement">
            <summary>
            Base class for add/remove handler statements.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteHandlerStatement.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression,DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteHandlerStatement
            </summary>
            <param name="expression">The element expression.</param>
            <param name="addressOfExpression">The address of expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteHandlerStatement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteHandlerStatement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteHandlerStatement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteHandlerStatement.SetExpression(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets element expression.
            </summary>
            <param name="expression">The expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteHandlerStatement.SetAddressOfExpression(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets address of expression.
            </summary>
            <param name="expression">The expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteHandlerStatement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteHandlerStatement.Expression">
            <summary>
            Gets handler expression.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteHandlerStatement.AddressExpression">
            <summary>
            Gets handler address of expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAddHandlerStatement.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression,DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteHandlerStatement
            </summary>
            <param name="expression">The element expression.</param>
            <param name="addressOfExpression">The address of expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAddHandlerStatement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAddHandlerStatement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteAssignmentStatement">
            <summary>
            Assignment statement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAssignmentStatement.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression,DevExpress.CodeRush.StructuralParser.AssignmentOperatorType,DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteAssignmentStatement
            </summary>
            <param name="leftSide">The assignment left side.</param>
            <param name="assignmentOperator">The assignment operator type.</param>
            <param name="expression">The assignment right side expession..</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAssignmentStatement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAssignmentStatement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAssignmentStatement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAssignmentStatement.SetLeftSide(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets left side.
            </summary>
            <param name="expression">The expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAssignmentStatement.SetExpression(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets element expression.
            </summary>
            <param name="expression">The expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAssignmentStatement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAssignmentStatement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAssignmentStatement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAssignmentStatement.ImageIndex">
            <summary>
            Gets element image index.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAssignmentStatement.LeftSide">
            <summary>
            Gets assignment left side expression.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAssignmentStatement.AssignmentOperator">
            <summary>
            Gets assignment operator type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAssignmentStatement.Expression">
            <summary>
            Gets assignment right side expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBitFieldConst.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBitFieldConst.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBitFieldConst.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBitFieldConst.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBitFieldConst.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBitFieldVariable.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBitFieldVariable.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBitFieldVariable.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBitFieldVariable.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBitFieldVariable.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBitFieldVolatile.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBitFieldVolatile.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBitFieldVolatile.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBitFieldVolatile.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteBitFieldVolatile.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteConstDeclarationStatement">
            <summary>
            Represents lite const declaration statement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConstDeclarationStatement.#ctor">
            <summary>
            Creates a new instance of LiteConstFieldElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConstDeclarationStatement.#ctor(System.String,DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression,DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteConstFieldElement
            </summary>
            <param name="name">The name of the event.</param>
            <param name="type">The type of the event.</param>
            <param name="expression">The initialization expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteConstDeclarationStatement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteConstDeclarationStatement.IsConst">
            <summary>
            Defines if field is constant
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteConstDeclarationStatement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteInitializedVolatileStatement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteInitializedVolatileStatement.IsVolatile">
            <summary>
            Returns true if variable is volatile.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMethodCallStatement">
            <summary>
            Represents lite method call statement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodCallStatement.#ctor">
            <summary>
            Creates a new instance of LiteMethodCallExpression
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodCallStatement.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteMethodCallExpression
            </summary>
            <param name="source">The source expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodCallStatement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodCallStatement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodCallStatement.SetSource(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets element source.
            </summary>
            <param name="source">The source expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodCallStatement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodCallStatement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodCallStatement.AddArgument(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Adds argument to this element.
            </summary>
            <param name="argument">The argument to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodCallStatement.RemoveArgument(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Removes argument from this element.
            </summary>
            <param name="argument">The argument to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMethodCallStatement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMethodCallStatement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMethodCallStatement.Name">
            <summary>
            Gets name of this method call.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMethodCallStatement.Source">
            <summary>
            The source expression.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMethodCallStatement.IsGeneric">
            <summary>
            Returns true if this expression is generic and has type arguments.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMethodCallStatement.TypeArguments">
            <summary>
            Gets type arguments.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMethodCallStatement.TypeArity">
            <summary>
            Gets type arity.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMethodCallStatement.Arguments">
            <summary>
            Gets arguments passed to method call expression.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMethodCallStatement.DevExpress#CodeRush#StructuralParser#IWithArguments#Args">
            <summary>
            Gets arguments passed to method call expression.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteRemoveHandlerStatement">
            <summary>
            Represents remove handler statement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteRemoveHandlerStatement.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression,DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteHandlerStatement
            </summary>
            <param name="expression">The element expression.</param>
            <param name="addressOfExpression">The address of expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteRemoveHandlerStatement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteRemoveHandlerStatement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteReturnStatement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteReturnStatement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteReturnStatement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteReturnStatement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteReturnStatement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteReturnStatement.Expression">
            <summary>
            Gets where clause for current expression.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteVolatileStatement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteVolatileStatement.IsVolatile">
            <summary>
            Returns true if variable is volatile.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteWithStatement">
            <summary>
            Represents lite with statement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteWithStatement.#ctor">
            <summary>
            Creates new LiteWithStatement instance.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteWithStatement.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates new LiteWithStatement instance.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteWithStatement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteWithStatement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteWithStatement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteWithStatement.AddChild(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Adds child element.
            </summary>
            <param name="element">The element to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteWithStatement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteWithStatement.SetExpression(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets with statement expression.
            </summary>
            <param name="expression">The expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteWithStatement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteWithStatement.CodeChildren">
            <summary>
            Gets children elements located in body of current statement.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteWithStatement.Expression">
            <summary>
            Gets with statement expression.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteWithStatement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteAnonymousTypeElement">
            <summary>
            Represents anonymous type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAnonymousTypeElement.#ctor">
            <summary>
            Creates new instance of LiteAnonymousTypeElement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAnonymousTypeElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAnonymousTypeElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAnonymousTypeElement.ImageIndex">
            <summary>
            Gets image index of the element.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteArrayTypeElement">
            <summary>
            Proxy type element to represent array types.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArrayTypeElement.#ctor(DevExpress.CodeRush.StructuralParser.ITypeElement,System.Int32)">
            <summary>
            Creates new instance of LiteArrayType element;
            </summary>
            <param name="baseType">The base type of the array.</param>
            <param name="rank">The array rank.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteArrayTypeElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteArrayTypeElement.ImageIndex">
            <summary>
            Gets image index.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteArrayTypeElement.BaseType">
            <summary>
            Gets base array type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteArrayTypeElement.Rank">
            <summary>
            Gets array rank.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAttributeElement.#ctor(System.String)">
            <summary>
            Creates a new instance of LiteAttributeElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAttributeElement.#ctor(System.String,DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Creates a new instance of LiteAttributeElement
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAttributeElement.SetQualifier(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets type of this element.
            </summary>
            <param name="qualifier"></param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAttributeElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAttributeElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAttributeElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAttributeElement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAttributeElement.AddArgument(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Adds argument to this element.
            </summary>
            <param name="argument">The argument to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAttributeElement.RemoveArgument(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Removes argument from this element.
            </summary>
            <param name="argument">The argument to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteAttributeElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAttributeElement.Name">
            <summary>
            Gets or sets attribute name.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAttributeElement.HasTargetNode">
            <summary>
            Defines if attribute has target node.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAttributeElement.Arguments">
            <summary>
            Gets attribute arguments.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAttributeElement.Qualifier">
            <summary>
            Gets attribute qualifier.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAttributeElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAttributeElement.ImageIndex">
            <summary>
            Gets element image index.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteAttributeElement.DevExpress#CodeRush#StructuralParser#IWithSource#Source">
            <summary>
            Gets attribute qualifier.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteClassElement">
            <summary>
            Summary description for LiteClassElement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteClassElement.#ctor">
            <summary>
            Creates new instance of LiteClassElement.		
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteClassElement.#ctor(System.String)">
            <summary>
            Creates new instance of LiteClassElement.
            <param name="name">The name of the class.</param>		
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteClassElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteClassElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteDelegateElement">
            <summary>
            Summary description for LiteDelegateElement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDelegateElement.#ctor">
            <summary>
            Creates new instance of LiteDelegateElement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDelegateElement.#ctor(System.String,DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Creates new instance of LiteDelegateElement.
            </summary>
            <param name="name">The name of the delegate.</param>
            <param name="type">The type of the delegate.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDelegateElement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDelegateElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDelegateElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDelegateElement.SetType(DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Sets type of this element.
            </summary>
            <param name="type">The type to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDelegateElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDelegateElement.AddParameter(DevExpress.CodeRush.StructuralParser.LiteParameterElement)">
            <summary>
            Adds parameter to this element.
            </summary>
            <param name="parameter">The parameter to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDelegateElement.AddParameters(DevExpress.CodeRush.StructuralParser.LiteParameterElementCollection)">
            <summary>
            Adds parameters to this element.
            </summary>
            <param name="parameters">The parameters to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDelegateElement.SetParameters(DevExpress.CodeRush.StructuralParser.LiteParameterElementCollection)">
            <summary>
            Sets parameters to this element.
            </summary>
            <param name="parameters">The parameters to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDelegateElement.RemoveParameter(DevExpress.CodeRush.StructuralParser.LiteParameterElement)">
            <summary>
            Removes parameter from this element.
            </summary>
            <param name="parameter">The parameter to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteDelegateElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteDelegateElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteDelegateElement.Type">
            <summary>
            Gets element type.
            </summary>		
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteDelegateElement.Parameters">
            <summary>
            Gets element parameters.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElaboratedTypeElement.#ctor">
            <summary>
            Creates new instance of LiteElaboratedTypeElement.		
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElaboratedTypeElement.#ctor(DevExpress.CodeRush.StructuralParser.LiteExpression,DevExpress.CodeRush.StructuralParser.ElaboratedKind)">
            <summary>
            Creates new instance of LiteElaboratedTypeElement.
            </summary>
            <param name="expression">The expression of the type.</param>
            <param name="kind">The elaborated kind.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElaboratedTypeElement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElaboratedTypeElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElaboratedTypeElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElaboratedTypeElement.SetExpression(DevExpress.CodeRush.StructuralParser.LiteExpression)">
            <summary>
            Sets expression for this element.
            </summary>
            <param name="expression">The expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElaboratedTypeElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElaboratedTypeElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElaboratedTypeElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElaboratedTypeElement.ImageIndex">
            <summary>
            Gets element image index.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElaboratedTypeElement.ElaboratedKind">
            <summary>
            Gets elaborated type kind.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteElaboratedTypeElement.Expression">
            <summary>
            Gets elaborated type expression.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteEnumerationElement">
            <summary>
            Enumeration.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteEnumerationElement.#ctor">
            <summary>
            Creates new instance of LiteEnumerationElement.
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteEnumerationElement.#ctor(System.String)">
            <summary>
            Creates new instance of LiteEnumerationElement.
            </summary>
            <param name="name">The name of the enumeration.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteEnumerationElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteEnumerationElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteEnumerationElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteEnumerationElement.UnderlyingType">
            <summary>
            Gets type name for enumeration elements.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteInterfaceElement">
            <summary>
            Interface element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteInterfaceElement.#ctor">
            <summary>
            Creates new instance of the LiteInterfaceElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteInterfaceElement.#ctor(System.String)">
            <summary>
            Creates new instance of the LiteInterfaceElement
            </summary>
            <param name="name">The name of the interface.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteInterfaceElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteInterfaceElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteModuleElement">
            <summary>
            Module element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModuleElement.#ctor">
            <summary>
            Creates new instance of the LiteModuleElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModuleElement.#ctor(System.String)">
            <summary>
            Creates new instance of the LiteModuleElement
            </summary>
            <param name="name">The name of the module.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModuleElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteModuleElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteStructElement">
            <summary>
            Structure element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteStructElement.#ctor">
            <summary>
            Creates new instance of the LiteStructElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteStructElement.#ctor(System.String)">
            <summary>
            Creates new instance of the LiteStructElement
            </summary>
            <param name="name">The name of the structure.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteStructElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteStructElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteActivatedTypeParameterElement">
            <summary>
            Activated type parameter element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteActivatedTypeParameterElement.#ctor">
            <summary>
            Creates a new instance of LiteTypeParameterElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteActivatedTypeParameterElement.#ctor(System.String,DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Creates a new instance of LiteTypeParameterElement
            </summary>
            <param name="name">The name of the element.</param>
            <param name="type">The type of the element.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteActivatedTypeParameterElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteActivatedTypeParameterElement.SetActivatedType(DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Sets activated type.
            </summary>
            <param name="type">The type to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteActivatedTypeParameterElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteActivatedTypeParameterElement.ActivatedType">
            <summary>
            Gets type for the activated type parameter.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteArrayNameModifier">
            <summary>
            Represents array modifier.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArrayNameModifier.AddSizeInitializer(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Adds modifier to this element.
            </summary>
            <param name="element">The element to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArrayNameModifier.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArrayNameModifier.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArrayNameModifier.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArrayNameModifier.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteArrayNameModifier.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteArrayNameModifier.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteClassTypeParameterConstraintElement">
            <summary>
            Represents generic class type parameter constraint.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteTypeParameterConstraintElement">
            <summary>
            Represents generic type parameter constraint.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteClassTypeParameterConstraintElement.#ctor">
            <summary>
            Creates a new instance of LiteClassTypeParameterConstraintElement
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteClassTypeParameterConstraintElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteClassTypeParameterConstraintElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteClassTypeParameterConstraintElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clone data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The clone options.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteClassTypeParameterConstraintElement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteClassTypeParameterConstraintElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteClassTypeParameterConstraintElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteNamedTypeParameterConstraintElement">
            <summary>
            Represents generic named type parameter constraint.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNamedTypeParameterConstraintElement.#ctor">
            <summary>
            Creates new LiteNamedTypeParameterConstraintElement instance.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNamedTypeParameterConstraintElement.#ctor(DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Creates new LiteNamedTypeParameterConstraintElement instance.
            </summary>
            <param name="typeReference">The constraint type reference.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNamedTypeParameterConstraintElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNamedTypeParameterConstraintElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNamedTypeParameterConstraintElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNamedTypeParameterConstraintElement.SetTypeReference(DevExpress.CodeRush.StructuralParser.LiteTypeReferenceExpression)">
            <summary>
            Sets type reference expression.
            </summary>
            <param name="expression">The expression to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNamedTypeParameterConstraintElement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNamedTypeParameterConstraintElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteNamedTypeParameterConstraintElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteNamedTypeParameterConstraintElement.TypeReference">
            <summary>
            Gets type reference
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteNewTypeParameterConstraintElement">
            <summary>
            Represents generic named type parameter constraint.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNewTypeParameterConstraintElement.#ctor">
            <summary>
            Creates a new instance of LiteNewTypeParameterConstraintElement
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNewTypeParameterConstraintElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNewTypeParameterConstraintElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNewTypeParameterConstraintElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clone data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The clone options.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNewTypeParameterConstraintElement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteNewTypeParameterConstraintElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteNewTypeParameterConstraintElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteStructTypeParameterConstraintElement">
            <summary>
            Represents generic struct type parameter constraint.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteStructTypeParameterConstraintElement.#ctor">
            <summary>
            Creates a new instance of LiteStructTypeParameterConstraintElement
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteStructTypeParameterConstraintElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteStructTypeParameterConstraintElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteStructTypeParameterConstraintElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clone data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The clone options.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteStructTypeParameterConstraintElement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteStructTypeParameterConstraintElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteStructTypeParameterConstraintElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElementCollection.ToIElementCollection">
            <summary>
            Converts LiteElementCollection to IElementCollection.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElementCollection.op_Implicit(DevExpress.CodeRush.StructuralParser.LiteElementCollection)~DevExpress.CodeRush.StructuralParser.IElementCollection">
            <summary>
            Converts LiteElementCollection to IElementCollection.
            </summary>
            <param name="collection">The collection to convert.</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteElementCollection.GetEnumerable">
            <summary>
            Returns IEnumerable for this collection.
            </summary>
            <returns>Returns IEnumerable for this collection.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.MetaDataConverterBase.#ctor">
            <summary>
            Creates new LiteMetaDataConverter
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.MetaDataConverterBase.CreateNamespace(System.String)">
            <summary>
            Creates new namespace
            </summary>
            <param name="name">The name of the namespace to create.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.MetaDataConverterBase.CreateDelegate(System.String,DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Creates new delegate
            </summary>
            <param name="name">The name of the delegate to create.</param>
            <param name="type">The type of the delegate to create.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.MetaDataConverterBase.CreateTypeParameter(System.String)">
            <summary>
            Creates new type parameter element
            </summary>
            <param name="name">The name of the type parameter to create.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.MetaDataConverterBase.CreateEnumeration(System.String)">
            <summary>
            Creates new enumeration element
            </summary>
            <param name="name">The name of the enumeration to create.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.MetaDataConverterBase.CreateInterface(System.String)">
            <summary>
            Creates new interface element
            </summary>
            <param name="name">The name of the interface to create.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.MetaDataConverterBase.CreateClass(System.String)">
            <summary>
            Creates new class element
            </summary>
            <param name="name">The name of the class to create.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.MetaDataConverterBase.CreateModule(System.String)">
            <summary>
            Creates new module element
            </summary>
            <param name="name">The name of the module to create.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.MetaDataConverterBase.CreateStruct(System.String)">
            <summary>
            Creates new struct element
            </summary>
            <param name="name">The name of the struct to create.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.MetaDataConverterBase.CreateEnumElement(System.String,DevExpress.CodeRush.StructuralParser.IPrimitiveExpression)">
            <summary>
            Creates new enum element
            </summary>
            <param name="name">The name of the enum element to create.</param>
            <param name="value">The value of the enum element to create.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.MetaDataConverterBase.CreateField(DevExpress.DXCore.MetaData.IFieldInfo,DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Creates new field element
            </summary>
            <param name="field">Specifies field meta-data info.</param>
            <param name="type">The type of the field.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.MetaDataConverterBase.CreateEvent(System.String,DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Creates new event element.
            </summary>
            <param name="name">The name of the event to create.</param>
            <param name="type">The type of the event.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.MetaDataConverterBase.CreateProperty(System.String,DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression,System.Boolean)">
            <summary>
            Creates new property element
            </summary>
            <param name="name">The name of the property</param>
            <param name="type">The type of the property</param>
            <param name="isIndexer">Defines if creating property is indexer</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.MetaDataConverterBase.CreateParameter(System.String,DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Creates new parameter element
            </summary>
            <param name="name">The name of the parameter.</param>
            <param name="type">The type of the parameter.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.MetaDataConverterBase.CreateOptionalParameter(System.String,DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression,DevExpress.CodeRush.StructuralParser.IExpression)">
            <summary>
            Creates new parameter element
            </summary>
            <param name="name">The name of the parameter.</param>
            <param name="type">The type of the parameter.</param>
            <param name="expression">Default value expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.MetaDataConverterBase.CreateSimpleTypeReferenceExpression(System.String)">
            <summary>
            Creates new type reference.
            </summary>
            <param name="name">The name of the type reference to create.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.MetaDataConverterBase.CreateSimpleGenericTypeReferenceExpression(System.String,DevExpress.CodeRush.StructuralParser.ITypeReferenceExpressionCollection)">
            <summary>
            Creates new type reference.
            </summary>
            <param name="name">The name of the type reference to create.</param>
            <param name="typeArguments">The type arguments of the type reference to create.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.MetaDataConverterBase.CreateQualifiedTypeReferenceExpression(System.String,DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Creates new type qualified type reference expression.
            </summary>
            <param name="name">The name of the type reference to create.</param>
            <param name="source">The expression source.</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.MetaDataConverterBase.CreateQualifiedGenericTypeReferenceExpression(System.String,DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression,DevExpress.CodeRush.StructuralParser.ITypeReferenceExpressionCollection)">
            <summary>
            Creates new type qualified type reference expression.
            </summary>
            <param name="name">The name of the type reference to create.</param>
            <param name="source">The expression source.</param>		
            <param name="typeArguments">The type arguments of the type reference to create.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.MetaDataConverterBase.CreateArrayTypeReferenceExpression(DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression,System.UInt16)">
            <summary>
            Creates new type reference.
            </summary>
            <param name="type">The base type of the type reference to create.</param>
            <param name="rank">The array rank.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.IsTypeDeclaration(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns true if the specified lite element is a class, struct, interface, enumeration or
            delegate.
            </summary>
            <param name="element">The language element to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.IsClassOrStruct(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns true if the specified language element is a class or struct.
            </summary>
            <param name="element">The element to check.</param>
            <returns></returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.IsEventHandler(DevExpress.CodeRush.StructuralParser.IMethodElement)">
            <summary>
            Returns true if the specified method is an event handler.
            </summary>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.IsInterface(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns true if the specified language element is an interface.
            </summary>
            <param name="element">The element to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.IsNamespace(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns true if the specified language element is a namespace.
            </summary>
            <param name="element">The language element to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.IsTypeDeclarationOrNamespace(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns true if the specified language element is a class, struct, interface, enumeration, 
            delegate or namespace.
            </summary>
            <param name="element">The language element to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.IsMember(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns true if the specified language element is a member of a type.
            </summary>
            <param name="element">The language element to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.IsNonPrivateMember(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns true if the specified language element is a non private member of a type.
            </summary>
            <param name="element">The language element to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.IsStaticMember(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns true if the specified language element is static member of a type.
            </summary>
            <param name="element">The language element to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.IsEnumElement(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns true if the specified language element is enum element.
            </summary>
            <param name="element">The element to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.IsInitializeComponent(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns true if the specified language element is InitializeComponent method.
            </summary>
            <param name="declaration"></param>    
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.GetElementType(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns the type name for the passed element.
            </summary>
            <param name="element">The element to get type for.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.NamesMatch(DevExpress.CodeRush.StructuralParser.IElement,System.String)">
            <summary>
            Returns true if passed element matches given name.
            </summary>
            <param name="element">The element to check.</param>
            <param name="name">The name to match.</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.NamesMatch(DevExpress.CodeRush.StructuralParser.IElement,System.String,System.Boolean)">
            <summary>
            Returns true if passed element matches given name.
            </summary>
            <param name="element">The element to check.</param>
            <param name="name">The name to match.</param>
            <param name="isCaseSensitive">Perfrom case sensitive match.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.NamesMatch(DevExpress.CodeRush.StructuralParser.IElement,System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns true if passed element matches given name.
            </summary>
            <param name="element">The element to check.</param>
            <param name="name">The name to match.</param>
            <param name="isCaseSensitive">Perfrom case sensitive match.</param>
            <param name="useTypeArguments">Pass true to take into account generic type arguments.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.NamesMatch(DevExpress.CodeRush.StructuralParser.IElement,DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns true if passed element matches given name.
            </summary>
            <param name="first">The element to check.</param>
            <param name="second">The element to match.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.NamesMatch(DevExpress.CodeRush.StructuralParser.IElement,DevExpress.CodeRush.StructuralParser.IElement,System.Boolean)">
            <summary>
            Returns true if passed element matches given name.
            </summary>
            <param name="first">The element to check.</param>
            <param name="second">The element to match.</param>
            <param name="useTypeArguments">Pass true to take into account generic type arguments.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.NamesMatch(DevExpress.CodeRush.StructuralParser.IElement,DevExpress.CodeRush.StructuralParser.IElement,System.Boolean,System.Boolean)">
            <summary>
            Returns true if passed element matches given name.
            </summary>
            <param name="first">The element to check.</param>
            <param name="second">The element to match.</param>
            <param name="isCaseSensitive">Perfrom case sensitive match.</param>
            <param name="useTypeArguments">Pass true to take into account generic type arguments.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.NamesMatch(System.String,System.String,System.Boolean)">
            <summary>
            Returns true if passed names match.
            </summary>
            <param name="srcName">The first name.</param>
            <param name="dstName">The second name.</param>
            <param name="caseSensitive">Perfrom case sensitive match.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.LocationsMatch(DevExpress.CodeRush.StructuralParser.IElement,System.String)">
            <summary>
            Returns true if passed element matches given name.
            </summary>
            <param name="element">The element to check.</param>
            <param name="location">The name to match.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.FindElement(System.Collections.ICollection,System.String)">
            <summary>
            Finds lite element with the given name inside the specified collection of lite elements.
            Only first level nodes are checked.
            </summary>
            <param name="elements">The collection of language elements to search in.</param>
            <param name="name">The name of the element to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.FindElement(System.Collections.ICollection,System.String,System.Boolean)">
            <summary>
            Finds lite element with the given name inside the specified collection of lite elements.
            Only first level nodes are checked.
            </summary>
            <param name="elements">The collection of language elements to search in.</param>
            <param name="name">The name of the element to find.</param>
            <param name="caseSensitive">Perform case sensitive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.FindElement(System.Collections.ICollection,System.String,System.Boolean,System.Boolean)">
            <summary>
            Finds lite element with the given name inside the specified collection of lite elements.
            Only first level nodes are checked.
            </summary>
            <param name="elements">The collection of language elements to search in.</param>
            <param name="name">The name of the element to find.</param>
            <param name="caseSensitive">Perform case sensitive search.</param>
            <param name="useTypeArguments">Pass true to take into account generic type arguments.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.FindElements(System.Collections.ICollection,System.String)">
            <summary>
            Finds elements with the given name inside the specified collection of lite elements.
            Only first level nodes are checked.
            </summary>
            <param name="elements">The collection of lite elements to search in.</param>
            <param name="name">The name of the element to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.FindElements(System.Collections.ICollection,System.String,System.Boolean)">
            <summary>
            Finds elements with the given name inside the specified collection of language elements.
            Only first level nodes are checked.
            </summary>
            <param name="elements">The collection of language elements to search in.</param>
            <param name="name">The name of the element to find.</param>
            <param name="caseSensitive">Perform case sensitive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.FindElements(System.Collections.ICollection,System.String,System.Boolean,System.Boolean)">
            <summary>
            Finds elements with the given name inside the specified collection of language elements.
            Only first level nodes are checked.
            </summary>
            <param name="elements">The collection of language elements to search in.</param>
            <param name="name">The name of the element to find.</param>
            <param name="caseSensitive">Perform case sensitive search.</param>
            <param name="useTypeArguments">Pass true to take into account generic type arguments.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.FindLocalDeclaration(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Finds local declaration for specified element reference if it is possible.
            The element passed to this method should be determined through a call 
            that either guarantees a parse will happen if needed, or the element was 
            acquired directly after calling CodeRush.Language.ParseIfNeeded().
            </summary>
            <param name="element">The element for which to find declaration.</param>
            <returns>Returns declaration for the element reference.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.FindLocalDeclaration(DevExpress.CodeRush.StructuralParser.IElement,System.String)">
            <summary>
            Finds local declaration with the given name, starting from the specified element 
            reference if it is possible.
            The language element passed to this method should be determined through a call 
            that either guarantees a parse will happen if needed, or the element was 
            acquired directly after calling CodeRush.Language.ParseIfNeeded().
            </summary>
            <param name="start">The start element.</param>
            <param name="name">The name of the declaration to search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.FindLocalDeclaration(DevExpress.CodeRush.StructuralParser.IElement,System.String,DevExpress.CodeRush.StructuralParser.SiblingHelper)">
            <summary>
            Finds local declaration with the given name, starting from the specified element 
            reference if it is possible.
            The language element passed to this method should be determined through a call 
            that either guarantees a parse will happen if needed, or the element was 
            acquired directly after calling CodeRush.Language.ParseIfNeeded().
            </summary>
            <param name="start">The start element.</param>
            <param name="name">The name of the declaration to search.</param>
            <param name="helper">The sibling helper.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.FindFieldDeclaration(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Finds field declaration for specified element reference if it is possible.
            The language element passed to this method should be determined through a call 
            that either guarantees a parse will happen if needed, or the element was 
            acquired directly after calling CodeRush.Language.ParseIfNeeded().
            </summary>
            <param name="element">Element for which to find declaration.</param>
            <returns>Returns declaration for the element reference.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.FindMember(DevExpress.CodeRush.StructuralParser.ITypeElement,System.String)">
            <summary>
            Finds a member with the given name inside the specified language element.
            Only first level nodes are checked.
            </summary>
            <param name="element">The language element to search in.</param>
            <param name="name">The name of the member to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.FindMember(DevExpress.CodeRush.StructuralParser.ITypeElement,System.String,System.Boolean)">
            <summary>
            Finds a member with the given name inside the specified language element.
            Only first level nodes are checked.
            </summary>
            <param name="element">The language element to search in.</param>
            <param name="name">The name of the member to find.</param>
            <param name="caseSensitive">Perform case sensitive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.FindMember(DevExpress.CodeRush.StructuralParser.ITypeElement,System.String,System.Boolean,System.Boolean)">
            <summary>
            Finds a member with the given name inside the specified language element.
            Only first level nodes are checked.
            </summary>
            <param name="element">The language element to search in.</param>
            <param name="name">The name of the member to find.</param>
            <param name="caseSensitive">Perform case sensitive search.</param>
            <param name="useTypeArguemnts">Pass true to take into account generic type arguments.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.FindMember(DevExpress.CodeRush.StructuralParser.ITypeElement,System.String,DevExpress.CodeRush.StructuralParser.IElementFilter,System.Boolean)">
            <summary>
            Returns member with the given name if it is declared inside this type or inside any
            of it's ancestors if needed.
            </summary>
            <param name="type">The type to search for member.</param>
            <param name="name">The name of member to find.</param>
            <param name="filter">The filter to use.</param>
            <param name="searchInAncestors">The value indicating if member should be searched inside base types.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.FindMember(DevExpress.CodeRush.StructuralParser.ITypeElement,System.String,DevExpress.CodeRush.StructuralParser.IElementFilter)">
            <summary>
            Returns member with the given name if it is declared inside this type or inside any
            of it's ancestors if needed.
            </summary>
            <param name="type">The type to search for member.</param>
            <param name="name">The name of member to find.</param>
            <param name="filter">The filter to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.FindMembers(DevExpress.CodeRush.StructuralParser.ITypeElement,System.String,DevExpress.CodeRush.StructuralParser.IElementFilter,System.Boolean)">
            <summary>
            Returns member with the given name if it is declared inside this type or inside any
            of it's ancestors if needed.
            </summary>
            <param name="type">The type to search for member.</param>
            <param name="name">The name of member to find.</param>
            <param name="filter">The filter to use.</param>
            <param name="searchInAncestors">The value indicating if member should be searched inside base types.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.FindMembers(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,DevExpress.CodeRush.StructuralParser.ITypeElement,System.String,DevExpress.CodeRush.StructuralParser.IElementFilter,System.Boolean)">
            <summary>
            Returns member with the given name if it is declared inside this type or inside any
            of it's ancestors if needed.
            </summary>
            <param name="resolver">The source tree resolver.</param>
            <param name="type">The type to search for member.</param>
            <param name="name">The name of member to find.</param>
            <param name="filter">The filter to use.</param>
            <param name="searchInAncestors">The value indicating if member should be searched inside base types.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.FindMembers(DevExpress.CodeRush.StructuralParser.ITypeElement,System.String,DevExpress.CodeRush.StructuralParser.IElementFilter)">
            <summary>
            Returns member with the given name if it is declared inside this type or inside any
            of it's ancestors if needed.
            </summary>
            <param name="type">The type to search for member.</param>
            <param name="name">The name of member to find.</param>
            <param name="filter">The filter to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.FindMembers(DevExpress.CodeRush.StructuralParser.ITypeElement,System.String)">
            <summary>
            Finds members with the given name inside the specified language element.
            Only first level nodes are checked.
            </summary>
            <param name="element">The language element to search in.</param>
            <param name="name">The name of the member to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.FindMembers(DevExpress.CodeRush.StructuralParser.ITypeElement,System.String,System.Boolean)">
            <summary>
            Finds members with the given name inside the specified language element.
            Only first level nodes are checked.
            </summary>
            <param name="element">The language element to search in.</param>
            <param name="name">The name of the member to find.</param>
            <param name="caseSensitive">Perform case sensitive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.FindMembers(DevExpress.CodeRush.StructuralParser.ITypeElement,System.String,System.Boolean,System.Boolean)">
            <summary>
            Finds members with the given name inside the specified language element.
            Only first level nodes are checked.
            </summary>
            <param name="element">The language element to search in.</param>
            <param name="name">The name of the member to find.</param>
            <param name="caseSensitive">Perform case sensitive search.</param>
            <param name="useTypeArguments">Pass true to take into account generic type arguments.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.FindMembers(System.Collections.ICollection,System.String,System.Boolean,System.Boolean)">
            <summary>
            Finds members with the given name inside the specified language elements.
            </summary>
            <param name="members">The members collection to search in.</param>
            <param name="name">The name of the member to find.</param>
            <param name="caseSensitive">Perform case sensitive search.</param>
            <param name="useTypeArguments">Pass true to take into account generic type arguments.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.FindFields(DevExpress.CodeRush.StructuralParser.ITypeElement,System.String,System.Boolean,System.Boolean)">
            <summary>
            Finds fields with the given name inside the specified language element.
            Only first level nodes are checked.
            </summary>
            <param name="element">The language element to search in.</param>
            <param name="name">The name of the member to find.</param>
            <param name="caseSensitive">Perform case sensitive search.</param>
            <param name="useTypeArguemnts">Pass true to take into account generic type arguments.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.FindStaticMembersOrTypes(DevExpress.CodeRush.StructuralParser.ITypeElement,System.String)">
            <summary>
            Finds members with the given name inside the specified language element.
            Only first level nodes are checked.
            </summary>
            <param name="element">The language element to search in.</param>
            <param name="name">The name of the member to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.FindStaticMembersOrTypes(DevExpress.CodeRush.StructuralParser.ITypeElement,System.String,System.Boolean)">
            <summary>
            Finds members with the given name inside the specified language element.
            Only first level nodes are checked.
            </summary>
            <param name="element">The language element to search in.</param>
            <param name="name">The name of the member to find.</param>
            <param name="caseSensitive">Perform case sensitive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.FindStaticMembersOrTypes(DevExpress.CodeRush.StructuralParser.ITypeElement,System.String,System.Boolean,System.Boolean)">
            <summary>
            Finds members with the given name inside the specified language element.
            Only first level nodes are checked.
            </summary>
            <param name="element">The language element to search in.</param>
            <param name="name">The name of the member to find.</param>
            <param name="caseSensitive">Perform case sensitive search.</param>
            <param name="useTypeArguemnts">Pass true to take into account generic type arguments.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.FindNonPrivateMembers(DevExpress.CodeRush.StructuralParser.ITypeElement,System.String)">
            <summary>
            Finds non private members with the given name inside the specified language element.
            Only first level nodes are checked.
            </summary>
            <param name="element">The language element to search in.</param>
            <param name="name">The name of the member to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.FindNonPrivateMembers(DevExpress.CodeRush.StructuralParser.ITypeElement,System.String,System.Boolean)">
            <summary>
            Finds non private members with the given name inside the specified language element.
            Only first level nodes are checked.
            </summary>
            <param name="element">The language element to search in.</param>
            <param name="name">The name of the member to find.</param>
            <param name="caseSensitive">Perform case sensitive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.FindNonPrivateMembers(DevExpress.CodeRush.StructuralParser.ITypeElement,System.String,System.Boolean,System.Boolean)">
            <summary>
            Finds non private members with the given name inside the specified language element.
            Only first level nodes are checked.
            </summary>
            <param name="element">The language element to search in.</param>
            <param name="name">The name of the member to find.</param>
            <param name="caseSensitive">Perform case sensitive search.</param>
            <param name="useTypeArguments">Pass true to take into account generic type arguments.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.GetNonPrivateMembers(DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Returns a collection of non private members defined inside the specified language element.
            </summary>
            <param name="element">The language element to use.</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.FindTypeOrNamespace(DevExpress.CodeRush.StructuralParser.IElement,System.String)">
            <summary>
            Finds a type or namespace with the given name inside the specified
            lite element. Only first level nodes are checked.
            </summary>
            <param name="element">The language element to search in.</param>
            <param name="name">The name of the element to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.FindTypeOrNamespace(DevExpress.CodeRush.StructuralParser.IElement,System.String,System.Boolean,System.Boolean)">
            <summary>
            Recursively searches for a type or namespace with the given name inside the specified
            language element.
            </summary>
            <param name="element">The language element to search in.</param>
            <param name="name">The name of the element to find.</param>
            <param name="recursive">Pass true to perform a recursive search.</param>
            <param name="caseSensitive">Perform case sensitive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.FindElementByLocation(DevExpress.CodeRush.StructuralParser.IElementCollection,System.String,System.Boolean)">
            <summary>
            Finds an element with the given location inside the specified collection of language elements.
            Only first level nodes are checked.
            </summary>
            <param name="elements">The collection of language elements to search in.</param>
            <param name="location">The location of the element to find.</param>
            <param name="caseSensitive">Perform case sensitive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.FindElementsByLocation(DevExpress.CodeRush.StructuralParser.IElementCollection,System.String)">
            <summary>
            Finds all elements with the given location inside the specified collection of language elements.
            Only first level nodes are checked.
            </summary>
            <param name="elements">The collection of language elements to search in.</param>
            <param name="location">The location of the element to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.FindNamespaceByLocation(DevExpress.CodeRush.StructuralParser.IElement,System.String)">
            <summary>
            Recursivley searches for a namespace with the given location inside the specified language element.
            </summary>
            <param name="element">The language element to search in.</param>
            <param name="location">The location of the element to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.FindTypeOrNamespaceByLocation(DevExpress.CodeRush.StructuralParser.IElement,System.String,System.Boolean)">
            <summary>
            Recursivley searches for a type or namespace with the given location inside the specified language element.
            </summary>
            <param name="element">The language element to search in.</param>
            <param name="location">The location of the element to find.</param>
            <param name="caseSensitive">Perform case sensitive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.FindTypesOrNamespacesByLocation(DevExpress.CodeRush.StructuralParser.IElement,System.String)">
            <summary>
            Recursivley searches for all types or namespaces with the given location inside the specified language element.
            </summary>
            <param name="element">The language element to search in.</param>
            <param name="location">The location of the element to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.FindTypesOrNamespacesByLocation(DevExpress.CodeRush.StructuralParser.IElementCollection,System.String)">
            <summary>
            Recursivley searches for a type or namespace with the given location inside the specified language elements collection.
            </summary>
            <param name="elements">The language element collection to search in.</param>
            <param name="location">The location of the element to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.GetNamespaces(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns a collection of namespaces defined inside the specified language element.
            Only first level nodes are checked.
            </summary>
            <param name="element">The language element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.GetNamespaces(DevExpress.CodeRush.StructuralParser.IElement,System.Boolean)">
            <summary>
            Returns a collection of namespaces defined inside the specified language element.
            </summary>
            <param name="element">The language element to use.</param>
            <param name="findRecursive">Pass true to perform a recursive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.FindTypeOrNamespaceInParents(DevExpress.CodeRush.StructuralParser.IElement,System.String)">
            <summary>
            Searches for an element with the given name inside all parents of the specified element.
            </summary>
            <param name="element">The element to start the search.</param>
            <param name="name">The name of the element to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.FindTypeOrNamespaceInParents(DevExpress.CodeRush.StructuralParser.IElement,System.String,System.Boolean)">
            <summary>
            Searches for an element with the given name inside all parents of the specified element.
            </summary>
            <param name="element">The element to start the search.</param>
            <param name="name">The name of the element to find.</param>
            <param name="caseSensitive">Perform case sensitive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.FindElementByFullName(DevExpress.CodeRush.StructuralParser.IElementCollection,System.String,System.Boolean)">
            <summary>
            Performs a recursive search for an element with the given name 
            inside the specified collection of IElement.
            </summary>
            <param name="elements">The collection of IElement to search in.</param>
            <param name="fullName">The full name of the element to find.</param>
            <param name="caseSensitive">The value determining if string case should be taken into account.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.GetMembers(DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Returns a collection of members defined inside the specified language element.
            Only first level nodes are checked.
            </summary>
            <param name="element">The language element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.GetFields(DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Returns a collection of fields defined inside the specified language element.
            Only first level nodes are checked.
            </summary>
            <param name="element">The language element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.GetMembers(DevExpress.CodeRush.StructuralParser.ITypeElement,System.Boolean)">
            <summary>
            Returns a collection of members defined inside the specified language element.
            </summary>
            <param name="element">The language element to use.</param>
            <param name="findRecursive">Pass true to perform a recursive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.GetStaticMembersOrTypes(DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Returns a collection of members defined inside the specified language element.
            Only first level nodes are checked.
            </summary>
            <param name="element">The language element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.GetSimpleElementTypeName(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns the type name for the passed element.
            </summary>
            <param name="element">The element to get type for.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.GetDeclaration(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Gets declaration for this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.GetDeclaration(DevExpress.CodeRush.StructuralParser.IElement,System.Boolean)">
            <summary>
            Gets declaration for this element.
            </summary>
            <param name="element">The element to get declaration for.</param>
            <param name="restore">Defines wether language element should be restored for declaration.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.FindAllReferences(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Searches for references inside active solution.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.FindAllReferences(DevExpress.CodeRush.StructuralParser.IElement,DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Searches for references inside the given scope.
            </summary>
            <param name="element">The element to search references.</param>
            <param name="scope">The scope to search in.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.GetDescendants(DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Returns all direct descendants for the given type declaration.
            </summary>
            <param name="type">The type declaration to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.GetDescendants(DevExpress.CodeRush.StructuralParser.ITypeElement,DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns all direct descendants for the given type declaration.
            </summary>
            <param name="type">The type declaration to use.</param>
            <param name="scope">The scope to search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.GetDescendants(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Returns all direct descendants for the given type declaration.
            </summary>
            <param name="resolver">The resolver to use.</param>
            <param name="type">The type declaration to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.GetDescendants(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,DevExpress.CodeRush.StructuralParser.ITypeElement,DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns all direct descendants for the given type declaration.
            </summary>
            <param name="resolver">The resolver to use.</param>
            <param name="type">The type declaration to use.</param>
            <param name="scope">The scope to search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.GetAllDescendants(DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Returns all descendants for the given type declaration.
            </summary>
            <param name="type">The type declaration to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.GetAllDescendants(DevExpress.CodeRush.StructuralParser.ITypeElement,DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns all descendants for the given type declaration.
            </summary>
            <param name="type">The type declaration to use.</param>
            <param name="scope">The scope to search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.GetAllDescendants(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Returns all descendants for the given type declaration.
            </summary>
            <param name="resolver">The resolver to use.</param>
            <param name="type">The type declaration to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteModelUtils.GetAllDescendants(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,DevExpress.CodeRush.StructuralParser.ITypeElement,DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns all direct descendants for the given type declaration.
            </summary>
            <param name="resolver">The resolver to use.</param>
            <param name="type">The type declaration to use.</param>
            <param name="scope">The scope to search.</param>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMetaDataArrayTypeReferenceExpression">
            <summary>
            Simple type reference expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataArrayTypeReferenceExpression.#ctor">
            <summary>
            Creates new instance of LiteMetaDataArrayTypeReferenceExpression.
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataArrayTypeReferenceExpression.#ctor(DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression,System.UInt16)">
            <summary>
            Creates new instance of LiteMetaDataArrayTypeReferenceExpression.
            </summary>
            <param name="baseType">The base type of the expression.</param>
            <param name="rank">The rank of the array expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataArrayTypeReferenceExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataArrayTypeReferenceExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataArrayTypeReferenceExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataArrayTypeReferenceExpression.SetBaseType(DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Sets base type for this type reference expression.
            </summary>
            <param name="baseType">The base type of the expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataArrayTypeReferenceExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataArrayTypeReferenceExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataArrayTypeReferenceExpression.Resolve(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves this expression and returns its type.
            </summary>
            <param name="resolver">The resolver to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataArrayTypeReferenceExpression.AddTypeArgument(DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Adds type argument to this type reference expression.
            </summary>
            <param name="argument">The argument to add.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataArrayTypeReferenceExpression.BaseType">
            <summary>
            Gets base type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataArrayTypeReferenceExpression.Rank">
            <summary>
            Gets array rank.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataArrayTypeReferenceExpression.IsArrayType">
            <summary>
            Returns true if this type reference is array reference.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataArrayTypeReferenceExpression.TypeReferenceType">
            <summary>
            Gets type reference type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMetaDataQualifiedGenericTypeReferenceExpression">
            <summary>
            Qualified generic type type reference expression.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMetaDataQualifiedTypeReferenceExpression">
            <summary>
            Qualified type reference expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataQualifiedTypeReferenceExpression.#ctor">
            <summary>
            Creates new instance of LiteMetaDataQualifiedTypeReferenceExpression.
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataQualifiedTypeReferenceExpression.#ctor(System.String,DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression)">
            <summary>
            Creates new instance of LiteMetaDataQualifiedTypeReferenceExpression.
            </summary>
            <param name="name">The name of the expression.</param>
            <param name="baseType">The base type of the expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataQualifiedTypeReferenceExpression.SetBaseType(DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Sets base type for this type reference expression.
            </summary>
            <param name="baseType">The base type of the expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataQualifiedTypeReferenceExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataQualifiedTypeReferenceExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataQualifiedTypeReferenceExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataQualifiedTypeReferenceExpression.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataQualifiedTypeReferenceExpression.BaseType">
            <summary>
            Gets base type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataQualifiedGenericTypeReferenceExpression.#ctor">
            <summary>
            Creates new instance of LiteMetaDataQualifiedGenericTypeReferenceExpression.
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataQualifiedGenericTypeReferenceExpression.#ctor(System.String,DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression)">
            <summary>
            Creates new instance of LiteMetaDataQualifiedGenericTypeReferenceExpression.
            </summary>
            <param name="name">The name of the expression.</param>
            <param name="baseType">The base type of the expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataQualifiedGenericTypeReferenceExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataQualifiedGenericTypeReferenceExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataQualifiedGenericTypeReferenceExpression.AddTypeArgument(DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Adds type argument to this type reference expression.
            </summary>
            <param name="argument">The argument to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataQualifiedGenericTypeReferenceExpression.AddTypeArgument(DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression)">
            <summary>
            Adds type argument to the expression.
            </summary>
            <param name="argument">The type argument to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataQualifiedGenericTypeReferenceExpression.RemoveTypeArgument(DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression)">
            <summary>
            Removes type argument from the expression.
            </summary>
            <param name="argument">The type argument to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataQualifiedGenericTypeReferenceExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataQualifiedGenericTypeReferenceExpression.TypeArguments">
            <summary>
            Returns type arguments for this reference.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMetaDataSimpleGenericTypeReferenceExpression">
            <summary>
            Simple generic type reference expression.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataSimpleGenericTypeReferenceExpression.#ctor">
            <summary>
            Creates new instance of LiteMetaDataSimpleGenericTypeReferenceExpression.
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataSimpleGenericTypeReferenceExpression.#ctor(System.String)">
            <summary>
            Creates new instance of LiteMetaDataSimpleGenericTypeReferenceExpression.
            </summary>
            <param name="name">The name of the expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataSimpleGenericTypeReferenceExpression.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataSimpleGenericTypeReferenceExpression.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataSimpleGenericTypeReferenceExpression.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataSimpleGenericTypeReferenceExpression.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataSimpleGenericTypeReferenceExpression.AddTypeArgument(DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Adds type argument to this type reference expression.
            </summary>
            <param name="argument">The argument to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataSimpleGenericTypeReferenceExpression.AddTypeArgument(DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression)">
            <summary>
            Adds type argument to the expression.
            </summary>
            <param name="argument">The type argument to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataSimpleGenericTypeReferenceExpression.RemoveTypeArgument(DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression)">
            <summary>
            Removes type argument from the expression.
            </summary>
            <param name="argument">The type argument to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataSimpleGenericTypeReferenceExpression.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataSimpleGenericTypeReferenceExpression.TypeArguments">
            <summary>
            Returns type arguments for this reference.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMetaDataConstructorElement">
            <summary>
            Represents a method.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement">
            <summary>
            Represents a method.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement.#ctor">
            <summary>
            Creates a new instance of LiteMetaDataMethodElement
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement.#ctor(System.String)">
            <summary>
            Creates a new instance of LiteMetaDataMethodElement
            </summary>
            <param name="name">The name of the event.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement.AddParameter(DevExpress.CodeRush.StructuralParser.LiteMetaDataParameterElement)">
            <summary>
            Adds parameter to this element.
            </summary>
            <param name="parameter">The parameter to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement.AddParameters(DevExpress.CodeRush.StructuralParser.LiteParameterElementCollection)">
            <summary>
            Adds parameters to this element.
            </summary>
            <param name="parameters">The parameters to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement.SetParameters(DevExpress.CodeRush.StructuralParser.LiteParameterElementCollection)">
            <summary>
            Sets parameters to this element.
            </summary>
            <param name="parameters">The parameters to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement.RemoveParameter(DevExpress.CodeRush.StructuralParser.LiteMetaDataParameterElement)">
            <summary>
            Removes parameter from this element.
            </summary>
            <param name="parameter">The parameter to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement.AddTypeParameter(DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeParameterElement)">
            <summary>
            Adds type parameter to this element.
            </summary>
            <param name="typeParameter">The type parameter to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement.AddTypeParameters(DevExpress.CodeRush.StructuralParser.LiteTypeParameterCollection)">
            <summary>
            Adds type parameters to this element.
            </summary>
            <param name="typeParameters">The type parameters to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement.SetTypeParameters(DevExpress.CodeRush.StructuralParser.LiteTypeParameterCollection)">
            <summary>
            Sets type parameters.
            </summary>
            <param name="typeParameters">Parameters to set</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement.RemoveTypeParameter(DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeParameterElement)">
            <summary>
            Removes type parameter from the element.
            </summary>
            <param name="typeParameter">The element to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement.SetExtension(System.Boolean)">
            <summary>
            Sets extension flag for current element .
            </summary>
            <param name="value">The value to set</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement.IsExtensionMethod">
            <summary>
            Returns true if method is extension.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement.IsMainProcedure">
            <summary>
            Determines whether this method is the main prodedure of an application.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement.IsInitializeComponent">
            <summary>
            Determines whether this method is InitializeComponent method
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement.IsSerializationConstructor">
            <summary>
            Returns true if the element is a serialization constructor.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement.IsWebMethod">
            <summary>
            Return true if the specified member is a web method.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement.Type">
            <summary>
            Gets element type.
            </summary>		 
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement.Parameters">
            <summary>
            Gets element parameters.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement.HasImplicitVariable">
            <summary>
            Returns true if element has Implcit variable
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement.ImplicitVariable">
            <summary>
            Returns implicit variable of method
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement.TypeParameters">
            <summary>
            Gets type parameters.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement.HandlesExpressions">
            <summary>
            Gets handles expressions.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement.ImplementsExpressions">
            <summary>
            Gets implemented expression 
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement.IsGeneric">
            <summary>
            Returns true if element is generic.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement.IsConstructor">
            <summary>
            Returns true if element is constructor
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement.IsDestructor">
            <summary>
            Returns true if element is destructor
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement.IsTypeInitializer">
            <summary>
            Returns true if element is instance constructor
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement.IsActivatedGeneric">
            <summary>
            Returns true if element is activated.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement.IsMemberFunctionConst">
            <summary>
            Gets or sets member function const flag. 
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement.IsExplicitInterfaceMember">
            <summary>
            Returns true if this member is explicitly declared interface member.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement.MethodType">
            <summary>
            The type of this method (e.g., Constructor, Destructor, Procedure or Function)
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement.GenericTemplate">
            <summary>
            Returns template element that was used to activate generic.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement.IsClassOperator">
            <summary>
            Returns true if this method is operator override.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement.IsImplicitCast">
            <summary>
            Returns true if this method defines implicit type cast.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement.IsExplicitCast">
            <summary>
            Returns true if this method defines explicit type cast.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataConstructorElement.#ctor">
            <summary>
            Creates a new instance of LiteMetaDataConstructorElement
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataConstructorElement.#ctor(System.String)">
            <summary>
            Creates a new instance of LiteMethodElement
            </summary>
            <param name="name">The name of the event.</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataConstructorElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataConstructorElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataConstructorElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataConstructorElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataConstructorElement.IsConstructor">
            <summary>
            Returns true if element is constructor
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataConstructorElement.MethodType">
            <summary>
            The type of this method (e.g., Constructor, Destructor, Procedure or Function)
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataConstructorElement.Initializer">
            <summary>
            Gets or sets constructor initializer element.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMetaDataConstructorPrototype">
            <summary>
            LiteMetaDataConstructorPrototype represent constructor prototype.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataConstructorPrototype.#ctor">
            <summary>
            Creates a new instance of LiteMetaDataConstructorElement
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataConstructorPrototype.#ctor(System.String)">
            <summary>
            Creates a new instance of LiteMetaDataConstructorElement
            </summary>
            <param name="name">The name of the event.</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataConstructorPrototype.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataConstructorPrototype.ElementType">
            <summary>
            Gets type of this element.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMetaDataDestructorElement">
            <summary>
            Represents a method.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataDestructorElement.#ctor">
            <summary>
            Creates a new instance of LiteMetaDataDestructorElementt
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataDestructorElement.#ctor(System.String)">
            <summary>
            Creates a new instance of LiteMetaDataDestructorElement
            </summary>
            <param name="name">The name of the event.</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataDestructorElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataDestructorElement.IsDestructor">
            <summary>
            Returns true if element is destructor
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataDestructorElement.MethodType">
            <summary>
            The type of this method (e.g., Constructor, Destructor, Procedure or Function)
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMetaDataDestructorPrototype">
            <summary>
            LiteMetaDataDestructorPrototype represent constructor prototype.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataDestructorPrototype.#ctor">
            <summary>
            Creates a new instance of LiteMetaDataDestructorPrototype
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataDestructorPrototype.#ctor(System.String)">
            <summary>
            Creates a new instance of LiteMetaDataDestructorPrototype
            </summary>
            <param name="name">The name of the event.</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataDestructorPrototype.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataDestructorPrototype.ElementType">
            <summary>
            Gets type of this element.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMetaDataFinalizerElement">
            <summary>
            Represents a method.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataFinalizerElement.#ctor">
            <summary>
            Creates a new instance of LiteMetaDataFinalizerElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataFinalizerElement.#ctor(System.String)">
            <summary>
            Creates a new instance of LiteMetaDataFinalizerElement
            </summary>
            <param name="name">The name of the event.</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataFinalizerElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataFinalizerElement.MethodType">
            <summary>
            The type of this method (e.g., Constructor, Destructor, Procedure or Function)
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMetaDataFinalizerPrototype">
            <summary>
            LiteMetaDataDestructorPrototype represent constructor prototype.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataFinalizerPrototype.#ctor">
            <summary>
            Creates a new instance of LiteMetaDataFinalizerPrototype
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataFinalizerPrototype.#ctor(System.String)">
            <summary>
            Creates a new instance of LiteMetaDataFinalizerPrototype
            </summary>
            <param name="name">The name of the event.</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataFinalizerPrototype.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataFinalizerPrototype.ElementType">
            <summary>
            Gets type of this element.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMetaDataEnumElement">
            <summary>
            Represents a enum element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataEnumElement.#ctor">
            <summary>
            Creates a new instance of LiteMetaDataEnumElement
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataEnumElement.#ctor(System.String)">
            <summary>
            Creates a new instance of LiteMetaDataEnumElement
            </summary>
            <param name="name">Name of enum element</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataEnumElement.#ctor(System.String,DevExpress.CodeRush.StructuralParser.LiteMetaDataExpression)">
            <summary>
            Creates a new instance of LiteMetaDataEnumElement
            </summary>
            <param name="name">Name of enum element</param>
            <param name="valueExpression">Value expression of enum element</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataEnumElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataEnumElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataEnumElement.SetValueExpression(DevExpress.CodeRush.StructuralParser.LiteMetaDataExpression)">
            <summary>
            Sets value expression of this element.
            </summary>
            <param name="valueExpression">The value to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataEnumElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataEnumElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataEnumElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataEnumElement.ValueExpression">
            <summary>
            Gets value expression for current enum element.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMetaDataEventElement">
            <summary>
            Represents an event.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataEventElement.#ctor">
            <summary>
            Creates a new instance of LiteMetaDataEventElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataEventElement.#ctor(System.String,DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Creates a new instance of LiteMetaDataEventElement
            </summary>
            <param name="name">The name of the event.</param>
            <param name="type">The type of the event.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataEventElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataEventElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataEventElement.SetAddMethod(DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement)">
            <summary>
            Sets add method.
            </summary>
            <param name="method">The method to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataEventElement.SetRemoveMethod(DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement)">
            <summary>
            Sets remove method.
            </summary>
            <param name="method">The method to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataEventElement.SetType(DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Sets type of this element.
            </summary>
            <param name="type">The type to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataEventElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataEventElement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataEventElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataEventElement.Type">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataEventElement.Parameters">
            <summary>
            Gets element parameters.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataEventElement.AddMethod">
            <summary>
            Gets or sets Add method for event
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataEventElement.RemoveMethod">
            <summary>
            Gets or sets Remove method for event
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataEventElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMetaDataFunctionElement">
            <summary>
            Summary description for LiteMetaDataFunctionElement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataFunctionElement.#ctor">
            <summary>
            Creates a new instance of LiteMetaDataFunctionElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataFunctionElement.#ctor(System.String,DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Creates a new instance of LiteMetaDataFunctionElement
            </summary>
            <param name="name">The name of the event.</param>
            <param name="type">The type of the event.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataFunctionElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataFunctionElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataFunctionElement.SetType(DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Sets type of this element.
            </summary>
            <param name="type">The type to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataFunctionElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The clone options.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataFunctionElement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataFunctionElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataFunctionElement.Type">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataFunctionElement.MethodType">
            <summary>
            The type of this method (e.g., Constructor, Destructor, Procedure or Function)
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMetaDataFunctionPrototype">
            <summary>
            LiteMetaDataFunctionPrototype represent function prototype.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataFunctionPrototype.#ctor">
            <summary>
            Creates a new instance of LiteMetaDataFunctionPrototype
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataFunctionPrototype.#ctor(System.String,DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Creates a new instance of LiteMetaDataFunctionPrototype
            </summary>
            <param name="name">The name of the event.</param>
            <param name="type">The type of the event.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataFunctionPrototype.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataFunctionPrototype.ElementType">
            <summary>
            Gets type of this element.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMetaDataIndexerPropertyElement">
            <summary>
            Represents a property.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMetaDataPropertyElement">
            <summary>
            Represents a property.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataPropertyElement.#ctor">
            <summary>
            Creates a new instance of LiteMetaDataPropertyElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataPropertyElement.#ctor(System.String,DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Creates a new instance of LiteMetaDataPropertyElement
            </summary>
            <param name="name">The name of the event.</param>
            <param name="type">The type of the event.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataPropertyElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataPropertyElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataPropertyElement.SetGetMethod(DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement)">
            <summary>
            Sets add method.
            </summary>
            <param name="method">The method to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataPropertyElement.SetSetMethod(DevExpress.CodeRush.StructuralParser.LiteMetaDataMethodElement)">
            <summary>
            Sets remove method.
            </summary>
            <param name="method">The method to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataPropertyElement.SetType(DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Sets type of this element.
            </summary>
            <param name="type">The type to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataPropertyElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataPropertyElement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataPropertyElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataPropertyElement.IsIndexed">
            <summary>
            Retruns true if property is indexer.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataPropertyElement.IsExplicitInterfaceMember">
            <summary>
            Returns true if this member is explicitly declared interface member.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataPropertyElement.IsAutoImplemented">
            <summary>
            Returns true is property is autoimplemented.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataPropertyElement.Type">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataPropertyElement.GetMethod">
            <summary>
            Returns property getter.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataPropertyElement.SetMethod">
            <summary>
            Returns property setter.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataPropertyElement.Parameters">
            <summary>
            Gets element parameters.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataPropertyElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataIndexerPropertyElement.#ctor">
            <summary>
            Creates a new instance of LitePropertyElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataIndexerPropertyElement.#ctor(System.String,DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression)">
            <summary>
            Creates a new instance of LitePropertyElement
            </summary>
            <param name="name">The name of the event.</param>
            <param name="type">The type of the event.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataIndexerPropertyElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataIndexerPropertyElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataIndexerPropertyElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataIndexerPropertyElement.AddParameter(DevExpress.CodeRush.StructuralParser.LiteMetaDataParameterElement)">
            <summary>
            Adds parameter to this element.
            </summary>
            <param name="parameter">The parameter to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataIndexerPropertyElement.AddParameters(DevExpress.CodeRush.StructuralParser.LiteParameterElementCollection)">
            <summary>
            Adds parameters to this element.
            </summary>
            <param name="parameters">The parameters to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataIndexerPropertyElement.SetParameters(DevExpress.CodeRush.StructuralParser.LiteParameterElementCollection)">
            <summary>
            Sets parameters to this element.
            </summary>
            <param name="parameters">The parameters to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataIndexerPropertyElement.RemoveParameter(DevExpress.CodeRush.StructuralParser.LiteMetaDataParameterElement)">
            <summary>
            Removes parameter from this element.
            </summary>
            <param name="parameter">The parameter to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataIndexerPropertyElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataIndexerPropertyElement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataIndexerPropertyElement.IsIndexed">
            <summary>
            Retruns true if property is indexer.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataIndexerPropertyElement.Parameters">
            <summary>
            Gets element parameters.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMetaDataParameterElement">
            <summary>
            Represents a parameter.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataParameterElement.#ctor">
            <summary>
            Creates a new instance of LiteMetaDataParameterElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataParameterElement.#ctor(System.String,DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Creates a new instance of LiteMetaDataParameterElement
            </summary>
            <param name="name">The name of the event.</param>
            <param name="type">The type of the event.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataParameterElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataParameterElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataParameterElement.SetType(DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Sets type of this element.
            </summary>
            <param name="type">The type to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataParameterElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataParameterElement.AddAttribute(DevExpress.CodeRush.StructuralParser.LiteMetaDataAttributeElement)">
            <summary>
            Adds attribute to the member.
            </summary>
            <param name="attr">The LiteAttributeElement to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataParameterElement.AddAttributes(DevExpress.CodeRush.StructuralParser.LiteAttributeElementCollection)">
            <summary>
            Adds attributes to the member.
            </summary>
            <param name="attributes">The attributes to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataParameterElement.SetAttributes(DevExpress.CodeRush.StructuralParser.LiteAttributeElementCollection)">
            <summary>
            Sets attributes to this element.
            </summary>
            <param name="attributes">The attributes to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataParameterElement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataParameterElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataParameterElement.Is(System.String)">
            <summary>
            Returns true if Type of this element is the same as, or 
            descends from, the specified type.
            Returns false otherwise.
            </summary>
            <param name="fullTypeName">Full type name of the type to check.</param>
            <returns>
            Returns true if Type of this element is the same as, or 
            descends from, the specified type.
            Returns false otherwise.
            </returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataParameterElement.Is(DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Returns true if type of this element is the same as, or descends from, 
            the specified ITypeElement.
            Returns false otherwise.
            </summary>
            <param name="type">The ITypeElement to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataParameterElement.Is(System.Type)">
            <summary>
            Returns true if type of this element is the same as, or descends from, 
            the specified Type.
            Returns false otherwise.
            </summary>
            <param name="type">The Type to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataParameterElement.Is(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,System.String)">
            <summary>
            Returns true if this type element is the same as, or descends from, 
            the specified type.
            Returns false otherwise.
            </summary>
            <param name="resolver">The source tree resolver instance to use.</param>
            <param name="fullTypeName">The full name (e.g., "System.Drawing.Point") of 
            the type to compare against.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataParameterElement.Name">
            <summary>
            Gets element name.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataParameterElement.Type">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataParameterElement.Direction">
            <summary>
            Gets or sets argument direction for parameter
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataParameterElement.IsOptional">
            <summary>
            Gets or sets value determining if parameter is optional.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataParameterElement.IsParamArray">
            <summary>
            Returns true if parameter is defined as param array.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataParameterElement.IsImplicit">
            <summary>
            Returns true if this declaration is implicit.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataParameterElement.IsReturnedValue">
            <summary>
            Returns true if this declaration is used as return value.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataParameterElement.IsArgList">
            <summary>
            Returns true if parameter is __arglist.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataParameterElement.IsAspxTag">
            <summary>
            Returns true if this variable was created from Aspx tag.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataParameterElement.IsRunAtServer">
            <summary>
            Returns true if this variable was created from Aspx tag and has runat=server attribute.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataParameterElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataParameterElement.IsTypeDef">
            <summary>
            Gets or sets value indicating that this 
            element is a typedef declaration.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataOptionalParameterElement.#ctor">
            <summary>
            Creates a new instance of LiteMetaDataOptionalParameterElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataOptionalParameterElement.#ctor(System.String,DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Creates a new instance of LiteMetaDataOptionalParameterElement
            </summary>
            <param name="name">The name of the parameter.</param>
            <param name="type">The type of the parameter.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataOptionalParameterElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataOptionalParameterElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataOptionalParameterElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataOptionalParameterElement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataOptionalParameterElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataOptionalParameterElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataOptionalParameterElement.IsOptional">
            <summary>
            Gets or sets value determining if parameter is optional.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataOptionalParameterElement.DefaultValue">
            <summary>
            Gets or sets default value of the optional parameter.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMetaDataProcedureElement">
            <summary>
            LiteMetaDataProcedureElement represent method with no return type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataProcedureElement.#ctor">
            <summary>
            Creates a new instance of LiteMetaDataProcedureElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataProcedureElement.#ctor(System.String)">
            <summary>
            Creates a new instance of LiteMetaDataProcedureElement
            </summary>
            <param name="name">The name of the event.</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataProcedureElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMetaDataProcedurePrototype">
            <summary>
            LiteProcedurePrototype represent method prototype with no return type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataProcedurePrototype.#ctor">
            <summary>
            Creates a new instance of LiteMetaDataProcedureElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataProcedurePrototype.#ctor(System.String)">
            <summary>
            Creates a new instance of LiteMetaDataProcedureElement
            </summary>
            <param name="name">The name of the event.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataProcedurePrototype.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataProcedurePrototype.ElementType">
            <summary>
            Gets type of this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataStringTable.Count">
            <summary>
            Gets the count of the records in the table.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataAttributeElement.SetQualifier(DevExpress.CodeRush.StructuralParser.LiteMetaDataExpression)">
            <summary>
            Sets type of this element.
            </summary>
            <param name="qualifier">The qualifier to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataAttributeElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataAttributeElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataAttributeElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataAttributeElement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataAttributeElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataAttributeElement.#ctor(System.String)">
            <summary>
            Creates a new instance of LiteMetaDataAttributeElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataAttributeElement.#ctor(System.String,DevExpress.CodeRush.StructuralParser.LiteMetaDataExpression)">
            <summary>
            Creates a new instance of LiteMetaDataAttributeElement
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataAttributeElement.Name">
            <summary>
            Gets or sets attribute name.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataAttributeElement.Arguments">
            <summary>
            Gets attribute arguments.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataAttributeElement.HasTargetNode">
            <summary>
            Defines if attribute has target node.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataAttributeElement.Qualifier">
            <summary>
            Gets attribute qualifier.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataAttributeElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataAttributeElement.ImageIndex">
            <summary>
            Gets element image index.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataAttributeElement.DevExpress#CodeRush#StructuralParser#IWithSource#Source">
            <summary>
            Gets attribute qualifier.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMetaDataClassElement">
            <summary>
            Summary description for LiteMetaDataClassElement.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement">
            <summary>
            Represents lite weight type.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.#ctor">
            <summary>
            Creates new instance of LiteMetaDataTypeElement.
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.#ctor(System.String)">
            <summary>
            Creates new instance of LiteMetaDataTypeElement.
            </summary>
            <param name="name">The name of the element.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.SetPrimaryAncestor(DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression)">
            <summary>
            Sets primary ancestor.
            </summary>
            <param name="ancestor">The ancestor to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.AddSecondaryAncestor(DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression)">
            <summary>
            Adds secondary ancestor to this element.
            </summary>
            <param name="ancestor">The ancestor to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.RemoveSecondaryAncestor(DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeReferenceExpression)">
            <summary>
            Removes secondary ancestor from this element.
            </summary>
            <param name="ancestor">The ancestor to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.AddTypeParameter(DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeParameterElement)">
            <summary>
            Adds type parameter to this element.
            </summary>
            <param name="typeParameter">The type parameter to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.AddTypeParameters(DevExpress.CodeRush.StructuralParser.LiteTypeParameterCollection)">
            <summary>
            Adds type parameters to this element.
            </summary>
            <param name="typeParameters">The type parameters to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.SetTypeParameters(DevExpress.CodeRush.StructuralParser.LiteTypeParameterCollection)">
            <summary>
            Sets type parameters.
            </summary>
            <param name="typeParameters">Parameters to set</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.RemoveTypeParameter(DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeParameterElement)">
            <summary>
            Removes type parameter from the element.
            </summary>
            <param name="typeParameter">The element to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.AddMember(DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement)">
            <summary>
            Adds member to this element.
            </summary>
            <param name="member">The member to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.RemoveMember(DevExpress.CodeRush.StructuralParser.LiteMetaDataMemberElement)">
            <summary>
            Removes member from this element.
            </summary>
            <param name="member">The member to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.AddChild(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Adds child element.
            </summary>
            <param name="element">The element to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.GetAllDescendants">
            <summary>
            Returns all descendants for this type declaration.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.GetAllDescendants(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns all descendants for this type declaration.
            </summary>
            <param name="scope">The scope to search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.GetAllDescendants(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Returns all descendants for this type declaration.
            </summary>
            <param name="resolver">The source tree resolver instance to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.GetAllDescendants(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns all descendants for this type declaration.
            </summary>
            <param name="resolver">The source tree resolver instance to use.</param>
            <param name="scope">The scope to search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.GetBaseType">
            <summary>
            Gets the base/ancestor type that this type descends/inherits from.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.GetBaseType(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Gets the base/ancestor type that this type descends/inherits from.
            </summary>
            <param name="resolver">The ISourceTreeResolver to use to resolve this type.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.GetBaseTypes">
            <summary>
            Gets all base/ancestor types that this type descends/inherits from.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.GetBaseTypes(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Gets all base/ancestor types that this type descends/inherits from.
            </summary>
            <param name="resolver">The ISourceTreeResolver to use to resolve this type.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.GetDescendants">
            <summary>
            Returns all direct descendants for this type declaration.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.GetDescendants(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns all direct descendants for this type declaration.
            </summary>
            <param name="scope">The scope to search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.GetDescendants(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Returns all direct descendants for this type declaration.
            </summary>
            <param name="resolver">The source tree resolver instance to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.GetDescendants(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns all direct descendants for this type declaration.
            </summary>
            <param name="resolver">The source tree resolver instance to use.</param>
            <param name="scope">The scope to search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.Is(System.String)">
            <summary>
            Returns true if this type element is the same as, or descends from, the specified type.
            Returns false otherwise.
            </summary>
            <param name="fullTypeName">The full name (e.g., "System.Drawing.Point") of the type to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.Is(DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Returns true if this type element is the same as, or descends from, the specified ITypeElement.
            Returns false otherwise.
            </summary>
            <param name="type">The ITypeElement to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.Is(System.Type)">
            <summary>
            Returns true if this type element is the same as, or descends from, the specified Type.
            Returns false otherwise.
            </summary>
            <param name="type">The Type to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.Is(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,System.String)">
            <summary>
            Returns true if this type element is the same as, or descends from, the specified type.
            Returns false otherwise.
            </summary>
            <param name="resolver">The source tree resolver instance to use.</param>
            <param name="fullTypeName">The full name (e.g., "System.Drawing.Point") of the type to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.Is(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Returns true if this type element is the same as, or descends from, the specified ITypeElement.
            Returns false otherwise.
            </summary>
            <param name="resolver">The source tree resolver instance to use.</param>
            <param name="type">The ITypeElement to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.Is(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,System.Type)">
            <summary>
            Returns true if this type element is the same as, or descends from, the specified Type.
            Returns false otherwise.
            </summary>
            <param name="resolver">The source tree resolver instance to use.</param>
            <param name="type">The Type to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.DescendsFrom(System.String)">
            <summary>
            Returns true if this type element descends from the specified type.
            Returns false otherwise.
            </summary>
            <param name="fullTypeName">The full name (e.g., "System.Drawing.Point") of the type to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.DescendsFrom(DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Returns true if this type element descends from the specified ITypeElement.
            Returns false otherwise.
            </summary>
            <param name="type">The ITypeElement to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.DescendsFrom(System.Type)">
            <summary>
            Returns true if this type element descends from the specified Type.
            Returns false otherwise.
            </summary>
            <param name="type">The Type to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.DescendsFrom(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,System.String)">
            <summary>
            Returns true if this type element descends from the specified type.
            Returns false otherwise.
            </summary>
            <param name="resolver">The source tree resolver instance to use.</param>
            <param name="fullTypeName">The full name (e.g., "System.Drawing.Point") of the type to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.DescendsFrom(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Returns true if this type element descends from the specified ITypeElement.
            Returns false otherwise.
            </summary>
            <param name="resolver">The source tree resolver instance to use.</param>
            <param name="type">The ITypeElement to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.DescendsFrom(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,System.Type)">
            <summary>
            Returns true if this type element descends from the specified Type.
            Returns false otherwise.
            </summary>
            <param name="resolver">The source tree resolver instance to use.</param>
            <param name="type">The Type to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.FindMember(System.String)">
            <summary>
            Returns member with the given name if it is declared inside this type or inside any
            of it's ancestors.
            </summary>
            <param name="name">The name of member to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.FindMember(System.String,System.Boolean)">
            <summary>
            Returns member with the given name if it is declared inside this type or inside any
            of it's ancestors if needed.
            </summary>
            <param name="name">The name of member to find.</param>
            <param name="searchInAncestors">The value indicating if member should be searched inside base types.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.FindMember(System.String,DevExpress.CodeRush.StructuralParser.IElementFilter,System.Boolean)">
            <summary>
            Returns member with the given name if it is declared inside this type or inside any
            of it's ancestors if needed.
            </summary>
            <param name="name">The name of member to find.</param>
            <param name="filter">The filter to use.</param>
            <param name="searchInAncestors">The value indicating if member should be searched inside base types.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.FindMembers(System.String)">
            <summary>
            Returns all members with the given name inside this type or inside any
            of it's ancestors.
            </summary>
            <param name="name">The name of members to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.FindMembers(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,System.String)">
            <summary>
            Returns members with the given name inside this type or inside any
            of it's ancestors if needed.
            </summary>
            <param name="name">The name of members to find.</param>
            <param name="resolver">The source tree resolver</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.FindMembers(System.String,System.Boolean)">
            <summary>
            Returns members with the given name inside this type or inside any
            of it's ancestors if needed.
            </summary>
            <param name="name">The name of members to find.</param>
            <param name="searchInAncestors">The value indicating if member should be searched inside base types.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.FindMembers(System.String,DevExpress.CodeRush.StructuralParser.IElementFilter,System.Boolean)">
            <summary>
            Returns members with the given name inside this type or inside any
            of it's ancestors if needed.
            </summary>
            <param name="name">The name of members to find.</param>
            <param name="filter">The filter to use.</param>
            <param name="searchInAncestors">The value indicating if member should be searched inside base types.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.FindMembers(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,System.String,DevExpress.CodeRush.StructuralParser.IElementFilter,System.Boolean)">
            <summary>
            Returns members with the given name inside this type or inside any
            of it's ancestors if needed.
            </summary>
            <param name="resolver">The instance of the ISourceTreeResolver implementor.</param>
            <param name="name">The name of members to find.</param>
            <param name="filter">The filter to use.</param>
            <param name="searchInAncestors">The value indicating if member should be searched inside base types.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.DescendsFrom(DevExpress.CodeRush.StructuralParser.ITypeElement,System.String)">
            <summary>
            Returns true if this type element descends from the specified ITypeElement.
            Returns false otherwise.
            </summary>
            <param name="type">The ITypeElement to compare against.</param>
            <param name="fullTypeName">The fullTypeName to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.DescendsFrom(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,DevExpress.CodeRush.StructuralParser.ITypeElement,System.String)">
            <summary>
            Returns true if this type element descends from the specified ITypeElement.
            Returns false otherwise.
            </summary>
            <param name="resolver">The source tree resolver instance to use.</param>
            <param name="type">The ITypeElement to compare against.</param>
            <param name="fullTypeName">The fullTypeName to check.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.PrimaryAncestor">
            <summary>
            Gets type reference to base type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.SecondaryAncestors">
            <summary>
            Gets type references to implemented interfaces.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.Members">
            <summary>
            Gets type members.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.TypeParameters">
            <summary>
            Gets type parameters.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.IsGeneric">
            <summary>
            Returns true if element is generic.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.IsActivatedGeneric">
            <summary>
            Returns true if element is activated.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.IsTypeParameter">
            <summary>
            Returns true if current type element was created for type parameter.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeElement.GenericTemplate">
            <summary>
            Returns template element that was used to activate generic.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataClassElement.#ctor">
            <summary>
            Creates new instance of LiteMetaDataClassElement.		
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataClassElement.#ctor(System.String)">
            <summary>
            Creates new instance of LiteMetaDataClassElement.
            <param name="name">The name of the class.</param>		
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataClassElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataClassElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMetaDataDelegateElement">
            <summary>
            Summary description for LiteMetaDataDelegateElement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataDelegateElement.#ctor">
            <summary>
            Creates new instance of LiteMetaDataDelegateElement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataDelegateElement.#ctor(System.String,DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Creates new instance of LiteMetaDataDelegateElement.
            </summary>
            <param name="name">The name of the delegate.</param>
            <param name="type">The type of the delegate.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataDelegateElement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataDelegateElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataDelegateElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataDelegateElement.SetType(DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Sets type of this element.
            </summary>
            <param name="type">The type to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataDelegateElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataDelegateElement.AddParameter(DevExpress.CodeRush.StructuralParser.LiteMetaDataParameterElement)">
            <summary>
            Adds parameter to this element.
            </summary>
            <param name="parameter">The parameter to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataDelegateElement.AddParameters(DevExpress.CodeRush.StructuralParser.LiteParameterElementCollection)">
            <summary>
            Adds parameters to this element.
            </summary>
            <param name="parameters">The parameters to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataDelegateElement.SetParameters(DevExpress.CodeRush.StructuralParser.LiteParameterElementCollection)">
            <summary>
            Sets parameters to this element.
            </summary>
            <param name="parameters">The parameters to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataDelegateElement.RemoveParameter(DevExpress.CodeRush.StructuralParser.LiteMetaDataParameterElement)">
            <summary>
            Removes parameter from this element.
            </summary>
            <param name="parameter">The parameter to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataDelegateElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataDelegateElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataDelegateElement.Type">
            <summary>
            Gets element type.
            </summary>		
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataDelegateElement.Parameters">
            <summary>
            Gets element parameters.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMetaDataEnumerationElement">
            <summary>
            Enumeration.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataEnumerationElement.#ctor">
            <summary>
            Creates new instance of LiteMetaDataEnumerationElement.
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataEnumerationElement.#ctor(System.String)">
            <summary>
            Creates new instance of LiteMetaDataEnumerationElement.
            </summary>
            <param name="name">The name of the enumeration.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataEnumerationElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataEnumerationElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataEnumerationElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataEnumerationElement.UnderlyingType">
            <summary>
            Gets type name for enumeration elements.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMetaDataInterfaceElement">
            <summary>
            Interface element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataInterfaceElement.#ctor">
            <summary>
            Creates new instance of the LiteMetaDataInterfaceElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataInterfaceElement.#ctor(System.String)">
            <summary>
            Creates new instance of the LiteMetaDataInterfaceElement
            </summary>
            <param name="name">The name of the interface.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataInterfaceElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataInterfaceElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMetaDataModuleElement">
            <summary>
            Module element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataModuleElement.#ctor">
            <summary>
            Creates new instance of the LiteMetaDataModuleElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataModuleElement.#ctor(System.String)">
            <summary>
            Creates new instance of the LiteMetaDataModuleElement
            </summary>
            <param name="name">The name of the module.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataModuleElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataModuleElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMetaDataStructElement">
            <summary>
            Structure element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataStructElement.#ctor">
            <summary>
            Creates new instance of the LiteMetaDataStructElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataStructElement.#ctor(System.String)">
            <summary>
            Creates new instance of the LiteMetaDataStructElement
            </summary>
            <param name="name">The name of the structure.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataStructElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataStructElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeParameterElement">
            <summary>
            Represents generic type parameter.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeParameterElement.#ctor">
            <summary>
            Creates a new instance of LiteMetaDataTypeParameterElement
            </summary>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeParameterElement.#ctor(System.String)">
            <summary>
            Creates a new instance of LiteMetaDataTypeParameterElement
            </summary>
            <param name="name">The name of the element.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeParameterElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeParameterElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeParameterElement.SetActivatedType(DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Sets activated type for the type parameter element.
            </summary>
            <param name="type">The type to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeParameterElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeParameterElement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeParameterElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeParameterElement.AddConstraint(DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeParameterConstraintElement)">
            <summary>
            Adds constraint to this element.
            </summary>
            <param name="constraint">The constraint to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeParameterElement.RemoveConstraint(DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeParameterConstraintElement)">
            <summary>
            Removes constraint from this element.
            </summary>
            <param name="constraint">The constraint to remove.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeParameterElement.Name">
            <summary>
            Gets element name.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeParameterElement.Constraints">
            <summary>
            Gets element parameters.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeParameterElement.IsActivated">
            <summary>
            Returns true if generic type parameter has
            been activated with some type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeParameterElement.ActivatedType">
            <summary>
            Gets type for the activated type parameter.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataTypeParameterElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.LiteMetaDataNamespaceElement">
            <summary>
            Represents lite weight namespace.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataNamespaceElement.#ctor">
            <summary>
            Creates new instance of LiteMetaDataNamespaceElement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataNamespaceElement.#ctor(System.String)">
            <summary>
            Creates new instance of LiteMetaDataNamespaceElement.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataNamespaceElement.Accept(DevExpress.CodeRush.StructuralParser.IElementVisitor)">
            <summary>
            Accepts the given visitor.
            </summary>
            <param name="visitor">The visitor to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataNamespaceElement.GetAllChildren">
            <summary>
            Returns all children of this element.
            </summary>
            <returns>Returns all children of this element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataNamespaceElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataNamespaceElement.ReplaceChild(DevExpress.CodeRush.StructuralParser.LiteElement,DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Replaces element child.
            </summary>
            <param name="oldElement">The child to replace.</param>
            <param name="newElement">The new element to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataNamespaceElement.AddType(DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Adds type element to the namespace.
            </summary>
            <param name="type">The type to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataNamespaceElement.RemoveType(DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Removes type element from the namespace.
            </summary>
            <param name="type">The type to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataNamespaceElement.AddNamespace(DevExpress.CodeRush.StructuralParser.INamespaceElement)">
            <summary>
            Adds namespace element to the namespace.
            </summary>
            <param name="aNamespace">The namespace to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataNamespaceElement.RemoveNamespace(DevExpress.CodeRush.StructuralParser.INamespaceElement)">
            <summary>
            Removes namespace element from the namespace.
            </summary>
            <param name="aNamespace">The namespace to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataNamespaceElement.AddGlobal(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Adds global declaration to the namespace.
            </summary>
            <param name="global">The global declaration to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataNamespaceElement.RemoveGlobal(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Removes global declaration from the namespace.
            </summary>
            <param name="global">The global declaration to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataNamespaceElement.AddChild(DevExpress.CodeRush.StructuralParser.LiteElement)">
            <summary>
            Adds element to the namespace.
            </summary>
            <param name="element">The LiteElement to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.LiteMetaDataNamespaceElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataNamespaceElement.ChildrenList">
            <summary>
            Gets all namespace children.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataNamespaceElement.TypesList">
            <summary>
            Gets type elements list.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataNamespaceElement.NamespacesList">
            <summary>
            Gets namespace elements list.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataNamespaceElement.GlobalsList">
            <summary>
            Gets namespace global declarations list.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataNamespaceElement.CodeChildren">
            <summary>
            Gets children elements located in body of current statement.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataNamespaceElement.Name">
            <summary>
            Gets namespace name.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataNamespaceElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataNamespaceElement.ImageIndex">
            <summary>
            Gets element image index.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataNamespaceElement.Namespaces">
            <summary>
            Gets child namespaces.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataNamespaceElement.Types">
            <summary>
            Gets namespace types.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataNamespaceElement.AllNamespaces">
            <summary>
            Gets enumeration for all namespaces.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataNamespaceElement.AllTypes">
            <summary>
            Gets enumeration for all types.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.LiteMetaDataNamespaceElement.Globals">
            <summary>
            Gets namespace global declarations.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.Parser">
            <summary>
            Provides methods to initiate a parse.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Parser.Parse(DevExpress.CodeRush.StructuralParser.ISourceReader)">
            <summary>
            Parses the specified source document and returns the context for the parse.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Parser.Parse(DevExpress.CodeRush.StructuralParser.VisualStudioDocument,DevExpress.CodeRush.StructuralParser.ISourceReader,DevExpress.CodeRush.StructuralParser.IDocument)">
            <summary>
            Parses the specified source document and returns the context for the parse.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Parser.Parse(DevExpress.CodeRush.StructuralParser.SourceFile,DevExpress.CodeRush.StructuralParser.ISourceReader,DevExpress.CodeRush.StructuralParser.IDocument)">
            <summary>
            Parses the specified source document and returns the context for the parse.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Parser.Parse(System.String,DevExpress.CodeRush.StructuralParser.ISourceReader,DevExpress.CodeRush.StructuralParser.ProjectElement)">
            <summary>
            Parses the specified source document and returns the context for the parse.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Parser.Parse(DevExpress.CodeRush.StructuralParser.ParserContext,DevExpress.CodeRush.StructuralParser.ISourceReader)">
            <summary>
            Parses the specified source document and returns the context for the parse.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Parser.Parse(DevExpress.CodeRush.StructuralParser.ParserContext,DevExpress.CodeRush.StructuralParser.ISourceReader,System.Boolean@)">
            <summary>
            Parses the specified source document and returns the context for the parse.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParserServices.RegisterLanguageService(DevExpress.CodeRush.StructuralParser.ILanguageService)">
            <summary>
            Registers ILanguageService implementer to provide access to language level possibilities.
            </summary>
            <param name="service">The ILanguageService implementer.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParserServices.UnregisterLanguageService">
            <summary>
            Unregisters language service.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParserServices.RegisterSourceModelService(DevExpress.CodeRush.StructuralParser.ISourceModelService)">
            <summary>
            Registers ISourceModelService implementer.
            </summary>
            <param name="service">The ISourceModelService implementer.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParserServices.UnregisterSourceModelService">
            <summary>
            Unregisters ISourceModelService implementer.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParserServices.RegisterSolutionService(DevExpress.CodeRush.StructuralParser.ISolutionService)">
            <summary>
            Registers ISolutionService implementer.
            </summary>
            <param name="service">The ISolutionService implementer.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParserServices.UnregisterSolutionService">
            <summary>
            Unregisters ISolutionService implementer.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParserServices.RegisterCodeModelService(DevExpress.CodeRush.StructuralParser.ICodeModelService)">
            <summary>
            Registers ICodeModelService implementer.
            </summary>
            <param name="service">The ICodeModelService implementer.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParserServices.UnregisterCodeModelService">
            <summary>
            Unregisters ICodeModelService implementer.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParserServices.RegisterProfilingService(DevExpress.CodeRush.StructuralParser.IProfilingService)">
            <summary>
            Registers IProfilingService implementer to provide profiling possibilities.
            </summary>
            <param name="service">The IProfilingService implementer.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParserServices.UnregisterProfilingService">
            <summary>
            Unregisters profiling service.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParserServices.RegisterRefactoringService(DevExpress.CodeRush.StructuralParser.IRefactoringService)">
            <summary>
            Registers IRefactoringService implementer to provide refactoring possibilities.
            </summary>
            <param name="service">The IRefactoringService implementer.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParserServices.UnregisterRefactoringService">
            <summary>
            Unregisters refactoring service.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParserServices.RegisterStringService(DevExpress.CodeRush.StructuralParser.IStringService)">
            <summary>
            Registers IStringService implementer to provide string possibilities.
            </summary>
            <param name="service">The IStringService implementer.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParserServices.UnregisterStringService">
            <summary>
            Unregisters string service.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParserServices.RegisterXmlDocParser(DevExpress.CodeRush.StructuralParser.IXmlDocParser)">
            <summary>
            Registers IXmlDocParser implementer to provide Xml doc comments parsing possibilities.
            </summary>
            <param name="parser">The IXmlDocParser implementer.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParserServices.UnregisterXmlDocParser">
            <summary>
            Unregisters Xml doc parser.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParserServices.RegisterExpressionSimplifier(DevExpress.CodeRush.StructuralParser.IExpressionSimplifier)">
            <summary>
            Registers IExpressionSimplifier implementer to provide simplification possibilities.
            </summary>
            <param name="simplifier">The IExpressionSimplifier implementer.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParserServices.UnregisterExpressionSimplifier">
            <summary>
            Unregisters IExpressionSimplifier implementer.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParserServices.RegisterSourceTreeResolver(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Registers ISourceTreeResolver implementer to provide resolving possibilities.
            </summary>
            <param name="resolver">The ISourceTreeResolver implementer.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParserServices.UnregisterSourceTreeResolver">
            <summary>
            Unregisters ISourceTreeResolver implementer.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParserServices.RegisterLoaderService(DevExpress.CodeRush.Common.ILoaderService)">
            <summary>
            Registers ILoaderService implementer.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParserServices.UnregisterLoaderService">
            <summary>
            Unregisters ILoaderService implementer.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParserServices.RegisterDocumentServices(DevExpress.CodeRush.StructuralParser.IDocumentServices)">
            <summary>
            Registers IDocumentServices implementer.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParserServices.UnregisterDocumentServices">
            <summary>
            Unregisters ILoaderService implementer.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParserServices.RegisterSynchronizationService(DevExpress.CodeRush.StructuralParser.ISynchronizationService)">
            <summary>
            Registers ISynchronizationService implementer.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParserServices.UnregisterSynchronizationService">
            <summary>
            Unregisters ISynchronizationService implementer.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParserServices.RegisterContentService(DevExpress.CodeRush.StructuralParser.IContentService)">
            <summary>
            Registers IContentService implementer.
            </summary>
            <param name="service">The IContentService implementer.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParserServices.UnregisterContentService">
            <summary>
            Unregisters IContentService implementer.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParserServices.RegisterCodeStyleService(DevExpress.DXCore.CodeStyle.ICodeStyleServices)">
            <summary>
            Registers ICodeStyleServices implementer.
            </summary>
            <param name="service">The ICodeStyleServices implementer.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParserServices.UnregisterCodeStyleService">
            <summary>
            Unregisters ICodeStyleServices implementer.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParserServices.RegisterIssueService(DevExpress.CodeRush.StructuralParser.IIssueService)">
            <summary>
            Registers IIssueService implementer.
            </summary>
            <param name="service">The IIssueService implementer.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParserServices.UnregisterIssueService">
            <summary>
            Unregisters IIssueService implementer.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParserServices.RegisterVSSettingsService(DevExpress.CodeRush.StructuralParser.IVSSettingsService)">
            <summary>
            Registers IVSSettingsService implementer.
            </summary>
            <param name="service">The IVSSettingsService implementer.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParserServices.UnregisterVSSettingsService">
            <summary>
            Unregisters IVSSettingsService implementer.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParserServices.RegisterGraphicsService(DevExpress.CodeRush.StructuralParser.IGraphicsService)">
            <summary>
            Registers IGraphicsService implementer.
            </summary>
            <param name="service">The IGraphicsService implementer.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParserServices.UnregisterGraphicstService">
            <summary>
            Unregisters IGraphicsService implementer.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParserServices.RegisterSearcherService(DevExpress.CodeRush.StructuralParser.ISearcherService)">
            <summary>
            Registers ISearcherService implementer.
            </summary>
            <param name="service">The ISearcherService implementer.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParserServices.UnregisterSearcherService">
            <summary>
            Unregisters ISearcherService implementer.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParserServices.RegisterDecompilerService(DevExpress.CodeRush.StructuralParser.IDecompilerService)">
            <summary>
            Registers IDecompilerService implementer.
            </summary>
            <param name="service">The IDecompilerService implementer.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParserServices.UnregisterDecompilerService">
            <summary>
            Unregisters IDecompilerService implementer.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParserServices.RegisterNamespaceImportService(DevExpress.CodeRush.StructuralParser.INamespaceImportService)">
            <summary>
            Registers INamespaceImportService implementer.
            </summary>
            <param name="service">The INamespaceImportService implementer.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ParserServices.UnregisterNamespaceImportService">
            <summary>
            Unregisters INamespaceImportService implementer.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParserServices.HasLanguageService">
            <summary>
            Checks if language service was registered.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParserServices.HasSourceModelService">
            <summary>
            Checks if source model service was registered.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParserServices.HasSolutionService">
            <summary>
            Checks if solution service was registered.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParserServices.HasCodeModelService">
            <summary>
            Checks if code model service was registered.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParserServices.HasProfilingService">
            <summary>
            Checks if profiling service was registered.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParserServices.HasRefactoringService">
            <summary>
            Checks if refactoring service was registered.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParserServices.HasStringService">
            <summary>
            Checks if string service was registered.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParserServices.HasXmlDocParser">
            <summary>
            Checks if Xml doc parser was registered.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParserServices.HasExpressionSimplifier">
            <summary>
            Checks if expression simplifier was registered.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParserServices.HasSourceTreeResolver">
            <summary>
            Checks if resolver was registered.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParserServices.HasDocumentServices">
            <summary>
            Checks if document services was registered.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParserServices.HasSynchronizationService">
            <summary>
            Checks if synchronization service was registered.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParserServices.HasContentService">
            <summary>
            Checks if content service was registered.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParserServices.HasCodeStyleService">
            <summary>
            Checks if code style service was registered.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParserServices.HasIssueService">
            <summary>
            Checks if issue service was registered.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParserServices.HasVSSettingsService">
            <summary>
            Checks if VSSettings service was registered.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParserServices.HasGraphicsService">
            <summary>
            Checks if graphics service was registered.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParserServices.HasSearcherService">
            <summary>
            Checks if searcher service was registered.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParserServices.HasDecompilerService">
            <summary>
            Checks if decompiler service was registered.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParserServices.HasNamespaceImportService">
            <summary>
            Checks if NamespaceImport service was registered.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParserServices.LanguageService">
            <summary>
            Gets ILanguageService implementer. Will throw exception if language service is not registered.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParserServices.SourceModelService">
            <summary>
            Gets registered source model service.
            Throws an Exception if service was not previously registered.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParserServices.SolutionService">
            <summary>
            Gets registered solution service.
            Throws an Exception if service was not previously registered.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParserServices.CodeModelService">
            <summary>
            Gets registered code model service.
            Throws an Exception if service was not previously registered.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParserServices.RefactoringService">
            <summary>
            Gets IRefactoringService implementer. Will throw exception if refactoring service is not registered.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParserServices.ProfilingService">
            <summary>
            Gets IProfilingService implementer. Will throw exception if profiling service is not registered.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParserServices.StringService">
            <summary>
            Gets IStringService implementer. Will throw exception if string service is not registered.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParserServices.XmlDocParser">
            <summary>
            Gets registered Xml doc parser. Throws an Exception if Xml doc parser was not previously registered.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParserServices.ExpressionSimplifier">
            <summary>
            Gets registered expression simplifier.
            Throws an Exception if simplifier was not previously registered.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParserServices.SourceTreeResolver">
            <summary>
            Gets registered source tree resolver.
            Throws an Exception if resolver was not previously registered.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParserServices.DocumentServices">
            <summary>
            Gets registered document services.
            Throws an Exception if document services implementor was not previously registered.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParserServices.Synchronization">
            <summary>
            Gets registered synchronization service.
            Throws an Exception if synchronization service implementor was not previously registered.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParserServices.ContentService">
            <summary>
            Gets registered content service.
            Throws an Exception if content service implementor was not previously registered.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParserServices.CodeStyleService">
            <summary>
            Gets registered code style service. Throws an Exception if a service implementor was not previously registered.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParserServices.IssueService">
            <summary>
            Gets registered issue service.
            Throws an Exception if issue service implementor was not previously registered.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParserServices.VSSettingsService">
            <summary>
            Gets registered VSSettings service.
            Throws an Exception if VSSettings service implementor was not previously registered.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParserServices.GraphicsService">
            <summary>
            Gets registered graphics service.
            Throws an Exception if graphics service implementor was not previously registered.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParserServices.SearcherService">
            <summary>
            Gets registered search service.
            Throws an Exception if search service implementor was not previously registered.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParserServices.DecompilerService">
            <summary>
            Gets registered decompiler service
            Throws an Exception if decompiler service implementor was not previously registered.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ParserServices.NamespaceImportService">
            <summary>
            Gets registered NamespaceImport service
            Throws an Exception if NamespaceImport service implementor was not previously registered.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.AssemblyModelBase">
            <summary>
            Stores language elements obtained from assembly meta data information.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyModelBase.#ctor(DevExpress.CodeRush.StructuralParser.AssemblyReference)">
            <summary>
            Creates a new instance of AssemblyModelBase
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyModelBase.AddElementsToNodes(DevExpress.CodeRush.StructuralParser.IElementCollection)">
            <summary>
            Adds newly added elements to the model.
            </summary>
            <param name="rootElements">The root elements to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyModelBase.AddElementToRootHash(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Adds element to root elements hash storage for faster search.
            </summary>
            <param name="element">The element to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyModelBase.CompleteElement(DevExpress.CodeRush.StructuralParser.IElement,System.String)">
            <summary>
            Completes the given element.
            </summary>
            <param name="element">The element to complete.</param>
            <param name="fullName">The full name of the element.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyModelBase.BuildNewElement(DevExpress.CodeRush.StructuralParser.IElementCollection,System.String,System.Boolean)">
            <summary>
            Builds new language element.
            </summary>
            <param name="collector">The collection to add new element.</param>
            <param name="fullName">The element to build.</param>
            <param name="caseSensitive">Pass false to ignore case.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyModelBase.BuildNewElement(System.String,System.Boolean,System.Boolean)">
            <summary>
            Builds new language element.
            </summary>
            <param name="fullName">The element to build.</param>
            <param name="cache">Pass true to cache element.</param>
            <param name="caseSensitive">Pass false to ignore case.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyModelBase.CompleteElement(DevExpress.CodeRush.StructuralParser.IElement,System.Boolean)">
            <summary>
            Completes the given element.
            </summary>
            <param name="element">The element to complete.</param>
            <param name="full">Pass true to fully complete the element.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyModelBase.CompleteElementIfNeeded(DevExpress.CodeRush.StructuralParser.IElement,System.String)">
            <summary>
            Completes given element.
            </summary>
            <param name="element">The element to complete.</param>
            <param name="fullName"></param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyModelBase.FindElementByFullName(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Searhces element with the given full name inside this cache.
            </summary>
            <param name="fullName">The full name of the element to find.</param>
            <param name="cache">Pass true to cache element.</param>
            <param name="caseSensitive">Pass true to take string case into account.</param>
            <param name="complete">Pass true to complete element.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyModelBase.LoadIfNeeded">
            <summary>
            Loads assembly model data if it is not loaded.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyModelBase.Load">
            <summary>
            Loads assembly model data.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyModelBase.Clear">
            <summary>
            Clears assembly model.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.AssemblyModelBase.Assembly">
            <summary>
            Gets parent assembly reference for this model.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.AssemblyModelBase.RootElements">
            <summary>
            Gets root language elements stored in the cache.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.AssemblyModelBase.FriendAssemblyNames">
            <summary>
            Returns friend assembly names.
            Note: Internal members from current assembly model are opened for these assemblies.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.AssemblyReference">
            <summary>
            A reference from a project to a DLL assembly.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReference.CloneDataFrom(DevExpress.CodeRush.StructuralParser.BaseElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clone data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The options for element cloning.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReference.CreateFromReference(DevExpress.CodeRush.StructuralParser.AssemblyReference)">
            <summary>
            Creates a new instance of AssemblyReference from the AssemblyReference.
            </summary>
            <param name="reference">The reference to assembly.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReference.CreateFromReference(VSLangProj.Reference)">
            <summary>
            Creates a new instance of AssemblyReference from the VSLangProj.Reference instance.
            </summary>
            <param name="reference">The reference to assembly.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReference.CreateFromReference(DevExpress.DXCore.WebProjectInfo.WebSiteReferenceInfo)">
            <summary>
            Creates a new instance of AssemblyReference from the VSLangProj.Reference instance.
            </summary>
            <param name="reference">The reference to assembly.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReference.IsEqual(VSLangProj.Reference)">
            <summary>
            Returns true if this assembly source model was build for the
            given assembly reference.
            </summary>
            <param name="reference">The referene to assembly.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReference.IsEqual(DevExpress.CodeRush.StructuralParser.AssemblyReference)">
            <summary>
            Returns true if this assembly source model is equal for the
            given assembly model.
            </summary>
            <param name="reference">The assembly model to test.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReference.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.AssemblyReference.Aliases">
            <summary>
            Gets aliases defined for this assembly reference.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReferenceProxy.IsEqual(VSLangProj.Reference)">
            <summary>
            Returns true if this assembly source model was build for the
            given assembly reference.
            </summary>
            <param name="reference">The referene to assembly.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReferenceProxy.IsEqual(DevExpress.CodeRush.StructuralParser.AssemblyReference)">
            <summary>
            Returns true if this assembly source model is equal for the
            given assembly model.
            </summary>
            <param name="reference">The assembly model to test.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReferenceProxy.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.AssemblyReferenceProxy.Aliases">
            <summary>
            Gets aliases defined for this assembly reference.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReferenceCollection.Add(DevExpress.CodeRush.StructuralParser.AssemblyReference)">
            <summary>
            Adds assembly reference to the collection.
            </summary>
            <param name="reference">The reference to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReferenceCollection.AddUnique(DevExpress.CodeRush.StructuralParser.AssemblyReference)">
            <summary>
            Adds assembly reference to the collection if there is no
            duplicate found.
            </summary>
            <param name="reference">The reference to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReferenceCollection.AddRangeUnique(DevExpress.CodeRush.StructuralParser.AssemblyReferenceCollection)">
            <summary>
            Adds a collection of assembly reference instances to the collection.
            </summary>
            <param name="assemblies">The assemblies to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReferenceCollection.IndexOf(DevExpress.CodeRush.StructuralParser.AssemblyReference)">
            <summary>
            Returns the index of the given assembly reference.
            </summary>
            <param name="reference">The assembly reference to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReferenceCollection.Insert(System.Int32,DevExpress.CodeRush.StructuralParser.AssemblyReference)">
            <summary>
            Inserts assembly reference into the collection at the specified index.
            </summary>
            <param name="index">The index to insert assembly reference.</param>
            <param name="reference">The assembly reference to insert.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReferenceCollection.Remove(VSLangProj.Reference)">
            <summary>
            Removes assembly reference from the collection.
            </summary>
            <param name="reference">The assembly reference to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReferenceCollection.Remove(DevExpress.CodeRush.StructuralParser.AssemblyReference)">
            <summary>
            Removes assembly reference from the collection.
            </summary>
            <param name="reference">The assembly reference to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReferenceCollection.Find(DevExpress.CodeRush.StructuralParser.AssemblyReference)">
            <summary>
            Finds the given assembly reference in the collection.
            </summary>
            <param name="reference">The assembly reference to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReferenceCollection.FindEqual(VSLangProj.Reference)">
            <summary>
            Finds assembly reference equal to the given reference in the collection.
            </summary>
            <param name="reference">The assembly reference to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReferenceCollection.FindEqual(DevExpress.CodeRush.StructuralParser.AssemblyReference)">
            <summary>
            Finds assembly reference equal to the given assembly in the collection.
            </summary>
            <param name="reference">The assembly reference to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReferenceCollection.ContainsEqual(DevExpress.CodeRush.StructuralParser.AssemblyReference)">
            <summary>
            Returns true if there is an equal assembly in the collection.
            </summary>
            <param name="reference">The assembly reference to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReferenceCollection.Contains(DevExpress.CodeRush.StructuralParser.AssemblyReference)">
            <summary>
            Returns true if the given assembly is contained inside the collection.
            </summary>
            <param name="reference">The assembly to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReferenceCollection.ToArray">
            <summary>
            Creates an array of AssemblyReference instances.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.AssemblyReferenceCollection.Item(System.Int32)">
            <summary>
            Gets the assembly reference with the given index.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReferenceManager.GetAssemblyModelCookie(DevExpress.CodeRush.StructuralParser.AssemblyModelBase)">
            <summary>
            Returns assembly model cookie.
            </summary>
            <param name="model">The model to use.</param>
            <returns>Returns assembly model cookie.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReferenceManager.GetAssemblyModelCookie(System.String)">
            <summary>
            Returns assembly model cookie.
            </summary>
            <param name="name">The assembly model name.</param>
            <returns>Returns assembly model cookie.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReferenceManager.GetAssemblyModel(System.Int32)">
            <summary>
            Returns assembly model by the given hash code.
            </summary>
            <param name="code">The code of the assembly model to get.</param>
            <returns>Returns assembly model by the given hash code.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReferenceManager.CreateAssemblyModel(DevExpress.CodeRush.StructuralParser.AssemblyReference)">
            <summary>
            Creates assembly model for the given assembly reference.
            </summary>
            <param name="reference">The assembly reference to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReferenceManager.GetCoreAssemblyPath">
            <summary>
            Returns mscorlib assembly path.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReferenceManager.GetCoreAssemblyPath(DevExpress.CodeRush.StructuralParser.FrameworkVersion)">
            <summary>
            Returns mscorlib assembly path for specific FrameworkVersion.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReferenceManager.GetVBRuntimeAssemblyPath">
            <summary>
            Returns Microsoft.VisualBasic assembly path.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReferenceManager.GetVBRuntimeAssemblyPath(DevExpress.CodeRush.StructuralParser.FrameworkVersion)">
            <summary>
            Returns Microsoft.VisualBasic assembly path for specific FrameworkVersion.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReferenceManager.GetAssemblyPath(System.String)">
            <summary>
            Returns assembly path using given assembly name.
            </summary>
            <param name="assemblyName">The assembly name to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReferenceManager.FindAssemblyReference(DevExpress.CodeRush.StructuralParser.AssemblyReference)">
            <summary>
            Finds assembly reference using the given assemlby reference instance.
            </summary>
            <param name="assembly">The assembly reference to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReferenceManager.FindAssemblyReference(System.String)">
            <summary>
            Finds assembly reference with the given path.
            </summary>
            <param name="path">The path to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReferenceManager.AddAssemblyReference(DevExpress.CodeRush.StructuralParser.ProjectElement,DevExpress.CodeRush.StructuralParser.AssemblyReference)">
            <summary>
            Adds assembly reference to the manager.
            </summary>
            <param name="project">The project that references the assembly.</param>
            <param name="assembly">The assembly reference to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReferenceManager.RemoveAssemblyReference(DevExpress.CodeRush.StructuralParser.ProjectElement,DevExpress.CodeRush.StructuralParser.AssemblyReference)">
            <summary>
            Removes given assembly reference from the manager.
            </summary>
            <param name="project">The project that references the assembly.</param>
            <param name="assembly">The assembly reference to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReferenceManager.GetAssemblyReference(System.String)">
            <summary>
            Returns assembly reference for the given assembly path.
            </summary>
            <param name="path">The assembly file path to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReferenceManager.Rebuild">
            <summary>
            Rebuilds all assemblies.
            Cached assembly elements will be invalidated.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReferenceManager.Clear">
            <summary>
            Clears assebmly reference manager.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReferenceManager.LoadAllAssemblies">
            <summary>
            Loads data for all assemblies.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.AssemblyReferenceManager.GetAssemblyCachePath(DevExpress.CodeRush.StructuralParser.SolutionElement,System.String)">
            <summary>
            Returns assembly cache path for the given assembly.
            </summary>
            <param name="solution">The solution element to use.</param>
            <param name="assemblyPath">The assembly path to use.</param>
            <returns>Returns assembly cache path for the given assembly.</returns>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.AssemblyReferenceManager.Assemblies">
            <summary>
            Gets all assemblies.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.AssemblyReferenceManager.Stings">
            <summary>
            Gets assembly reference managers string storage.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.AssemblyReferenceManager.CanClear">
            <summary>
            Defines if assemples can be cleaned.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.AssemblyReferenceManager.Instance">
            <summary>
            Gets assembly reference manager instance.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.MetaDataAssemblyModel.CompleteElement(DevExpress.CodeRush.StructuralParser.IElement,System.String)">
            <summary>
            Completes the given element.
            </summary>
            <param name="element">The element to complete.</param>
            <param name="fullName"></param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.MetaDataAssemblyModel.BuildNewElement(DevExpress.CodeRush.StructuralParser.IElementCollection,System.String,System.Boolean)">
            <summary>
            Builds new language element.
            </summary>
            <param name="collector">The collection to add new element.</param>
            <param name="fullName">The element to build.</param>
            <param name="caseSensitive">Pass true to take string case into account.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.MetaDataAssemblyModel.LoadIfNeeded">
            <summary>
            Loads assembly model data if it is not loaded.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.MetaDataAssemblyModel.Load">
            <summary>
            Loads assembly model data.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.MetaDataAssemblyModel.FriendAssemblyNames">
            <summary>
            Returns friend assembly names.
            Note: Internal members from current assembly model are opened for these assemblies.
            </summary>
        </member>
        <member name="F:DevExpress.CodeRush.StructuralParser.MetaDataUtils.ByRefSuffix">
            <summary>
            Suffix for ref params.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.MetaDataUtils.RemoveByRefSuffix(System.String)">
            <summary>
            Removes by ref suffix from the given type name.
            </summary>
            <param name="typeName">The type name to process.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.MetaDataUtils.IsByRefType(DevExpress.DXCore.MetaData.ITypeInfo)">
            <summary>
            Returns true if the given type is passed by ref.
            </summary>
            <param name="typeInfo">The typeInfo to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.MetaDataUtils.GetUnderlyingTypeName(DevExpress.DXCore.MetaData.ITypeInfo)">
            <summary>
            Gets type name for the given MetaTypeInfo instance.
            All special characters are removed from the type.
            </summary>
            <param name="typeInfo">The type info to use.</param>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.MiscFiles">
            <summary>
            A collection of miscellaneous VisualStudioDocuments (not belonging to any
            project), kept in the Nodes property of this element.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.ProjectElement">
            <summary>
            The ProjectElement holds a list of all file nodes belonging
            to the project.
            </summary>
            <summary>
            The ProjectElement holds a list of all file nodes belonging
            to the project.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.CloneDataFrom(DevExpress.CodeRush.StructuralParser.BaseElement,DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clone data from the given element.
            Descendants should create new CloneDataFrom 
            method to clone specific data.
            </summary>
            <param name="source">The source element to clone data from.</param>
            <param name="options">The element cloning options.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.OnClose">
            <summary>
            Called when project is being closed.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.GetAppropriateParser(DevExpress.CodeRush.StructuralParser.ParserContext)">
            <summary>
            Returns appropriate parser for the given context.
            </summary>
            <param name="context">The context to parse.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.LoadProject(EnvDTE.Project)">
            <summary>
            Loads project element from the given EnvDTE.Project instance.
            </summary>
            <param name="project">The project to load.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.AddReference(VSLangProj.Reference)">
            <summary>
            Adds assembly reference.
            </summary>
            <param name="assembly">The assembly to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.AddReferenceByName(System.String)">
            <summary>
            Adds assembly reference given it's name.
            </summary>
            <param name="assemblyName">The name of the assembly to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.AddReferenceByName(System.String,System.String)">
            <summary>
            Adds assembly reference given it's name.
            </summary>
            <param name="assemblyName">The name of the assembly to add.</param>
            <param name="aliases">The aliases of the assembly to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.AddReference(DevExpress.CodeRush.StructuralParser.AssemblyReference)">
            <summary>
            Adds assembly reference.
            </summary>
            <param name="assembly">The assembly to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.AddImportedNamespace(System.String)">
            <summary>
            Adds imported namespace.
            </summary>
            <param name="nameSpace"></param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.AddImportedConfigNamespace(System.String)">
            <summary>
            Adds imported from config files namespace.
            </summary>
            <param name="nameSpace"></param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.AddProjectItem(EnvDTE.ProjectItem)">
            <summary>
            Adds project item to this project element.
            </summary>
            <param name="projectItem">The project item to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.AddProjectItem(DevExpress.CodeRush.StructuralParser.NodeList,System.String)">
            <summary>
            Adds project item to this project element.
            </summary>
            <param name="collector">The node list to add new item.</param>
            <param name="path">The path to the item to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.AddProjectItem(DevExpress.CodeRush.StructuralParser.NodeList,EnvDTE.ProjectItem)">
            <summary>
            Adds project item to this project element.
            </summary>
            <param name="collector">The node list to add new item.</param>
            <param name="projectItem">The project item to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.AddSourceFile(DevExpress.CodeRush.StructuralParser.SourceFile)">
            <summary>
            Adds the specified source file to the node list
            of this project element.
            </summary>
            <param name="file">The source file to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.AddVisualStudioDocument(DevExpress.CodeRush.StructuralParser.VisualStudioDocument)">
            <summary>
            Adds the specified source file to the node list
            of this project element.
            </summary>
            <param name="document">The source file to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.AddDiskFile(System.String)">
            <summary>
            Adds the specified disc files to this project element.
            </summary>
            <param name="path">The path to the file to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.AddDiskFile(System.String,System.Boolean)">
            <summary>
            Adds the specified disc files to this project element.
            </summary>
            <param name="path">The path to the file to add.</param>
            <param name="addXaml">The value indicating if xaml auto generated files should be handled.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.FindAssembly(DevExpress.CodeRush.StructuralParser.AssemblyReference)">
            <summary>
            Finds the given assembly reference in the collection.
            </summary>
            <param name="reference">The assembly reference to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.FindAssembly(VSLangProj.Reference)">
            <summary>
            Finds the given assembly reference in the collection.
            </summary>
            <param name="reference">The assembly reference to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.FindAssembly(System.String)">
            <summary>
            Finds the given assembly reference in the collection.
            </summary>
            <param name="name">The assembly reference to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.FindAssembly(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Finds the given assembly reference in the collection.
            </summary>
            <param name="name">The assembly reference to find.</param>
            <param name="publicKeyToken">The public key token to check. Pass null to ignore.</param>
            <param name="version">The version to check. Pass null to ignore.</param>
            <param name="ignoreCase">A bool value indicating case sensitive or insensitive comparison.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.FindAssemblyByAlias(System.String)">
            <summary>
            Finds assembly reference with the specified alias.
            </summary>
            <param name="alias">The alias of the assembly reference to find.</param>
            <returns>Assembly reference with the specified alias.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.FindAllAssembliesByAlias(System.String)">
            <summary>
            Finds all assembly references with the specified alias.
            </summary>
            <param name="alias">The alias of the assembly references to find.</param>
            <returns>All assembly references with the specified alias.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.FindAssembly(System.Predicate{DevExpress.CodeRush.StructuralParser.AssemblyReference})">
            <summary>
            Finds assembly reference using the specified predicate.
            </summary>
            <param name="predicate">The predicate to use for searching.</param>
            <returns>Assembly reference for the specified predicate.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.FindAllAssemblies(System.Predicate{DevExpress.CodeRush.StructuralParser.AssemblyReference})">
            <summary>
            Finds all assembly references using the specified predicate.
            </summary>
            <param name="predicate">The predicate to use for searching.</param>
            <returns>All assembly references for the specified predicate.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.FindDiskFile(System.String)">
            <summary>
            Returns disc file by its path.
            </summary>
            <param name="path">The path of the file to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.FindDiskFile(DevExpress.CodeRush.StructuralParser.SourceFile)">
            <summary>
            Returns disc file.
            </summary>
            <param name="file">The file to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.FindSourceFile(System.String)">
            <summary>
            Returns SourceFile with the given full name.
            </summary>
            <param name="fullName">The full name of the source file to return.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.FindByFullNameInsideAssemblies(System.String)">
            <summary>
            Searches the element with given full name inside project assemblies.
            </summary>
            <param name="fullName">The full name of the element to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.FindByFullNameInsideAssemblies(System.String,System.Boolean,System.Boolean)">
            <summary>
            Searches the element with given full name inside project assemblies.
            </summary>
            <param name="fullName">The full name of the element to find.</param>
            <param name="cache">Pass true to cache element.</param>
            <param name="caseSensitive">Perform case sensitive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.FindElementByFullName(System.String)">
            <summary>
            Finds a type or namespace with the given full name inside all source files of this project.
            </summary>
            <param name="fullName">The full name of the element to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.FindElementByFullName(System.String,System.Boolean)">
            <summary>
            Finds a type or namespace with the given full name inside all source files of this project.
            </summary>
            <param name="fullName">The full name of the element to find.</param>
            <param name="caseSensitive">Perform case sensitive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.FindElementByFullName(System.String,System.Boolean,System.Boolean)">
            <summary>
            Finds a type or namespace with the given full name inside all source files or assembly references 
            of this project.
            </summary>
            <param name="fullName">The full name of the element to find.</param>
            <param name="searchInAssemblies">Pass true to search inside assemblies if the element is not
            found inside project source files.</param>
            <param name="cache">Pass true to cache element.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.FindElementByFullName(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Finds a type or namespace with the given full name inside all source files or assembly references 
            of this project.
            </summary>
            <param name="fullName">The full name of the element to find.</param>
            <param name="searchInAssemblies">Pass true to search inside assemblies if the element is not
            found inside project source files.</param>
            <param name="cache">Pass true to cache element.</param>
            <param name="caseSensitive">Perform case sensitive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.FindElementInsideNamespace(System.String,System.String)">
            <summary>
            Finds an element with the given full name inside the specified namespace in 
            all source files of this project.
            </summary>
            <param name="namespaceFullName">The full name of the namespace to search in.</param>
            <param name="name">The full name of the element to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.FindElementInsideNamespace(System.String,System.String,System.Boolean)">
            <summary>
            Finds an element with the given full name inside the specified namespace in 
            all source files of this project.
            </summary>
            <param name="namespaceFullName">The full name of the namespace to search in.</param>
            <param name="name">The full name of the element to find.</param>
            <param name="isCaseSensitive">Perform case sensitive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.FindElementInsideParentNamespace(System.String,System.String)">
            <summary>
            Finds a type or namespace with the given full name inside all parents of the specified namespace in 
            all source files of this project.
            </summary>
            <param name="namespaceFullName">The full name of the namespace to search in.</param>
            <param name="name">The full name of the element to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.FindElementInsideParentNamespace(System.String,System.String,System.Boolean)">
            <summary>
            Finds a type or namespace with the given full name inside all parents of the specified namespace in 
            all source files of this project.
            </summary>
            <param name="namespaceFullName">The full name of the namespace to search in.</param>
            <param name="name">The full name of the element to find.</param>
            <param name="isCaseSensitive">Perform case sensitive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.FindElementInsideParentNamespace(DevExpress.CodeRush.StructuralParser.IElement,System.String)">
            <summary>
            Finds a type or namespace with the given full name inside all parents of the specified namespace in 
            all source files of this project and inside all using declarations nested in all parents namespaces.
            </summary>
            <param name="start">Start element for search.</param>
            <param name="name">The full name of the element to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.FindElementInsideIncludes(System.String,System.String)">
            <summary>
            Finds element with the specified name inside all included files starting from the given file.
            </summary>
            <param name="filePath">The full path of the start file.</param>
            <param name="name">The name of the element to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.FindExtensionMethods(System.String,System.String,System.Boolean)">
            <summary>
            Finds extension methods inside the specified namespace with the specified name.
            </summary>
            <param name="nameSpace">The namespace to search for extension methods.</param>
            <param name="name">The name of the extension method to search.</param>
            <param name="isCaseSensitive">Perform case sensitive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.FindExtensionMethods(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,System.String,System.String,System.Boolean)">
            <summary>
            Finds extension methods inside the specified namespace with the specified name.
            </summary>
            <param name="resolver">The resolver to use.</param>
            <param name="nameSpace">The namespace to search for extension methods.</param>
            <param name="name">The name of the extension method to search.</param>
            <param name="isCaseSensitive">Perform case sensitive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.FindCssStylesByClassName(DevExpress.CodeRush.StructuralParser.ISourceFile,System.String,System.String)">
            <summary>
            Finds CSS styles inside the file and a included files with the specified name.
            </summary>
            <param name="file">The file to find.</param>
            <param name="styleName">The name of the CSS style to find.</param>
            <param name="ancestorName">The name of ancestor selector.</param> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.FindCssStylesById(DevExpress.CodeRush.StructuralParser.ISourceFile,System.String,System.String)">
            <summary>
            Finds CSS styles inside the file and a included files with the specified id.
            </summary>
            <param name="file">The file to find.</param>
            <param name="id">The id of the CSS style to find.</param>
            <param name="ancestorName">The name of ancestor selector.</param> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.FindTypeOrNamespaceByFullName(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Finds a type or namespace with the given full name inside all source files or assembly references 
            of this project.
            </summary>
            <param name="fullName">The full name of the element to find.</param>
            <param name="searchInAssemblies">Pass true to search inside assemblies if the element is not
            found inside project source files.</param>
            <param name="cache">Pass true to cache element.</param>
            <param name="caseSensitive">Perform case sensitive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.FindTypeOrNamespaceByFullName(System.String)">
            <summary>
            Finds a type or namespace with the given full name inside all source files of this project.
            </summary>
            <param name="fullName">The full name of the element to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.FindTypeOrNamespaceByFullName(System.String,System.Boolean,System.Boolean)">
            <summary>
            Finds a type or namespace with the given full name inside all source files or assembly references 
            of this project.
            </summary>
            <param name="fullName">The full name of the element to find.</param>
            <param name="searchInAssemblies">Pass true to search inside assemblies if the element is not
            found inside project source files.</param>
            <param name="cache">Pass true to cache element.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.FindElementInsideDefaultNamespace(System.String)">
            <summary>
            Finds an element with the given full name inside default namespace in 
            all source files of this project.
            </summary>
            <param name="name">The full name of the element to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.FindElementInsideDefaultNamespace(System.String,System.Boolean)">
            <summary>
            Finds an element with the given full name inside default namespace in 
            all source files of this project.
            </summary>
            <param name="name">The full name of the element to find.</param>
            <param name="isCaseSensitive">Perform case sensitive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.FilterDiskFiles(System.String)">
            <summary>
            Returns collection of all disc files that contain the given name.
            </summary>
            <param name="name">The name to search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.FilterDiskFiles(System.Collections.Specialized.StringCollection)">
            <summary>
            Returns collection of all disc files that contain the given names.
            </summary>
            <param name="names">The names to search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.GetFileImportedNamespaces(DevExpress.CodeRush.StructuralParser.SourceFile)">
            <summary>
            Gets names of all imported namespaces.
            </summary>
            <param name="file">The source file to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.SetKind(System.String)">
            <summary>
            Sets the Kind of this project element.
            </summary>
            <param name="newValue">The new kind to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.SetProjectTypeGuids(System.String)">
            <summary>
            Sets the ProjectTypeGuides of this project element.
            </summary>
            <param name="newValue">The new value to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.SetLanguage(System.String)">
            <summary>
            Sets the Language of this project element.
            </summary>
            <param name="newValue">The new language to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.SetFullName(System.String)">
            <summary>
            Sets the full name of this project element.
            </summary>
            <param name="fullName">The new full name to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.RenameProject(System.String)">
            <summary>
            Renames the project.
            </summary>
            <param name="newName">The new name of the project.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.RenameProject(System.String,System.String)">
            <summary>
            Renames the project.
            </summary>
            <param name="newName">The new name of the project.</param>
            <param name="newFullName">The new full name of the project.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.ClearSourceModelCache">
            <summary>
            Clears project source model cache.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.RebuildSourceModelCache">
            <summary>
            Clears project source model cache and recreates it.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.RemoveReference(DevExpress.CodeRush.StructuralParser.AssemblyReference)">
            <summary>
            Removes assembly reference.
            </summary>
            <param name="assembly">The assembly to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.RemoveReference(VSLangProj.Reference)">
            <summary>
            Removes assembly reference.
            </summary>
            <param name="assembly">The assembly to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.ChangeReference(VSLangProj.Reference)">
            <summary>
            Changes the given reference.
            </summary>
            <param name="changeReference">The reference that was changed.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.ChangeReference(DevExpress.CodeRush.StructuralParser.AssemblyReference,VSLangProj.Reference)">
            <summary>
            Changes the given reference.
            </summary>
            <param name="assemblyReference">The old assembly reference.</param>
            <param name="changeReference">The new reference.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.HasReferenceTo(DevExpress.CodeRush.StructuralParser.AssemblyReference)">
            <summary>
            Returns true if this project element contains given assembly
            reference.
            </summary>
            <param name="assembly">The assembly reference to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.ClearAssemblies">
            <summary>
            Clears all assembly references.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.ContainsReference(DevExpress.CodeRush.StructuralParser.AssemblyReference)">
            <summary>
            Returns true if the assembly is already added.
            </summary>
            <param name="reference">The assembly reference to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.CompleteElementIfNeeded(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Completes the given element.
            </summary>
            <param name="element">The element to complete.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.CompleteElement(DevExpress.CodeRush.StructuralParser.IElement,System.Boolean)">
            <summary>
            Completes the given element.
            </summary>
            <param name="element">The element to complete.</param>
            <param name="full">Pass true to fully complete the element.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.RenameDirectory(System.String,System.String)">
            <summary>
            Renames directory using it's old and new full path.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.OpenDiskFile(System.String)">
            <summary>
            Opens the specified disc file and adds appropriate source file node into
            this project element node list.
            </summary>
            <param name="path">The path to the file to open.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.CloseDiskFile(System.String)">
            <summary>
            Closes the specified disc file and removes it from
            this project element.
            </summary>
            <param name="path">The path to the file to close.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.CloseDiskFile(DevExpress.CodeRush.StructuralParser.SourceFile)">
            <summary>
            Closes the specified disc file and removes it from
            this project element.
            </summary>
            <param name="file">The file to close.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.RemoveSourceFile(System.String)">
            <summary>
            Removes the specified source file from the node list
            of this project element.
            </summary>
            <param name="fullName">The full name of the source file to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.RemoveSourceFile(DevExpress.CodeRush.StructuralParser.SourceFile)">
            <summary>
            Removes the specified source file from the node list
            of this project element.
            </summary>
            <param name="file">The source file to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.RemoveImportedNamespace(System.String)">
            <summary>
            Removes imported namespace.
            </summary>
            <param name="nameSpace"></param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.RemoveImportedConfigNamespace(System.String)">
            <summary>
            Removes imported from config files namespace.
            </summary>
            <param name="nameSpace"></param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.SyncProjectSymbolsAfterWait">
            <summary>
            Synchronizes project symbols from the invalidated source files.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.SyncProjectSymbols">
            <summary>
            Synchronizes project symbols from the invalidated source files.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.BuildProjectSymbols(DevExpress.CodeRush.StructuralParser.SourceFile)">
            <summary>
            Builds project symbols from the given source file.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.BuildProjectSymbols">
            <summary>
            Builds project symbols from the project source files.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.ClearProjectSymbols">
            <summary>
            Clears all project symbols built with BuildProjectSymblos method.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.ClearProjectSymbols(DevExpress.CodeRush.StructuralParser.SourceFile)">
            <summary>
            Removes all symbols from the project symbols cache.
            </summary>
            <param name="proxy">The source file proxy declared symbols</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.GetFullPath(System.String)">
            <summary>
            Returns full path for the specified relative path.
            </summary>
            <param name="path">The relative path to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.GetFullPath(DevExpress.CodeRush.StructuralParser.SourceFile,System.String)">
            <summary>
            Returns full path for the specified relative path.
            </summary>
            <param name="relativeFile">The relative file to use.</param>
            <param name="path">The relative path to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.InvalidateProjectSymbols(System.String)">
            <summary>
            Invalidates all symbols for the given file.
            </summary>
            <param name="path">The file to invalidate.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.InvalidateProjectSymbols(DevExpress.CodeRush.StructuralParser.SourceFile)">
            <summary>
            Invalidates all symbols for the given source file.
            </summary>
            <param name="fileNode">The file node to invalidate.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.OnFarCacheChanged">
            <summary>
            Called when file symbols are invalidated.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.GetSourceFiles">
            <summary>
            Returns a collection of opened source files inside this project.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.GetOpenFiles">
            <summary>
            Returns a collection of opened source files inside this project.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.GetTypesOrNamespaces">
            <summary>
            Gets all root type or namespaces defined in all source files of the specified
            project.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.GetDirectlyVisibleMembersFilter">
            <summary>
            When override in derived class returns filter for elements that have directly visible
            members, e.g. Module elements in VisualBasic, Enumeration elements inside C++.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.StopFileWatcher">
            <summary>
            Stops file watcher for this project.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.StartFileWatcher">
            <summary>
            Starts file watcher for this project.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.GenerateUniqueBaseFileName(System.String)">
            <summary>
            Generates a unique base file name. All of the projects disk files are
            checked against the given base file name to ensure that it is unique. If it is not, a unique
            base file name is generated.
            </summary>
            <param name="baseFileName">The base file name to check.</param>
            <returns>Returns a unique version of the given base file name. If the base file name is
            already unique, it is returned without any modifications.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.GenerateUniqueBaseFileName(System.String,System.String)">
            <summary>
            Generates a unique base file name. All of the projects disk files are
            checked against the given base file name to ensure that it is unique. If it is not, a unique
            base file name is generated.
            </summary>
            <param name="baseFileName">The base file name to check.</param>
            <param name="ext">The extension to build the file path with.</param>
            <returns>Returns a unique version of the given base file name. If the base file name is
            already unique, it is returned without any modifications.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.SearchProjectForBaseFileName(System.String)">
            <summary>
            Searches the disk files of the project for a file with the specified base file name.
            </summary>
            <param name="baseFileName">The base file name to match.</param>
            <returns>Returns true if the base file name is found
            in the given project's disk files; otherwise, false is returned.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.SearchProjectForBaseFileName(System.String,System.String)">
            <summary>
            Searches the disk files of the project for a file with the specified base file name.
            </summary>
            <param name="baseFileName">The base file name to match.</param>
            <returns>Returns true if the base file name is found
            in the given project's disk files; otherwise, false is returned.</returns>
            <param name="ext">The extension to build the file path with.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.BuildFilePath(System.String)">
            <summary>
            Builds a file path from the project and base file name. The first supported
            file extension of the project is used.
            </summary>
            <param name="baseFileName">The base file name to build the file path with.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.BuildFilePath(System.String,System.String)">
            <summary>
            Builds a file path from the project and base file name. The first supported
            file extension of the project is used.
            </summary>
            <param name="baseFileName">The base file name to build the file path with.</param>
            <param name="ext">The extension to build the file path with.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.IsBuiltInType(System.String)">
            <summary>
            Returns true if the given type name is built in into the project language.
            </summary>
            <param name="name">The type name to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.IsBuiltInType(DevExpress.CodeRush.StructuralParser.IElement,System.String)">
            <summary>
            Returns true if the given type name is built in into the project language.
            </summary>
            <param name="element">The element to check.</param>
            <param name="name">The type name to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.GetFullTypeName(System.String)">
            <summary>
            Returns full type name for the given simple name.
            </summary>
            <param name="name">The simple name to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.GetFullTypeName(DevExpress.CodeRush.StructuralParser.IElement,System.String)">
            <summary>
            Returns full type name for the given simple name.
            </summary>
            <param name="element">The element to use.</param>
            <param name="name">The simple name to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.GetSimpleTypeName(System.String)">
            <summary>
            Returns simple type name for the given full name.
            </summary>
            <param name="name">The full name to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.GetSimpleTypeName(DevExpress.CodeRush.StructuralParser.IElement,System.String)">
            <summary>
            Returns simple type name for the given full name.
            </summary>
            <param name="element">The element to use.</param>
            <param name="name">The full name to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.Parse(DevExpress.CodeRush.StructuralParser.ParserContext,DevExpress.CodeRush.StructuralParser.ISourceReader)">
            <summary>
            Performs a parse of the given context using specified source reader.
            </summary>
            <param name="context">The context to parse.</param>
            <param name="reader">The reader to use.</param>
            <returns>Language element parsed.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.GetDefaultProjectSymbols">
            <summary>
            Returns default project symbols defined inside this project.
            </summary>
            <returns>LanguageElementCollection of default project symbols.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.GetStorageBasePath">
            <summary>
            Returns project specific storage base path.
            </summary>
            <returns>Returns project specific storage base path.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.GetProjectRoot">
            <summary>
            Returns project root directory path.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.GetStorage(System.String)">
            <summary>
            Returns solution specific decoupled storage for the given page.
            </summary>
            <param name="page">The page to create decoupled storage.</param>
            <returns>Returns solution specific decoupled storage for the given page.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.GetStorage(System.String,System.String)">
            <summary>
            Returns solution specific decoupled storage for the given page.
            </summary>
            <param name="category">The category to create decoupled storage.</param>
            <param name="page">The page to create decoupled storage.</param>
            <returns>Returns solution specific decoupled storage for the given page.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.SetDefines(System.String[])">
            <summary>
            Sets conditional compilation symbols.
            </summary>
            <param name="defines">The array of conditional compilation symbols.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.GetAssemblyAttributes">
            <summary>
            Collects all assembly attributes defined in this project.
            </summary>
            <returns>Assembly attributes defined in this project.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.IsCaseSensitive(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns true if the element language is case sensitive.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.DevExpress#CodeRush#StructuralParser#IProjectElement#FilterDiskFiles(System.String)">
            <summary>
            Returns collection of all disc files that contain the given name.
            </summary>
            <param name="name">The name to search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.DevExpress#CodeRush#StructuralParser#IProjectElement#FilterDiskFiles(System.Collections.Specialized.StringCollection)">
            <summary>
            Returns collection of all disc files that contain the given names.
            </summary>
            <param name="names">The names to search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.DevExpress#CodeRush#StructuralParser#IProjectElement#GetAllFiles">
            <summary>
            Returns collection of all disc files in current project.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.DevExpress#CodeRush#StructuralParser#IProjectElement#FindByFullNameInsideAssemblies(System.String,System.Boolean,System.Boolean)">
            <summary>
            Searches the the element with given fill name inside project assemblies.
            </summary>
            <param name="fullName">The full name of the element to find.</param>
            <param name="cache">Pass true to cache element.</param>
            <param name="caseSensitive">Perform case sensitive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.DevExpress#CodeRush#StructuralParser#IProjectElement#FindElementInsideDefaultNamespace(System.String)">
            <summary>
            Finds an element with the given full name inside default namespace in 
            all source files of this project.
            </summary>
            <param name="name">The full name of the element to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.DevExpress#CodeRush#StructuralParser#IProjectElement#FindElementInsideDefaultNamespace(System.String,System.Boolean)">
            <summary>
            Finds an element with the given full name inside default namespace in 
            all source files of this project.
            </summary>
            <param name="name">The full name of the element to find.</param>
            <param name="isCaseSensitive">Perform case sensitive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.DevExpress#CodeRush#StructuralParser#IProjectElement#FindElementInsideNamespace(System.String,System.String)">
            <summary>
            Finds an element with the given full name inside the specified namespace in 
            all source files of this project.
            </summary>
            <param name="namespaceFullName">The full name of the namespace to search in.</param>
            <param name="name">The full name of the element to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.DevExpress#CodeRush#StructuralParser#IProjectElement#FindElementInsideNamespace(System.String,System.String,System.Boolean)">
            <summary>
            Finds an element with the given full name inside the specified namespace in 
            all source files of this project.
            </summary>
            <param name="namespaceFullName">The full name of the namespace to search in.</param>
            <param name="name">The full name of the element to find.</param>
            <param name="isCaseSensitive">Perform case sensitive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.DevExpress#CodeRush#StructuralParser#IProjectElement#FindElementInsideParentNamespace(System.String,System.String)">
            <summary>
            Finds a type or namespace with the given full name inside all parents of the specified namespace in 
            all source files of this project.
            </summary>
            <param name="namespaceFullName">The full name of the namespace to search in.</param>
            <param name="name">The full name of the element to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.DevExpress#CodeRush#StructuralParser#IProjectElement#FindElementInsideParentNamespace(System.String,System.String,System.Boolean)">
            <summary>
            Finds a type or namespace with the given full name inside all parents of the specified namespace in 
            all source files of this project.
            </summary>
            <param name="namespaceFullName">The full name of the namespace to search in.</param>
            <param name="name">The full name of the element to find.</param>
            <param name="isCaseSensitive">Perform case sensitive search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.DevExpress#CodeRush#StructuralParser#IProjectElement#FindTypeOrNamespaceByFullName(System.String,System.Boolean,System.Boolean)">
            <summary>
            Finds a type or namespace with the given full name inside all source files or assembly references 
            of this project.
            </summary>
            <param name="fullName">The full name of the element to find.</param>
            <param name="searchInAssemblies">Pass true to search inside assemblies if the element is not
            found inside project source files.</param>
            <param name="cache">Pass true to cache element.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.DevExpress#CodeRush#StructuralParser#IProjectElement#GetFileImportedNamespaces(DevExpress.CodeRush.StructuralParser.ISourceFile)">
            <summary>
            Gets names if all imported namespaces.
            </summary>
            <param name="file">The source file to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.DevExpress#CodeRush#StructuralParser#IProjectElement#GetModuleMembers(System.String)">
            <summary>
            Gets collection of module members with the given name.
            </summary>
            <param name="name">The name of members</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.DevExpress#CodeRush#StructuralParser#IProjectElement#GetModules(System.String)">
            <summary>
            Gets collection of modules with the given name.
            </summary>
            <param name="name">The name of modules</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.DevExpress#CodeRush#StructuralParser#IProjectElement#FindDiskFile(System.String)">
            <summary>
            Returns disc file by its path.
            </summary>
            <param name="path">The path of the file to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectElement.DevExpress#CodeRush#StructuralParser#IProjectElement#FindDiskFile(DevExpress.CodeRush.StructuralParser.ISourceFile)">
            <summary>
            Returns disc file.
            </summary>
            <param name="file">The file to find.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.Kind">
            <summary>
            Gets the kind of this project element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.ProjectTypeGuids">
            <summary>
            Gets the ProjectTypeGuids of this project element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.FullName">
            <summary>
            Gets full name of the project.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.SourceFileCount">
            <summary>
            The number of source files.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.OpenFileCount">
            <summary>
            The number of open files.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.SourceFiles">
            <summary>
            SourceFiles stored inside the project.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.OpenFiles">
            <summary>
            Gets opened SourceFiles inside the project.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.DiskFileCount">
            <summary>
            The number of disc files.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.AllFilesCount">
            <summary>
            The number of all project files.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.DiskFiles">
            <summary>
            Disc files stored inside the project.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.AllFiles">
            <summary>
            Gets all files stored inside the project.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.AssemblyReferences">
            <summary>
            Returns all assemblies referenced by the given project element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.SourceModel">
            <summary>
            Gets source model cache for this project.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.ProjectSymbols">
            <summary>
            Gets all project symbols defined inside all code files.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.ImportedNamespaces">
            <summary>
            Returns namespaces implicitly imported into the project.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.ImportedConfigNamespaces">
            <summary>
            Returns namespaces implicitly imported from config files into the project.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.RootNamespace">
            <summary>
            Gets root namespace for this project.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.HasRootNamespace">
            <summary>
            Returns true if this project has root namespace.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.DefaultNamespace">
            <summary>
            Gets default namespace for this project.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.AssemblyName">
            <summary>
            Gets name of assembly for this project.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.HasDefaultNamespace">
            <summary>
            Returns true if this project has default namespace.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.IsCaseSensitiveLanguage">
            <summary>
            Returns true if the project language is case sensitive.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.IsWpfProject">
            <summary>
            Returns true if the project has WPF ProjectTypeGuid
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.IsSilverlightProject">
            <summary>
            Returns true if the project has Silverlight ProjectTypeGuid
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.IsMvc1Project">
            <summary>
            Returns true if the project has ASP.Net MVC 1.0 ProjectTypeGuid
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.IsMvc2Project">
            <summary>
            Returns true if the project has ASP.Net MVC 2 ProjectTypeGuid
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.IsMvc3Project">
            <summary>
            Returns true if the project has ASP.Net MVC 3 ProjectTypeGuid
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.IsMvcProject">
            <summary>
            Returns true if the project has ASP.Net MVC ProjectTypeGuid
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.Language">
            <summary>
            Gets project language.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.CLRSupport">
            <summary>
            Gets or sets common language runtime support for the current project.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.HasNativeCompileOptions">
            <summary>
            Gets or sets a value indicating if project will be compiled as native application.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.HasOldSyntaxCompileOptions">
            <summary>
            Gets or sets a value indicating if project will be compiled as old syntax.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.AllSourceFiles">
            <summary>
            This IEnumerable property can be used inside a foreach statement 
            to iterate through all opened source files in this project.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.AllOpenFiles">
            <summary>
            This IEnumerable property can be used inside a foreach statement 
            to iterate through all opened source files in this project.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.AllNamespaces">
            <summary>
            This IEnumerable property can be used inside a foreach statement
            to recursively iterate through all namespaces appearing inside this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.AllTypes">
            <summary>
            This IEnumerable property can be used inside a foreach statement
            to recursively iterate through all types appearing inside this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.UsingCodeModel">
            <summary>
            If true, we'll use the CodeModel to infer types. Note that the VB 
            code model is limited and does not work when grabbing types inside
            of referenced assemblies, so this should be false for VB work.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.HasProjectFile">
            <summary>
            Gets or sets value if the project has associated disk file.
            Web site projects doesn't have project files.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.IsWebSite">
            <summary>
            Defines wheather this project is WebSite.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.IsWebApplication">
            <summary>
            Defines wheather this project is WebApplication.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.DevExpress#CodeRush#StructuralParser#IProjectElement#Solution">
            <summary>
            Gets project solution.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.DevExpress#CodeRush#StructuralParser#IProjectElement#CanUseAspImportedNamespaces">
            <summary>
            Returns true if aspx imported namespaces can be used for type resolving.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.FriendAssemblyNames">
            <summary>
            Returns friend assembly names.
            Note: Internal members from current project are opened for these assemblies.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.Defines">
            <summary>
            Gets conditional compilation symbols defined 
            for this project.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectElement.ValueDefines">
            <summary>
            Gets conditional compilation symbols defined with values
            for this project.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.ProjectLoaderBase">
            <summary>
            Base project loader.
            </summary>
            <summary>
            Base project loader.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectLoaderBase.CreateProject(System.String)">
            <summary>
            Creates language specific project element with the given name.
            </summary>
            <param name="name">The name of the project.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectLoaderBase.IsSupported(EnvDTE.Project)">
            <summary>
            Returns true if the given project is supported.
            </summary>
            <param name="project">The project to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectLoaderBase.GetSourceProjectOutputFilePath(EnvDTE.Project)">
            <summary>
            Gets output path for the given project.
            </summary>
            <param name="project">The project to get path for.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectLoaderBase.SetAssemblyReferencePath(DevExpress.CodeRush.StructuralParser.AssemblyReference,VSLangProj.Reference)">
            <summary>
            Sets assembly reference path based on source project path.
            </summary>
            <param name="reference">The reference to obtain source path.</param>
            <param name="assemblyReference">The reference to set assembly path.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectLoaderBase.LoadAssemblyReferencies(DevExpress.CodeRush.StructuralParser.ProjectElement,EnvDTE.Project)">
            <summary>
            Loads all assembly references.
            </summary>
            <param name="projectElement">The project element to add assebmly references.</param>
            <param name="project">The project to get assebmly references.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectLoaderBase.LoadNamespaceImports(DevExpress.CodeRush.StructuralParser.ProjectElement,EnvDTE.Project)">
            <summary>
            Loads all imported namespaces.
            </summary>
            <param name="projectElement">The project element to add imported namespaces.</param>
            <param name="project">The project to get imported namespaces.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectLoaderBase.LoadRootNamespace(DevExpress.CodeRush.StructuralParser.ProjectElement,EnvDTE.Project)">
            <summary>
            Loads root namespace.
            </summary>
            <param name="projectElement">The project element to add root namespace.</param>
            <param name="project">The project to get root namespace.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectLoaderBase.GetLanguageId(EnvDTE.Project)">
            <summary>
            Gets project language id.
            </summary>
            <param name="project">The project to get language from.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectLoaderBase.LoadProject(EnvDTE.Project)">
            <summary>
            Loads the given project.
            </summary>
            <param name="project">The project to load.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectLoaderBase.GetProjectOutputFilePath(EnvDTE.Project)">
            <summary>
            Gets output path for the given project.
            </summary>
            <param name="project">The project to get path for.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectSourceModelCache.OnFarCacheInSync">
            <summary>
            Called when project symbols are in sync.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectSourceModelCache.GetXmlNamespaces(System.String)">
            <summary>
            Returns namepaces associated with xlm namespace
            </summary>
            <param name="xmlns">Xml namespace</param>
            <returns>Real namespaces</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectSourceModelCache.ClearCache">
            <summary>
            Clears all assembly references stored inside the cache.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectSourceModelCache.SyncProjectSymbols">
            <summary>
            Synchronizes project symbols from the invalidated source files.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectSourceModelCache.ForceBuildProjectSymbols(DevExpress.CodeRush.StructuralParser.SourceFile)">
            <summary>
            Synchronizes project symbols from the invalidated source files.
            </summary>
            <param name="fileNode">The file node to sync.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectSourceModelCache.BuildProjectSymbols(DevExpress.CodeRush.StructuralParser.SourceFile)">
            <summary>
            Builds project symbols from the given source file.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectSourceModelCache.BuildProjectSymbols(DevExpress.CodeRush.StructuralParser.SourceFile,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Builds project symbols from the given source file.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectSourceModelCache.BuildProjectSymbols">
            <summary>
            Builds project symbols from the project source files.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectSourceModelCache.ClearProjectSymbols">
            <summary>
            Clears all project symbols built with BuildProjectSymblos method.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectSourceModelCache.ClearProjectSymbols(DevExpress.CodeRush.StructuralParser.SourceFile)">
            <summary>
            Removes all symbols from the project symbols cache.
            </summary>
            <param name="proxy">The source file proxy declared symbols</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectSourceModelCache.InvalidateProjectSymbols(DevExpress.CodeRush.StructuralParser.SourceFile)">
            <summary>
            Invalidates all symbols for the given source file.
            </summary>
            <param name="fileNode">The file node to invalidate.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ProjectSourceModelCache.GetAllTypes">
            <summary>
            Gets all types from project symbols cache.
            </summary>
            <returns>List of all types from the project symbols cache.</returns>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectSourceModelCache.FriendAssemblyNames">
            <summary>
            Returns all friend assemblies names in project
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectSourceModelCache.IsCaseSensitive">
            <summary>
            Returns true if cache is case sensitive.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectSourceModelCache.KeepMethods">
            <summary>
            Defines if method nodes should be converted into the lite structure and stored in the cache.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectSourceModelCache.KeepStrings">
            <summary>
            Defines if strings should be stored in cache.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectSourceModelCache.Assemblies">
            <summary>
            Gets assemblies referenced by this project.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectSourceModelCache.ProjectSymbols">
            <summary>
            Gets all project symbols defined inside all code files.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ProjectSourceModelCache.RootProjectSymbols">
            <summary>
            Gets project symbols tree.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ResolvingCache.#ctor">
            <summary>
            Initializes a new instance of the ResolvingCache class.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ResolvingCache.AddElementType(DevExpress.CodeRush.StructuralParser.IElement,DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Adds element and its type to the cache.
            </summary>
            <param name="element">The element to add.</param>
            <param name="type">The type of the element to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ResolvingCache.GetElementType(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Gets resolved type of the given element.
            </summary>
            <param name="element">The element to resolve type.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ResolvingCache.ContainsElementType(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns true if the given element is contained inside the cache.
            </summary>
            <param name="element">The element to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ResolvingCache.AddResolvedElement(DevExpress.CodeRush.StructuralParser.IElement,DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Adds resolved element and it's type.
            </summary>
            <param name="element">The element to add.</param>
            <param name="type">The type of the element to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ResolvingCache.AddResolvedElement(DevExpress.CodeRush.StructuralParser.IElement,DevExpress.CodeRush.StructuralParser.IElement,System.Boolean)">
            <summary>
            Adds resolved element and it's type.
            </summary>
            <param name="element">The element to add.</param>
            <param name="type">The type of the element to add.</param>
            <param name="resolveMethodGroup">The value determining if it is necessary to resolve method group reference expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ResolvingCache.GetResolvedElement(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Gets resolved element.
            </summary>
            <param name="element">The element to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ResolvingCache.GetResolvedElement(DevExpress.CodeRush.StructuralParser.IElement,System.Boolean)">
            <summary>
            Gets resolved element.
            </summary>
            <param name="element">The element to resolve.</param>
            <param name="resolveMethodGroup">The value determining if it is necessary to resolve method group reference expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ResolvingCache.ContainsResolvedElement(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns true if the given element is contained inside the cache.
            </summary>
            <param name="element">The element to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ResolvingCache.ContainsResolvedElement(DevExpress.CodeRush.StructuralParser.IElement,System.Boolean)">
            <summary>
            Returns true if the given element is contained inside the cache.
            </summary>
            <param name="element">The element to check.</param>
            <param name="resolveMethodGroup">The value determining if it is necessary to resolve method group reference expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ResolvingCache.TryGetResolvedElement(DevExpress.CodeRush.StructuralParser.IElement,System.Boolean,DevExpress.CodeRush.StructuralParser.IElement@)">
            <summary>
            Returns true if the given element is contained inside the cache.
            </summary>
            <param name="element">The element to check.</param>
            <param name="resolveMethodGroup">The value determining if it is necessary to resolve method group reference expression.</param>
            <param name="resolvedElement">Gets resolved element from the cache.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ResolvingCache.TryGetMetaDataElement(System.String,DevExpress.CodeRush.StructuralParser.IElement@)">
            <summary>
            Returns true if the given element is contained inside the cache.
            </summary>
            <param name="fullName">The fullname of the element to get.</param>
            <param name="resolvedElement">Gets resolved meta data element from the cache.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ResolvingCache.AddElementModules(DevExpress.CodeRush.StructuralParser.IElement,DevExpress.CodeRush.StructuralParser.IElementCollection)">
            <summary>
            Adds all element modules to the cache.
            </summary>
            <param name="element">The element to add.</param>
            <param name="modules">The list of modules to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ResolvingCache.GetElementModules(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Gets element modules.
            </summary>
            <param name="element">The element to get modules for.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ResolvingCache.ContainsElementModules(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns true if the given element is contained inside the cache.
            </summary>
            <param name="element">The element to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ResolvingCache.AddModuleMembers(DevExpress.CodeRush.StructuralParser.IElement,System.String,DevExpress.CodeRush.StructuralParser.IElementCollection)">
            <summary>
            Adds all members to the cache.
            </summary>
            <param name="element">The element to add.</param>
            <param name="name">The element to add.</param>
            <param name="elements">The list of module members to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ResolvingCache.GetModuleMembers(DevExpress.CodeRush.StructuralParser.IElement,System.String,System.Boolean)">
            <summary>
            Gets element modules.
            </summary>
            <param name="element">The element to add.</param>
            <param name="name">The element to add.</param>
            <param name="caseSensitive">The case sensitive.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ResolvingCache.ContainsModuleMembers(DevExpress.CodeRush.StructuralParser.IElement,System.String,System.Boolean)">
            <summary>
            Returns true if the given element is contained inside the cache.
            </summary>
            <param name="element">The element to add.</param>
            <param name="name">The element to add.</param>
            <param name="caseSensitive">The case sensitive.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ResolvingCache.AddResolvedMethodGroup(DevExpress.CodeRush.StructuralParser.IElement,DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Adds resolved element and it's type.
            </summary>
            <param name="element">The element to add.</param>
            <param name="type">The type of the element to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ResolvingCache.GetResolvedMethodGroup(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Gets resolved element.
            </summary>
            <param name="element">The element to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ResolvingCache.ContainsResolvedMethodGroup(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns true if the given element is contained inside the cache.
            </summary>
            <param name="element">The element to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ResolvingCache.AddMetaDataElement(System.String,DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Adds resolved meta data element.
            </summary>
            <param name="fullName">The fullname of the element to add.</param>
            <param name="element">The element to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ResolvingCache.GetMetaDataElement(System.String)">
            <summary>
            Gets resolved meta data element.
            </summary>
            <param name="fullName">The fullname of the element to get.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ResolvingCache.ContainsMetaDataElement(System.String)">
            <summary>
            Returns true if the given element is contained inside the cache.
            </summary>
            <param name="fullName">The fullname of the element to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ResolvingCache.AddTypeRef(DevExpress.CodeRush.StructuralParser.IElement,DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Adds type reference element.
            </summary>
            <param name="type">The type to add.</param>
            <param name="reference">The reference to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ResolvingCache.GetTypeRef(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Gets type reference for the given element.
            </summary>
            <param name="type">The type to get.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ResolvingCache.ContainsTypeRef(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns true if the given type is contained inside the cache.
            </summary>
            <param name="type">The type to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ResolvingCache.Clear">
            <summary>
            Clears all items inside the cache.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.SchemaGenerator">
            <summary>
            Generates source code for the given xsd schema file.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SchemaGenerator.GenerateDataSetFromFile(System.String,System.IO.StreamWriter,System.String)">
            <summary>
            Generates data set from the specified xsd file.
            </summary>
            <param name="xsdFile">The path to an xsd file.</param>
            <param name="language">Tne language to use for generated code.</param>
            <param name="writer">The writer to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SchemaGenerator.GenerateDataSetFromFile(System.String,System.String)">
            <summary>
            Return data set from the specified xsd file.
            </summary>
            <param name="xsdFile">The path to an xsd file.</param>
            <param name="language">Tne language to use for generated code.</param>    
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SchemaGenerator.GenerateDataSetFromXsd(System.String,System.IO.TextWriter,System.String)">
            <summary>
            Generates data set from the specified xsd schema code.
            </summary>
            <param name="xsdCode">Tne xsd schema code.</param>
            <param name="language">Tne language to use for generated code.</param>
            <param name="writer">The writer to use.</param>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.SolutionElement">
            <summary>
            Represents a Visual Studio solution.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SolutionElement.#ctor">
            <summary>
            Creates a new instance of SolutionElement
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SolutionElement.#ctor(System.String)">
            <summary>
            Creates a new instance of SolutionElement with the given name.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SolutionElement.InvalidateAssemblyMetaData">
            <summary>
            Invalidates meta data used to retrieve types from referenced assemblies.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SolutionElement.AddProject(EnvDTE.Project)">
            <summary>
            Adds project to the solution.
            </summary>
            <param name="project">The project to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SolutionElement.AddProject(DevExpress.CodeRush.StructuralParser.ProjectElement)">
            <summary>
            Adds the specified project to the project list.
            </summary>
            <param name="project">The project to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SolutionElement.RemoveProject(System.String)">
            <summary>
            Removes the specified project from the project list.
            </summary>
            <param name="projectName">The short name of the project (e.g., the Name property of an EnvDTE.Project).</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SolutionElement.GetAssemblyCachePath(System.String)">
            <summary>
            Returns assembly cache path for the given assembly.
            </summary>
            <param name="assemblyPath">The assembly path to use.</param>
            <returns>Returns assembly cache path for the given assembly.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SolutionElement.RemoveProject(DevExpress.CodeRush.StructuralParser.ProjectElement)">
            <summary>
            Removes the specified project from the project list.
            </summary>
            <param name="project">The project to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SolutionElement.RenameSolution(System.String)">
            <summary>
            Renames the solution.
            </summary>
            <param name="newName">The new name to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SolutionElement.RenameSolution(EnvDTE.Solution)">
            <summary>
            Renames the solution.
            </summary>
            <param name="solution">The solution to get new name from.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SolutionElement.CloseSolution">
            <summary>
            Cleans up the solution.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SolutionElement.StopFileWatchers">
            <summary>
            Stops all file watchers for all projects.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SolutionElement.GetProject(System.String)">
            <summary>
            Gets the ProjectElement for the specified projectName.
            </summary>
            <param name="projectName">The short name of the project (e.g., the Name property of an EnvDTE.Project).</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SolutionElement.GetProjectByFullName(System.String)">
            <summary>
            Gets the ProjectElement for the specified fullName.
            </summary>
            <param name="fullName">The full name of the project (e.g., the FullName property of an EnvDTE.Project).</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SolutionElement.CloseProjects">
            <summary>
            Cleans up all projects inside the solution.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SolutionElement.FindSourceFile(System.String)">
            <summary>
            Searches and returns SourceFile with the given fileName.
            </summary>
            <param name="fileName">The name of the file to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SolutionElement.CompleteElementIfNeeded(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Completes given element if needed.
            </summary>
            <param name="element">The element to complete.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SolutionElement.CompleteElement(DevExpress.CodeRush.StructuralParser.LanguageElement,System.Boolean)">
            <summary>
            Completes the given element.
            </summary>
            <param name="element">The element to complete.</param>
            <param name="full">Pass true to fully complete the element.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SolutionElement.InvalidateResolvingCache">
            <summary>
            Invalidates all resolving caches for all solution projects.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SolutionElement.ClearResolvingCache">
            <summary>
            Clears resolving cache for the solution.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SolutionElement.Clone(DevExpress.CodeRush.StructuralParser.ElementCloneOptions)">
            <summary>
            Clones this element.
            </summary> 
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SolutionElement.GetStorageBasePath">
            <summary>
            Returns solution specific storage base path.
            </summary>
            <returns>Returns solution specific storage base path.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SolutionElement.GetSolutionRoot">
            <summary>
            Returns solution root directory path.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SolutionElement.GetStorage(System.String)">
            <summary>
            Returns solution specific decoupled storage for the given page.
            </summary>
            <param name="page">The page to create decoupled storage.</param>
            <returns>Returns solution specific decoupled storage for the given page.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SolutionElement.GetStorage(System.String,System.String)">
            <summary>
            Returns solution specific decoupled storage for the given page.
            </summary>
            <param name="category">The category to create decoupled storage.</param>
            <param name="page">The page to create decoupled storage.</param>
            <returns>Returns solution specific decoupled storage for the given page.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SolutionElement.FindProjectByName(System.String)">
            <summary>
            Searches for the project with the given name.
            </summary>
            <param name="projectName">The name of the probject to find.</param>
            <returns>Returns ProjectElement instance with the given name.</returns>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.SolutionElement.Name">
            <summary>
            Gets or sets solution name.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.SolutionElement.ProjectElements">
            <summary>
            Gets project elements for the solution.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.SolutionElement.ElementType">
            <summary>
            Gets element type.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.SolutionElement.AllProjects">
            <summary>
            This IEnumerable property can be used inside a foreach statement 
            to iterate through all projects inside this solution.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.SolutionElement.AllSourceFiles">
            <summary>
            This IEnumerable property can be used inside a foreach statement 
            to iterate through all open files declared in this solution.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.SolutionElement.AllOpenFiles">
            <summary>
            This IEnumerable property can be used inside a foreach statement 
            to iterate through all open files declared in this solution.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.SolutionElement.AllFiles">
            <summary>
            This IEnumerable property can be used inside a foreach statement 
            to iterate through all files declared in this solution.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.SolutionElement.AllNamespaces">
            <summary>
            This IEnumerable property can be used inside a foreach statement
            to recursively iterate through all namespaces appearing inside this element.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.SolutionElement.AllTypes">
            <summary>
            This IEnumerable property can be used inside a foreach statement
            to recursively iterate through all types appearing inside this element.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceFileManager.AddDiskFile(System.String)">
            <summary>
            Adds disk file to the manager.
            </summary>
            <param name="path">The path to the file to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceFileManager.AddDiskFiles(System.String[])">
            <summary>
            Adds disk files to the manager.
            </summary>
            <param name="files">The files to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceFileManager.RemoveDiskFile(System.String)">
            <summary>
            Removes disk file from the manager.
            </summary>
            <param name="path">The path to the file to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceFileManager.RenameDiskFile(System.String,System.String)">
            <summary>
            Rename disk file.
            </summary>
            <param name="oldPath">The path to the file to rename.</param>
            <param name="newPath">The new path of the file.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceFileManager.FindDiskFile(System.String)">
            <summary>
            Finds disk file by the given path.
            </summary>
            <param name="path">The path to the file to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceFileManager.FindDiskFile(DevExpress.CodeRush.StructuralParser.SourceFile)">
            <summary>
            Finds disk file proxy by the given source file object.
            </summary>
            <param name="file">The file to find proxy.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceFileManager.ContainsFile(System.String)">
            <summary>
            Returns true if this manager contains the specified disk file.
            </summary>
            <param name="path">The path to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceFileManager.AddDiscFile(System.String)">
            <summary>
            Adds disk files to the manager.
            </summary>
            <param name="path">The path to the file to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceFileManager.AddDiscFiles(System.String[])">
            <summary>
            Adds disk files to the manager.
            </summary>
            <param name="files">The files to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceFileManager.FindDiscFile(System.String)">
            <summary>
            Finds disc file by the given path.
            </summary>
            <param name="path">The path to the file to find.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceFileManager.FindDiscFile(DevExpress.CodeRush.StructuralParser.SourceFile)">
            <summary>
            Finds a disk file proxy by the given source file object.
            </summary>
            <param name="file">The file to find proxy.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceFileManager.RemoveDiscFile(System.String)">
            <summary>
            Removes disc file from the manager.
            </summary>
            <param name="path">The path to the file to remove.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceFileManager.RenameDiscFile(System.String,System.String)">
            <summary>
            Renames the specified disk file.
            </summary>
            <param name="oldPath">The path to the file to rename.</param>
            <param name="newPath">The new path of the file.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.SourceFileManager.DiscFiles">
            <summary>
            Gets all disk files.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.SourceFileManager.DiskFiles">
            <summary>
            Gets all disk files.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Query.AnonymousType.SplitOnMembers">
            <summary>
            Defines if current type can be splitted after translation.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceTreeModificationRule.Supports(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Checks the given language element and returns true if this rule can be applied.
            </summary>
            <param name="element">The element to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ISourceTreeModificationRule.Execute(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Applies rule for specified element. 
            </summary>
            <param name="element">The element to process.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ISourceTreeModificationRule.EnumerationMode">
            <summary>
            Defines SourceTree enumeration mode.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeModifier.#ctor">
            <summary>
            Initializes a new instance of the QueryExpressionTranslator class.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeModifier.Translate(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Translates the specified element into another by applying specified rules.
            </summary>
            <param name="element">The element to translate</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.QueryExpressionTranslator.#ctor">
            <summary>
            Initializes a new instance of the QueryExpressionTranslator class.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.QueryExpressionTranslator.Translate(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Translates the specified element into another by applying specified rules.
            </summary>
            <param name="element">The element to translate</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Query.QueryExpressionTranslator.SimplifySelectExpressions">
            <summary>
            Defines if degenerate queries should be simplified. 
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Query.QueryExpressionTranslator.IteratorBinder">
            <summary>
            Gets binder to register iterators. 
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.QueryTranslationRule.Supports(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Checks the given language element and returns true if this rule can be applied.
            </summary>
            <param name="element">The element to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.QueryTranslationRule.Execute(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Applies translation rule for specified element. 
            </summary>
            <param name="element">The element to process.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.Query.QueryTranslationRule.Translator">
            <summary>
            Gets translator containing current rule.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.AddSelectRule.#ctor(DevExpress.CodeRush.StructuralParser.Query.QueryExpressionTranslator)">
            <summary>
            Creates new instance of AddSelectRule.
            </summary>
            <param name="translator">Gets translator containing current rule.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.AddSelectRule.Supports(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Checks the given language element and returns true if this rule can be applied.
            </summary>
            <param name="element">The element to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.AddSelectRule.Execute(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Applies translation rule for specified element. 
            </summary>
            <param name="element">The element to process.</param>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.Query.AggregateOperatorRule">
            <summary>
            Summary description for AggregateOperatorRule.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.Query.AggregateQueryRule">
            <summary>
            Summary description for AggregateQueryRule.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.AggregateQueryRule.#ctor(DevExpress.CodeRush.StructuralParser.Query.QueryExpressionTranslator)">
            <summary>
            Creates new instance of AggregateQueryRule.
            </summary>
            <param name="translator">Gets translator containing current rule.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.AggregateQueryRule.Supports(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Checks the given language element and returns true if this rule can be applied.
            </summary>
            <param name="element">The element to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.AggregateQueryRule.Execute(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Applies translation rule for specified element. 
            </summary>
            <param name="element">The element to process.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.AggregateOperatorRule.#ctor(DevExpress.CodeRush.StructuralParser.Query.QueryExpressionTranslator)">
            <summary>
            Creates new instance of AggregateOperatorRule.
            </summary>
            <param name="translator">Gets translator containing current rule.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.AggregateOperatorRule.Supports(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Checks the given language element and returns true if this rule can be applied.
            </summary>
            <param name="element">The element to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.AggregateOperatorRule.Execute(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Applies translation rule for specified element. 
            </summary>
            <param name="element">The element to process</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.DegenerateRule.#ctor(DevExpress.CodeRush.StructuralParser.Query.QueryExpressionTranslator)">
            <summary>
            Creates new instance of SelectRule.
            </summary>
            <param name="translator">Gets translator containing current rule.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.DegenerateRule.Supports(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Defines if current rule supports for specified element.
            </summary>
            <param name="element">The element to check rule for</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.DegenerateRule.Execute(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Applies translation rule for specified element. 
            </summary>
            <param name="element">The element to process</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.DistinctRule.#ctor(DevExpress.CodeRush.StructuralParser.Query.QueryExpressionTranslator)">
            <summary>
            Creates new instance of DistinctRule.
            </summary>
            <param name="translator">Gets translator containing current rule.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.DistinctRule.Supports(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Defines if current rule supports for specified element.
            </summary>
            <param name="element">The element to check rule for</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.DistinctRule.Execute(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Applies translation rule for specified element. 
            </summary>
            <param name="element">The element to process</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.ExplicitRangeVariableTypeRule.#ctor(DevExpress.CodeRush.StructuralParser.Query.QueryExpressionTranslator)">
            <summary>
            Creates new instance of ExplicitRangeVariableTypeRule.
            </summary>
            <param name="translator">Gets translator containing current rule.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.ExplicitRangeVariableTypeRule.Supports(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Checks the given language element and returns true if this rule can be applied.
            </summary>
            <param name="element">The element to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.ExplicitRangeVariableTypeRule.Execute(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Applies translation rule for specified element. 
            </summary>
            <param name="element">The element to process.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.FromLetWhereJoinOrderbyRule.#ctor(DevExpress.CodeRush.StructuralParser.Query.QueryExpressionTranslator)">
            <summary>
            Creates new instance of FromLetWhereJoinOrderbyRule.
            </summary>
            <param name="translator">Gets translator containing current rule.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.FromLetWhereJoinOrderbyRule.Supports(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Checks the given language element and returns true if this rule can be applied.
            </summary>
            <param name="element">The element to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.FromLetWhereJoinOrderbyRule.Execute(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Applies translation rule for specified element. 
            </summary>
            <param name="element">The element to process.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.FromRule.#ctor(DevExpress.CodeRush.StructuralParser.Query.QueryExpressionTranslator)">
            <summary>
            Creates new instance of FromRule.
            </summary>
            <param name="translator">Gets translator containing current rule.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.FromRule.Supports(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Checks the given language element and returns true if this rule can be applied.
            </summary>
            <param name="element">The element to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.FromRule.Execute(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Applies translation rule for specified element. 
            </summary>
            <param name="element">The element to process.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.GroupByRule.#ctor(DevExpress.CodeRush.StructuralParser.Query.QueryExpressionTranslator)">
            <summary>
            Creates new instance of GroupByRule.
            </summary>
            <param name="translator">Gets translator containing current rule.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.GroupByRule.Supports(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Defines if current rule supports for specified element.
            </summary>
            <param name="element">The element to check rule for</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.GroupByRule.Execute(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Applies translation rule for specified element. 
            </summary>
            <param name="element">The element to process</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.GroupRule.#ctor(DevExpress.CodeRush.StructuralParser.Query.QueryExpressionTranslator)">
            <summary>
            Creates new instance of GroupRule.
            </summary>
            <param name="translator">Gets translator containing current rule.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.GroupRule.Supports(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Defines if current rule supports for specified element.
            </summary>
            <param name="element">The element to check rule for</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.GroupRule.Execute(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Applies translation rule for specified element. 
            </summary>
            <param name="element">The element to process</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.JoinRule.#ctor(DevExpress.CodeRush.StructuralParser.Query.QueryExpressionTranslator)">
            <summary>
            Creates new instance of JoinRule.
            </summary>
            <param name="translator">Gets translator containing current rule.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.JoinRule.Supports(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Defines if current rule supports for specified element.
            </summary>
            <param name="element">The element to check rule for</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.JoinRule.Execute(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Applies translation rule for specified element. 
            </summary>
            <param name="element">The element to process</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.LetRule.#ctor(DevExpress.CodeRush.StructuralParser.Query.QueryExpressionTranslator)">
            <summary>
            Creates new instance of LetRule.
            </summary>
            <param name="translator">Gets translator containing current rule.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.LetRule.Supports(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Defines if current rule supports for specified element.
            </summary>
            <param name="element">The element to check rule for</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.LetRule.Execute(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Applies translation rule for specified element. 
            </summary>
            <param name="element">The element to process</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.OrderByRule.#ctor(DevExpress.CodeRush.StructuralParser.Query.QueryExpressionTranslator)">
            <summary>
            Creates new instance of OrderByRule.
            </summary>
            <param name="translator">Gets translator containing current rule.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.OrderByRule.Supports(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Defines if current rule supports for specified element.
            </summary>
            <param name="element">The element to check rule for</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.OrderByRule.Execute(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Applies translation rule for specified element. 
            </summary>
            <param name="element">The element to process</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.RepalceContinuationsRule.#ctor(DevExpress.CodeRush.StructuralParser.Query.QueryExpressionTranslator)">
            <summary>
            Creates new instance of RepalceContinuationsRule.
            </summary>
            <param name="translator">Gets translator containing current rule.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.RepalceContinuationsRule.Supports(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Defines if current rule supports for specified element.
            </summary>
            <param name="element">The element to check rule for</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.RepalceContinuationsRule.Execute(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Applies translation rule for specified element. 
            </summary>
            <param name="element">The element to process</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.SelectRule.#ctor(DevExpress.CodeRush.StructuralParser.Query.QueryExpressionTranslator)">
            <summary>
            Creates new instance of DegenerateQueryExpressionsRule.
            </summary>
            <param name="translator">Gets translator containing current rule.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.SelectRule.Supports(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Checks the given language element and returns true if this rule can be applied.
            </summary>
            <param name="element">The element to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.SelectRule.Execute(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Applies translation rule for specified element. 
            </summary>
            <param name="element">The element to process.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.SkipRule.#ctor(DevExpress.CodeRush.StructuralParser.Query.QueryExpressionTranslator)">
            <summary>
            Creates new instance of SkipRule.
            </summary>
            <param name="translator">Gets translator containing current rule.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.SkipRule.Supports(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Defines if current rule supports for specified element.
            </summary>
            <param name="element">The element to check rule for</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.SkipRule.Execute(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Applies translation rule for specified element. 
            </summary>
            <param name="element">The element to process</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.SkipWhileRule.#ctor(DevExpress.CodeRush.StructuralParser.Query.QueryExpressionTranslator)">
            <summary>
            Creates new instance of SkipWhileRule.
            </summary>
            <param name="translator">Gets translator containing current rule.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.SkipWhileRule.Supports(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Defines if current rule supports for specified element.
            </summary>
            <param name="element">The element to check rule for</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.SkipWhileRule.Execute(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Applies translation rule for specified element. 
            </summary>
            <param name="element">The element to process</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.SplitFromDeclarationsRule.#ctor(DevExpress.CodeRush.StructuralParser.Query.QueryExpressionTranslator)">
            <summary>
            Creates new instance of SplitFromDeclarationsRule.
            </summary>
            <param name="translator">Gets translator containing current rule.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.SplitFromDeclarationsRule.Supports(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Checks the given language element and returns true if this rule can be applied.
            </summary>
            <param name="element">The element to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.SplitFromDeclarationsRule.Execute(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Applies translation rule for specified element. 
            </summary>
            <param name="element">The element to process.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.SplitLetDeclarationsRule.#ctor(DevExpress.CodeRush.StructuralParser.Query.QueryExpressionTranslator)">
            <summary>
            Creates new instance of SplitLetDeclarationsRule.
            </summary>
            <param name="translator">Gets translator containing current rule.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.SplitLetDeclarationsRule.Supports(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Checks the given language element and returns true if this rule can be applied.
            </summary>
            <param name="element">The element to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.SplitLetDeclarationsRule.Execute(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Applies translation rule for specified element. 
            </summary>
            <param name="element">The element to process.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.TakeRule.#ctor(DevExpress.CodeRush.StructuralParser.Query.QueryExpressionTranslator)">
            <summary>
            Creates new instance of TakeRule.
            </summary>
            <param name="translator">Gets translator containing current rule.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.TakeRule.Supports(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Defines if current rule supports for specified element.
            </summary>
            <param name="element">The element to check rule for</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.TakeRule.Execute(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Applies translation rule for specified element. 
            </summary>
            <param name="element">The element to process</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.TakeWhileRule.#ctor(DevExpress.CodeRush.StructuralParser.Query.QueryExpressionTranslator)">
            <summary>
            Creates new instance of TakeWhileRule.
            </summary>
            <param name="translator">Gets translator containing current rule.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.TakeWhileRule.Supports(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Defines if current rule supports for specified element.
            </summary>
            <param name="element">The element to check rule for</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.TakeWhileRule.Execute(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Applies translation rule for specified element. 
            </summary>
            <param name="element">The element to process</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.WhereRule.#ctor(DevExpress.CodeRush.StructuralParser.Query.QueryExpressionTranslator)">
            <summary>
            Creates new instance of WhereRule.
            </summary>
            <param name="translator">Gets translator containing current rule.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.WhereRule.Supports(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Defines if current rule supports for specified element.
            </summary>
            <param name="element">The element to check rule for</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.Query.WhereRule.Execute(DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Applies translation rule for specified element. 
            </summary>
            <param name="element">The element to process</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.TypeInferenceContext.TypeVariables">
            <summary>
            Gets type variables
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.TypeInferenceContext.InferenceStepFailed">
            <summary>
            Gets or sets inference step result.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.ResolvedReference">
            <summary>
            Contains reference and it's declaration.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ResolvedReference.#ctor(DevExpress.CodeRush.StructuralParser.IElement,DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Creates new instance of ResolvedRefernece class.
            </summary>
            <param name="reference">The reference resolved.</param>
            <param name="declaration">The declaration found.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ResolvedReference.Reference">
            <summary>
            Gets resolved reference.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ResolvedReference.Declaration">
            <summary>
            Gets found declaration.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ResolvedReferenceCollection.IndexOf(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns index of the resolved reference for the given element.
            </summary>
            <param name="reference">The reference to search/</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ResolvedReferenceCollection.IsTypeReference(DevExpress.CodeRush.StructuralParser.ITypeElement[],DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns true if the specified reference is a type declaration.
            </summary>
            <param name="types">The list of types to use.</param>
            <param name="reference">The reference to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ResolvedReferenceCollection.Filter(DevExpress.CodeRush.StructuralParser.IElementFilter)">
            <summary>
            Filters this collection using the specified filter.
            </summary>
            <param name="filter">The filter to use.</param>
            <returns>New ResolvedReferenceCollection instance filtered using the given filter.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ScopeReferencesResolver.StopResolving">
            <summary>
            Stops resolving in the scope.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ScopeReferencesResolver.Resolve(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Resolves all elements inside the given scope.
            </summary>
            <param name="scope">The scope for resolving.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ScopeReferencesResolver.Resolve(DevExpress.CodeRush.StructuralParser.IElement,System.Boolean)">
            <summary>
            Resolves all elements inside the given scope.
            </summary>
            <param name="scope">The scope for resolving.</param>
            <param name="useProjectCache">Value determining if project cache should be used when resolving</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ScopeReferencesResolver.Resolve(DevExpress.CodeRush.StructuralParser.IElement,System.Boolean,System.Boolean)">
            <summary>
            Resolves all elements inside the given scope.
            </summary>
            <param name="scope">The scope for resolving.</param>
            <param name="useProjectCache">Value determining if project cache should be used when resolving</param>
            <param name="resolveLocalsOnly">Value determining if only local declarations should be reolved</param>    
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ScopeReferencesResolver.Resolve(DevExpress.CodeRush.StructuralParser.IElement,System.Boolean,DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves all elements inside the given scope.
            </summary>
            <param name="scope">The scope for resolving.</param>
            <param name="useProjectCache">Value determining if project cache should be used when resolving</param>
            <param name="externalResolver">Custom external resolver to use. Callers are resposible for calling BeginResolve and EndResolve methods.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ScopeReferencesResolver.Resolve(DevExpress.CodeRush.StructuralParser.IElement,System.Boolean,System.Boolean,DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Resolves all elements inside the given scope.
            </summary>
            <param name="scope">The scope for resolving.</param>
            <param name="useProjectCache">Value determining if project cache should be used when resolving</param>
            <param name="resolveLocalsOnly">Value determining if only local declarations should be reolved</param>
            <param name="externalResolver">Custom external resolver to use. Callers are resposible for calling BeginResolve and EndResolve methods.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ScopeReferencesResolver.Resolve(DevExpress.CodeRush.StructuralParser.IElement,System.Boolean,System.Boolean,DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,DevExpress.CodeRush.StructuralParser.IElementFilter)">
            <summary>
            Resolves all elements inside the given scope.
            </summary>
            <param name="scope">The scope for resolving.</param>
            <param name="useProjectCache">Value determining if project cache should be used when resolving</param>
            <param name="resolveLocalsOnly">Value determining if only local declarations should be reolved</param>
            <param name="externalResolver">Custom external resolver to use. Callers are resposible for calling BeginResolve and EndResolve methods.</param>
            <param name="declarationsFilter">Filter of resolved declarations.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ScopeReferencesResolver.GetDeclaration(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Searches for declaration for the given element.
            </summary>
            <param name="element">The element reference to get declaration.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ScopeReferencesResolver.GetLocalDeclaration(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Searches for local declaration for the given element.
            </summary>
            <param name="element">The element reference to get local declaration.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ScopeReferencesResolver.GetFieldDeclaration(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Searches for field declaration for the given element.
            </summary>
            <param name="element">The element reference to get field declaration.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ScopeReferencesResolver.IsLocalDeclaration(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns true if given element is local declaration.
            </summary>
            <param name="element">The element to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ScopeReferencesResolver.IsFieldDeclaration(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns true if given element is field declaration.
            </summary>
            <param name="element">The element to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ScopeReferencesResolver.IsLocalOrFieldDeclaration(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns true if given element is local or field declaration.
            </summary>
            <param name="element">The element to check.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ScopeReferencesResolver.Filter">
            <summary>
            Gets or sets resolver filter used to filter out references.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ScopeReferencesResolver.Resolver">
            <summary>
            Gets active source tree resolver.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ScopeReferencesResolver.ElementsCache">
            <summary>
            Gets resolved elements cache.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ScopeReferencesResolver.Flags">
            <summary>
            Gets or sets resolver flags.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ScopeReferencesResolver.ResolvedResultCache">
            <summary>
            Gets or sets ready cache for the resolved elements.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ScopeResolveResult.#ctor">
            <summary>
            Creates new ScopeResolveResult instance.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ScopeResolveResult.#ctor(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Creates new ScopeResolveResult instance.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ScopeResolveResult.AddDeclaration(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Adds declaration to the list.
            </summary>
            <param name="declaration">The declaration to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ScopeResolveResult.AddReference(DevExpress.CodeRush.StructuralParser.ResolvedReference)">
            <summary>
            Adds resolved reference to the list.
            </summary>
            <param name="reference">The reference to add.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ScopeResolveResult.GetReferenceDeclarationMapping">
            <summary>
            Returns ReferenceDeclarationMapping table for this result.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ScopeResolveResult.GetDeclarationReferencesMapping">
            <summary>
            Returns DeclarationReferencesMapping table for this result.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ScopeResolveResult.ApplyFilter(DevExpress.CodeRush.StructuralParser.IElementFilter)">
            <summary>
            Applies filter to the scope resolve result.
            </summary>
            <param name="filter">The filter to apply</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ScopeResolveResult.IsEventHandler(DevExpress.CodeRush.StructuralParser.IMethodElement)">
            <summary>
            Checks if method is event handler.
            </summary>
            <param name="method">The method to check.</param>
            <returns>Returns true if member is event handler.</returns>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ScopeResolveResult.CalculationWasAborted">
            <summary>
            Shows that result can contain invalid data because the calculation was aborted.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ScopeResolveResult.Declarations">
            <summary>
            Gets all declarations inside this scope resolve result.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ScopeResolveResult.References">
            <summary>
            Gets all resolved references.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ScopeResolveResult.Scope">
            <summary>
            Gets scope.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ScopeResolveResult.ContainsSingleType">
            <summary>
            Returns true if scope contains single type.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.MappingBase">
            <summary>
            Represents a collection of pairs that are organized based on the hash code of the key.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.MappingBase.#ctor">
            <summary>
            Creates new declaration reference mapping instance.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.MappingBase.Add(DevExpress.CodeRush.StructuralParser.IElement,DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Adds an element with the specified key and value into the mapping.
            </summary>
            <param name="value">The value of the element to add.</param>
            <param name="key">The key of the element to add. </param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.MappingBase.Remove(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Removes the element with the specified key from the mapping.
            </summary>
            <param name="key">The key of the element to remove. </param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.MappingBase.Contains(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Determines whether the mapping contains a specific key.
            </summary>
            <param name="key">The key to locate in the mapping. </param>
            <returns>True if the mapping contains an element with the specified key; otherwise, false.</returns>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.MappingBase.GetEnumerator">
            <summary>
            Returns enumerator that iterates through the mapping.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.MappingBase.Clear">
            <summary>
            Removes all elements from the mapping.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.MappingBase.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the mapping elements to a one-dimensional array at the specified index.
            </summary>
            <param name="array">The one-dimensional array.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.MappingBase.Count">
            <summary>
            Gets the number of key/value pairs contained in the mapping.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.MappingBase.Values">
            <summary>
            Gets collection containing the values in the mapping.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.MappingBase.Keys">
            <summary>
            Gets collection containing the keys in the mapping.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.MappingBase.IsReadOnly">
            <summary>
            Gets a value indicating whether the mapping is read-only.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.MappingBase.IsFixedSize">
            <summary>
            Gets a value indicating whether the mapping has a fixed size.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.MappingBase.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the mapping is synchronized (thread safe).
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.MappingBase.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the mapping.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.ReferenceDeclarationMapping">
            <summary>
            Represents a collection of reference/declaration pairs that are organized based on the hash code of the key.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ReferenceDeclarationMapping.#ctor">
            <summary>
            Creates new reference declaration mapping instance.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ReferenceDeclarationMapping.Add(DevExpress.CodeRush.StructuralParser.IElement,DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Adds an element with the specified key and value into the mapping.
            </summary>
            <param name="value">The value of the element to add.</param>
            <param name="key">The key of the element to add. </param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ReferenceDeclarationMapping.Item(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Gets or sets the value associated with the specified key.
            </summary>
            <param name="key">The key whose value to get or set. </param>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.DeclarationReferencesMapping">
            <summary>
            Represents a collection of declaration/references pairs that are organized based on the hash code of the key.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.DeclarationReferencesMapping.#ctor">
            <summary>
            Creates new  declaration references mapping instance.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.DeclarationReferencesMapping.Add(DevExpress.CodeRush.StructuralParser.IElement,DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Adds an element with the specified key and value into the mapping.
            </summary>
            <param name="value">The value of the element to add.</param>
            <param name="key">The key of the element to add. </param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.DeclarationReferencesMapping.Item(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Gets or sets the value associated with the specified key.
            </summary>
            <param name="key">The key whose value to get or set. </param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.BeginResolve">
            <summary>
            Creates internal resolver caches to speed up subsequent resolving operations.
            This method is useful if you plan to make several 
            repeated resolve calls. You must guarantee a 
            call to EndResolve() (e.g., placed in a finally block) so normal resolving can resume. 
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.EndResolve">
            <summary>
            Marks the end of resolving session.
            You must call this once for every call to BeginResolve().
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.FindTypeOrNamespace(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Searches for type or namespace.
            </summary>
            <param name="element">The element to start searching from.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.FindParentType(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Gets parent type for the given expression.
            </summary>
            <param name="element">The expression to get parent type for.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.FindPrototype(DevExpress.CodeRush.StructuralParser.IBaseVariable)">
            <summary>
            Returns prototype for the given variable.
            </summary>
            <param name="variable">The variable to search for a prototype.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.FindPrototypes(DevExpress.CodeRush.StructuralParser.IBaseVariable)">
            <summary>
            Returns prototypes for the given variable.
            </summary>
            <param name="variable">The variable to search for prototypes.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.FindPrototype(DevExpress.CodeRush.StructuralParser.IMethodElement)">
            <summary>
            Returns prototype for the given method.
            </summary>
            <param name="method">The method to search for a prototype.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.FindPrototypes(DevExpress.CodeRush.StructuralParser.IMethodElement)">
            <summary>
            Returns prototypes for the given method.
            </summary>
            <param name="method">The method to search for a prototypes.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.IsImplicitVariableReference(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns true if the given element is reference to implicitly declared variable.
            </summary>
            <param name="reference">The element to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.IsAttributeMemberAssignment(DevExpress.CodeRush.StructuralParser.IExpression)">
            <summary>
            Returns true if the given expression is used inside left side of attribute field or property assigment.
            </summary>
            <param name="expression">The expression to check.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.FindLocalDeclaration(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Finds local declaration for specified element reference if it is possible.
            The language element passed to this method should be determined through a call 
            that either guarantees a parse will happen if needed, or the element was 
            acquired directly after calling CodeRush.Language.ParseIfNeeded().
            </summary>
            <param name="element">The element for which to find declaration.</param>
            <returns>Returns declaration for the element reference.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.FindLocalDeclaration(DevExpress.CodeRush.StructuralParser.IElement,System.String)">
            <summary>
            Finds local declaration with the given name, starting from the specified element 
            reference if it is possible.
            The language element passed to this method should be determined through a call 
            that either guarantees a parse will happen if needed, or the element was 
            acquired directly after calling CodeRush.Language.ParseIfNeeded().
            </summary>
            <param name="start">The start element.</param>
            <param name="name">The name of the declaration to search.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.FindFieldDeclaration(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Finds field declaration for specified element reference if it is possible.
            The language element passed to this method should be determined through a call 
            that either guarantees a parse will happen if needed, or the element was 
            acquired directly after calling CodeRush.Language.ParseIfNeeded().
            </summary>
            <param name="element">Element for which to find declaration.</param>
            <returns>Returns declaration for the element reference.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.FindConstructors(DevExpress.CodeRush.StructuralParser.IConstructorInitializerElement,DevExpress.CodeRush.StructuralParser.IExpressionCollection)">
            <summary>
            Finds constructors.
            </summary>
            <param name="element">The ConstructorInitializerElement element</param>
            <param name="arguments">The arguments of constructor</param>	
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.FindConstructors(DevExpress.CodeRush.StructuralParser.IMethodReferenceExpression,DevExpress.CodeRush.StructuralParser.IExpressionCollection)">
            <summary>
            Finds constructors.
            </summary>
            <param name="reference">The method reference element</param>
            <param name="arguments">The arguments of constructor</param>	
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.FindMatchingMember(DevExpress.CodeRush.StructuralParser.IElementCollection,DevExpress.CodeRush.StructuralParser.IMemberElement)">
            <summary>
            Searches matching member inside the given collection.
            </summary>
            <param name="members">The collection of elements to search.</param>
            <param name="member">The member to search matching element.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.FindMatchingMember(DevExpress.CodeRush.StructuralParser.IElementCollection,DevExpress.CodeRush.StructuralParser.IMemberElement,System.Boolean)">
            <summary>
            Searches matching member inside the given collection.
            </summary>
            <param name="members">The collection of elements to search.</param>		
            <param name="member">The member to search matching element.</param>
            <param name="ignoreInterfaceName">The value determining if explicit interface name should be ignored.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.ResolveAncestorInterfaces(DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Returns a list of all ancestor interfaces for the
            given element.
            </summary>
            <param name="type">The element to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.ResolveTypeAncestor(DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Returns ancestor of the given type declaration.
            </summary>
            <param name="type">The element to find ancestor</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.ResolveBaseTypes(DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Returns ancestors of the given type declaration.
            </summary>
            <param name="type">The element to find ancestors.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.ResolveAllBaseTypes(DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Recursively collects all ancestors for the given type declaration.
            </summary>
            <param name="type">The element to get ancestors.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.ResolveList(DevExpress.CodeRush.StructuralParser.IElement,System.Collections.Specialized.StringCollection)">
            <summary>
            Resolves a list of elements starting from the given element.
            </summary>
            <param name="element">The element to start from.</param>
            <param name="simpleNames">The list of names to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.ResolveFirst(DevExpress.CodeRush.StructuralParser.IElement,System.String)">
            <summary>
            Returns the first found element.
            </summary>
            <param name="start">The element to start from.</param>
            <param name="fullName">The full name of decalration to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.ResolveFirst(DevExpress.CodeRush.StructuralParser.IElement,System.String,System.Boolean)">
            <summary>
            Returns the first found element.
            </summary>
            <param name="start">The element to start from.</param>
            <param name="fullName">The full name of decalration to resolve.</param>
            <param name="isNamespace">The value determining if members should be skipped.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.ResolveElementType(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Resolves the type of the given element.
            </summary>
            <param name="element">The element to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.ResolveCoreType(DevExpress.CodeRush.StructuralParser.IElement,System.String)">
            <summary>
            Searches for type with a given type name inside core assembly.
            </summary>
            <param name="start">The start element.</param>
            <param name="typeName">The type name to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.ResolveType(DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Searches for type by the given type reference.
            </summary>
            <param name="typeRef">The type reference to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.ResolveType(DevExpress.CodeRush.StructuralParser.IElement,System.String)">
            <summary>
            Searches for type with a given type name, starting from the given element.
            </summary>
            <param name="start">The start element.</param>
            <param name="typeName">The type name to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.ResolveTypes(DevExpress.CodeRush.StructuralParser.IElement,System.String,System.Boolean)">
            <summary>
            Searches for all available types with a given type name, starting from the given element.
            </summary>
            <param name="start">The start element.</param>
            <param name="typeName">The type name to resolve.</param>
            <param name="breakOnFirstFound">Specifies a value whether to stop searching when a first item is found.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.ResolveBaseTypesList(DevExpress.CodeRush.StructuralParser.IElement,System.Collections.Specialized.StringCollection)">
            <summary>
            Resolves a list of elements starting from the given element.
            </summary>
            <param name="element">The element to start from.</param>
            <param name="simpleNames">The list of names to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.ResolveBaseTypesList(DevExpress.CodeRush.StructuralParser.IElement,DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression[])">
            <summary>
            Resolves a list of elements starting from the given element.
            </summary>
            <param name="element">The element to start from.</param>
            <param name="bases">The list of expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.ResolveBaseTypesList(DevExpress.CodeRush.StructuralParser.IElement,DevExpress.CodeRush.StructuralParser.ITypeReferenceExpressionCollection)">
            <summary>
            Resolves a list of elements starting from the given element.
            </summary>
            <param name="element">The element to start from.</param>
            <param name="bases">The list of expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.IElementReferenceExpression)">
            <summary>
            Resolves given expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.IElement,System.String)">
            <summary>
            Returns a list of found elements with the given full name.
            </summary>
            <param name="start">The element to start from.</param>
            <param name="fullName">The full name of the element to find.</param>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.IElement,System.String,System.Boolean)">
            <summary>
            Returns a list of found elements with the given full name.
            </summary>
            <param name="start">The element to start from.</param>
            <param name="fullName">The full name of the element to find.</param>
            <param name="isNamespace">The value determining if members should be skipped.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.FindRealization(DevExpress.CodeRush.StructuralParser.IMethodPrototypeElement)">
            <summary>
            Returns method realization for the given method prototype.
            </summary>
            <param name="prototype">The method prototype to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.FindAttributeDeclaration(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Searches for attribute declaration.
            </summary>
            <param name="element">The element to search for declaration.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.IAddressOfExpression)">
            <summary>
            Resolves given expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.IArrayCreateExpression)">
            <summary>
            Resolves given expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.IArgumentDirectionExpression)">
            <summary>
            Resolves argument direction expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.IAssignmentExpression)">
            <summary>
            Resolves assignment expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.ICheckedExpression)">
            <summary>
            Resolves given expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.IDefaultValueExpression)">
            <summary>
            Resolves given expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.IArrayInitializerExpression)">
            <summary>
            Resolves given expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.IAnonymousMethodExpression)">
            <summary>
            Resolves given expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.ILambdaExpression)">
            <summary>
            Resolves given expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.IConditionalExpression)">
            <summary>
            Resolves given expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.IUncheckedExpression)">
            <summary>
            Resolves given expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.ILogicalInversionExpression)">
            <summary>
            Resolves logical inversion expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.ILogicalOperationExpression)">
            <summary>
            Resolves logical operation expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.IRelationalOperationExpression)">
            <summary>
            Resolves relational operation expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.IParenthesizedExpression)">
            <summary>
            Resolves expression in parens.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.IObjectCreationExpression)">
            <summary>
            Resolves object creation expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.ITypeCastExpression)">
            <summary>
            Resolves type cast expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.IConditionalTypeCast)">
            <summary>
            Resolves type cast expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.ITypeCheckExpression)">
            <summary>
            Resolves type check expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Resolves type reference expression. Returns declaration for base type expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.IElement,DevExpress.CodeRush.StructuralParser.PrimitiveType)">
            <summary>
            Resolves primitive type.
            </summary>
            <param name="start">The element to start from.</param>
            <param name="type">The primitive type to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.IPrimitiveExpression)">
            <summary>
            Resolves primitive expression.
            </summary>
            <param name="expression">The primitive expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.IThisReferenceExpression)">
            <summary>
            Resolves this reference expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.IBaseReferenceExpression)">
            <summary>
            Resolves base reference expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.IIndexerExpression)">
            <summary>
            Resolves indexer expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.ITypeOfIsExpression)">
            <summary>
            Resolves given expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.ISizeOfExpression)">
            <summary>
            Resolves given expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.IUnaryOperatorExpression)">
            <summary>
            Resolves given expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.IBinaryOperatorExpression)">
            <summary>
            Resolves given expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.ITypeOfExpression)">
            <summary>
            Resolves given expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.IMethodReferenceExpression)">
            <summary>
            Resolves given expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.IMethodCallExpression)">
            <summary>
            Resolves given expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.IIsNotExpression)">
            <summary>
            Resolves given expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.IMemberAccessExpression)">
            <summary>
            Resolves given expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.IQueryExpression)">
            <summary>
            Resolves given expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.IMemberInitializerExpression)">
            <summary>
            Resolves given expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.IXmlNode)">
            <summary>
            Resolves given expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.IXmlExpression)">
            <summary>
            Resolves given expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.IXmlElementReferenceExpression)">
            <summary>
            Resolves given expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.IXmlAttributeReferenceExpression)">
            <summary>
            Resolves given expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.IGetXmlNamespaceOperator)">
            <summary>
            Resolves given expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Resolve(DevExpress.CodeRush.StructuralParser.IMarkupExtensionExpression)">
            <summary>
            Resolves given expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.ResolveExpression(DevExpress.CodeRush.StructuralParser.IExpression)">
            <summary>
            Resolves given expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.ResolveExpression(DevExpress.CodeRush.StructuralParser.IExpression,System.Boolean)">
            <summary>
            Resolves given expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
            <param name="resolveMethodGroup">The value determining if it is necessary to resolve method group reference expression.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.ResolveMethodGroup(DevExpress.CodeRush.StructuralParser.IExpression)">
            <summary>
            Resolves method group expression.
            </summary>
            <param name="expression">The expression to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.ResolveNullable(DevExpress.CodeRush.StructuralParser.ITypeReferenceExpression)">
            <summary>
            Resolves nullable type refernece and uses base type as type parameter
            for the resolved System.Nullable.
            </summary>
            <param name="typeRef">The type reference to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.SetResolvingCache(DevExpress.CodeRush.StructuralParser.IResolvingCache)">
            <summary>
            Sets resolving cache.
            </summary>
            <param name="cache">The cache to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.GetResolvingCache">
            <summary>
            Returns resolving cache.
            </summary>
            <returns>Returns resolving cache.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.GetDeclaration(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns declaration for the given language element.
            </summary>
            <param name="element">The element to find declaration for.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.SetActiveProject(DevExpress.CodeRush.StructuralParser.IProjectElement)">
            <summary>
            Sets active project.
            </summary>
            <param name="project">The active project.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.Options">
            <summary>
            Gets source tree resolver options.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.SourceModelService">
            <summary>
            Gets source model service.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.SourceTreeResolver.LanguageService">
            <summary>
            Gets language service.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.UsingDeclarationResolver">
            <summary>
            Using statement declaration resolver.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.UsingDeclarationResolver.#ctor">
            <summary>
            Initializes a new instance of the UsingDeclarationResolver class.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.UsingDeclarationResolver.ResolveUsing(DevExpress.CodeRush.StructuralParser.IElement,DevExpress.CodeRush.StructuralParser.IElement,System.String)">
            <summary>
            Resolves the given using declaration.
            </summary>
            <param name="start">The using declaration or namespace reference.</param>
            <param name="expression">The start expression.</param>
            <param name="name">The name to resolve.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.UsingDeclarationResolver.ResolveUsing(DevExpress.CodeRush.StructuralParser.IElement,DevExpress.CodeRush.StructuralParser.IElement,System.String,System.Boolean)">
            <summary>
            Resolves the given using declaration.
            </summary>
            <param name="start">The using declaration or namespace reference.</param>
            <param name="expression">The start expression.</param>
            <param name="name">The name to resolve.</param>
            <param name="caseSensitive">Perform case sesitive resolving.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.UsingDeclarationResolver.Resolve(DevExpress.CodeRush.StructuralParser.IElement,DevExpress.CodeRush.StructuralParser.IElement,System.String)">
            <summary>
            Resolves the given name starting from the specified start element.
            </summary>
            <param name="start">The start element.</param>
            <param name="expression">The start expression.</param>
            <param name="name">The name to resolve.</param>
            <returns>Resolved element</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.UsingDeclarationResolver.ResolveFileLevel(DevExpress.CodeRush.StructuralParser.IElement,DevExpress.CodeRush.StructuralParser.IElement,System.String)">
            <summary>
            Resolves the given name starting from the specified start element.
            Only file level using declarations are resolved.
            </summary>
            <param name="start">The start element.</param>
            <param name="expression">The start expression.</param>
            <param name="name">The name to resolve.</param>
            <returns>Resolved element</returns>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.UsingDeclarationResolver.Resolver">
            <summary>
            Gets source tree resolver instance.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.UsingDeclarationResolver.ResolveUsingNamespace">
            <summary>
            Gets or sets value indicating if "using namepsace" declarations should
            be resolved.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SearcherBase.OnStart(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Triggers the Start event.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SearcherBase.OnReferenceFound(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Triggers the ReferenceFound event.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SearcherBase.OnStop(DevExpress.CodeRush.StructuralParser.IElementCollection)">
            <summary>
            Triggers the Stop event.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SearcherBase.Supports(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Checks if this searcher supports the specified declaration.
            </summary>
            <param name="declaration">The element to check.</param>
            <returns>True if declaration is supported by the searcher.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SearcherBase.Search(DevExpress.CodeRush.StructuralParser.IElement,DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Performs references search for the specified declaration in the given scope.
            </summary>
            <param name="scope">The scope to search in.</param>
            <param name="declaration">The declaration to search for references.</param>
            <returns>List of all references to the specified declaration.</returns>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SearcherBase.Search(DevExpress.CodeRush.StructuralParser.IElement,DevExpress.CodeRush.StructuralParser.IElement,System.Int32)">
            <summary>
            Performs references search for the specified declaration in the given scope.
            </summary>
            <param name="scope">The scope to search in.</param>
            <param name="declaration">The declaration to search for references.</param>
            <param name="count">The number of references to search, pass 0 to get all references.</param>
            <returns>List of all references to the specified declaration.</returns>		
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SearcherBase.Search(DevExpress.CodeRush.StructuralParser.IElementCollection,DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Performs references search for the specified declaration in the given scope list.
            </summary>
            <param name="scopes">The scope list to search in.</param>
            <param name="declaration">The declaration to search for references.</param>
            <returns>List of all references to the specified declaration.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SearcherBase.Search(DevExpress.CodeRush.StructuralParser.IElementCollection,DevExpress.CodeRush.StructuralParser.IElement,System.Int32)">
            <summary>
            Performs references search for the specified declaration in the given scope list.
            </summary>
            <param name="scopes">The scope list to search in.</param>
            <param name="declaration">The declaration to search for references.</param>
            <param name="count">The number of references to search, pass 0 to get all references.</param>
            <returns>List of all references to the specified declaration.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SearcherBase.Visit(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Handles the given element.
            </summary>
            <param name="element">The element to handle</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.SearcherBase.Resolver">
            <summary>
            Gets source tree resolver.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.SearcherBase.ActiveProject">
            <summary>
            Gets active project.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.SearcherBase.CheckOverriden">
            <summary>
            Defines if overriden declaration should be taken into accound when searching.
            </summary>
        </member>
        <member name="E:DevExpress.CodeRush.StructuralParser.SearcherBase.Start">
            <summary>
            Fired when async search is started.
            </summary>
        </member>
        <member name="E:DevExpress.CodeRush.StructuralParser.SearcherBase.ReferenceFound">
            <summary>
            Fired when reference is found during async search.
            </summary>
        </member>
        <member name="E:DevExpress.CodeRush.StructuralParser.SearcherBase.Stop">
            <summary>
            Fired when async search is stopped.
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.DescendantReferencesSearcher">
            <summary>
            Performs searching of descendant refererences to the given type desclaration.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.DescendantReferencesSearcher.#ctor(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver)">
            <summary>
            Creates new instance of the DescendantReferencesSearcher.
            </summary>
            <param name="resolver">The source tree resolver to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.DescendantReferencesSearcher.CheckChildren(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Defies if child nodes should be checked while serching.
            </summary>
            <param name="declaration">The declaration to check</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.DescendantReferencesSearcher.CheckElement(DevExpress.CodeRush.StructuralParser.IElement,DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Returns true if the given element is used as a base type reference.
            </summary>
            <param name="element">The element to check.</param>
            <param name="declaration">The type declaration.</param>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.ImplementedMemberSearcher">
            <summary>
            Performs search for implemented interface member.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ImplementedMemberSearcher.GetImplementedMembers(DevExpress.CodeRush.StructuralParser.IMemberElement)">
            <summary>
            Returns a collection of implemented interface members for the specified member.
            </summary>
            <param name="target">The target member to search implemented interface member.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ImplementedMemberSearcher.GetImplementedMembers(DevExpress.CodeRush.StructuralParser.IMemberElement,DevExpress.CodeRush.StructuralParser.LanguageElement)">
            <summary>
            Returns a collection of implemented interface members for the specified member.
            </summary>
            <param name="target">The target member to search implemented interface member.</param>
            <param name="scope">The scope for search</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.ImplementedMemberSearcher.Clear">
            <summary>
            Clear all fields ...
            </summary>
        </member>
        <member name="T:DevExpress.CodeRush.StructuralParser.PreprocessorDirectiveSearcher">
            <summary>
            Summary description for PreprocessorDirectiveSearcher.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.ReferenceSearcher.CheckOverriden">
            <summary>
            Defines if overriden declaration should be taken into accound when searching.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SharedImages.CreateImageList(System.String)">
            <summary>
            Creates an image list and fills it with the image strip at the specified resource.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SharedImages.Draw(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws the specified image on the Graphics object.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SharedImages.Draw(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            Draws the specified image on the Graphics object.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SharedImages.HighlightDraw(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws the specified image in reverse on the Graphics object.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.SharedImages.HighlightDraw(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            Draws the specified image in reverse on the Graphics object.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CommonElement.SetFakeNode(System.Boolean)">
            <summary>
            Sets IsFakeNode property to the given value.
            </summary>
            <param name="isFakeNode">The value to set.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CommonVisibilityElement.Is(System.String)">
            <summary>
            Returns true if Type of this element is the same as, or 
            descends from, the specified type.
            Returns false otherwise.
            </summary>
            <param name="fullTypeName">Full type name of the type to check.</param>
            <returns>
            Returns true if Type of this element is the same as, or 
            descends from, the specified type.
            Returns false otherwise.
            </returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CommonVisibilityElement.Is(DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Returns true if type of this element is the same as, or descends from, 
            the specified ITypeElement.
            Returns false otherwise.
            </summary>
            <param name="type">The ITypeElement to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CommonVisibilityElement.Is(System.Type)">
            <summary>
            Returns true if type of this element is the same as, or descends from, 
            the specified Type.
            Returns false otherwise.
            </summary>
            <param name="type">The Type to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CommonVisibilityElement.Is(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,System.String)">
            <summary>
            Returns true if this type element is the same as, or descends from, 
            the specified type.
            Returns false otherwise.
            </summary>
            <param name="resolver">The source tree resolver instance to use.</param>
            <param name="fullTypeName">The full name (e.g., "System.Drawing.Point") of 
            the type to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CommonMethod.IsInitializeComponent">
            <summary>
            Determines whether this method is InitializeComponent method
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CommonParameter.Is(System.String)">
            <summary>
            Returns true if Type of this element is the same as, or 
            descends from, the specified type.
            Returns false otherwise.
            </summary>
            <param name="fullTypeName">Full type name of the type to check.</param>
            <returns>
            Returns true if Type of this element is the same as, or 
            descends from, the specified type.
            Returns false otherwise.
            </returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CommonParameter.Is(DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Returns true if type of this element is the same as, or descends from, 
            the specified ITypeElement.
            Returns false otherwise.
            </summary>
            <param name="type">The ITypeElement to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CommonParameter.Is(System.Type)">
            <summary>
            Returns true if type of this element is the same as, or descends from, 
            the specified Type.
            Returns false otherwise.
            </summary>
            <param name="type">The Type to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CommonParameter.Is(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,System.String)">
            <summary>
            Returns true if this type element is the same as, or descends from, 
            the specified type.
            Returns false otherwise.
            </summary>
            <param name="resolver">The source tree resolver instance to use.</param>
            <param name="fullTypeName">The full name (e.g., "System.Drawing.Point") of 
            the type to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CommonTypeReferenceElement.Is(System.String)">
            <summary>
            Returns true if Type of this element is the same as, or 
            descends from, the specified type.
            Returns false otherwise.
            </summary>
            <param name="fullTypeName">Full type name of the type to check.</param>
            <returns>
            Returns true if Type of this element is the same as, or 
            descends from, the specified type.
            Returns false otherwise.
            </returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CommonTypeReferenceElement.Is(DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Returns true if type of this element is the same as, or descends from, 
            the specified ITypeElement.
            Returns false otherwise.
            </summary>
            <param name="type">The ITypeElement to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CommonTypeReferenceElement.Is(System.Type)">
            <summary>
            Returns true if type of this element is the same as, or descends from, 
            the specified Type.
            Returns false otherwise.
            </summary>
            <param name="type">The Type to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CommonTypeReferenceElement.Is(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,System.String)">
            <summary>
            Returns true if this type element is the same as, or descends from, 
            the specified type.
            Returns false otherwise.
            </summary>
            <param name="resolver">The source tree resolver instance to use.</param>
            <param name="fullTypeName">The full name (e.g., "System.Drawing.Point") of 
            the type to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CommonVariableDeclarationStatement.Is(System.String)">
            <summary>
            Returns true if Type of this element is the same as, or 
            descends from, the specified type.
            Returns false otherwise.
            </summary>
            <param name="fullTypeName">Full type name of the type to check.</param>
            <returns>
            Returns true if Type of this element is the same as, or 
            descends from, the specified type.
            Returns false otherwise.
            </returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CommonVariableDeclarationStatement.Is(DevExpress.CodeRush.StructuralParser.ITypeElement)">
            <summary>
            Returns true if type of this element is the same as, or descends from, 
            the specified ITypeElement.
            Returns false otherwise.
            </summary>
            <param name="type">The ITypeElement to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CommonVariableDeclarationStatement.Is(System.Type)">
            <summary>
            Returns true if type of this element is the same as, or descends from, 
            the specified Type.
            Returns false otherwise.
            </summary>
            <param name="type">The Type to compare against.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.CommonVariableDeclarationStatement.Is(DevExpress.CodeRush.StructuralParser.ISourceTreeResolver,System.String)">
            <summary>
            Returns true if this type element is the same as, or descends from, 
            the specified type.
            Returns false otherwise.
            </summary>
            <param name="resolver">The source tree resolver instance to use.</param>
            <param name="fullTypeName">The full name (e.g., "System.Drawing.Point") of 
            the type to compare against.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.TagPrefixInfo.Name">
            <summary>
            Gets or sets tag prefix name.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.TagPrefixInfo.Assembly">
            <summary>
            Gets or sets tag prefix assembly.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.TagPrefixInfo.Namespace">
            <summary>
            Gets or sets tag prefix namespace.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.TagPrefixInfo.HasSrcValue">
            <summary>
            Returns true if this tag prefix has src value.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.TagPrefixInfo.Src">
            <summary>
            Gets or sets src value.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.TagPrefixInfo.TagName">
            <summary>
            Gets or sets tag name.
            </summary>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.UpwardTreeEnumerator.#ctor(DevExpress.CodeRush.StructuralParser.IElement)">
            <summary>
            Initializes a new instance of the UpwardTreeEnumerator class.
            </summary>
            <param name="start">The start element.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.UpwardTreeEnumerator.#ctor(DevExpress.CodeRush.StructuralParser.IElement,DevExpress.CodeRush.StructuralParser.IElementFilter)">
            <summary>
            Initializes a new instance of the UpwardTreeEnumerator class.
            </summary>
            <param name="start">The start element.</param>
            <param name="filter">The filter to use.</param>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.WebConfigInfo.Create(DevExpress.CodeRush.StructuralParser.ProjectElement)">
            <summary>
            Creates new web config info for the given project element.
            </summary>
            <param name="project">The project element to create web config info for.</param>
            <returns>Returns newly created web config info for the given project element.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.WebConfigInfo.Create(DevExpress.CodeRush.StructuralParser.SourceFile)">
            <summary>
            Creates new web config info for the given file.
            </summary>
            <param name="file">The file to create web config info for.</param>
            <returns>Returns newly created web config info for the given file.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.WebConfigInfo.IsWebConfigFile(DevExpress.CodeRush.StructuralParser.SourceFile)">
            <summary>
            Returns true if given source file is web.config
            </summary>
            <param name="file">The source file to check.</param>
            <returns>Returns true if given source file is web.config</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.WebConfigInfo.GetGlobalConfigPath">
            <summary>
            Returns global config path.
            </summary>
            <returns>Returns global config path.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.WebConfigInfo.GetLocalConfigPaths(DevExpress.CodeRush.StructuralParser.ProjectElement)">
            <summary>
            Returns an array of web.config file paths inside the given project.
            </summary>
            <param name="project">The project to check.</param>
            <returns>Returns an array of web.config file paths inside the given project.</returns>
        </member>
        <member name="M:DevExpress.CodeRush.StructuralParser.WebConfigInfo.Add(DevExpress.CodeRush.StructuralParser.WebConfigInfo)">
            <summary>
            Adds all entries from the given info to this info.
            </summary>
            <param name="info">The info to add entries from.</param>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.WebConfigInfo.Assemblies">
            <summary>
            Gets imported namespaces.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.WebConfigInfo.ImportedNamespaces">
            <summary>
            Gets imported namespaces.
            </summary>
        </member>
        <member name="P:DevExpress.CodeRush.StructuralParser.WebConfigInfo.TagPrefixes">
            <summary>
            Gets tag prefixes dictionary.
            </summary>
        </member>
    </members>
</doc>
